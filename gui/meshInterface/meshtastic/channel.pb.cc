// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: meshtastic/channel.proto
// Protobuf C++ Version: 6.32.0

#include "meshtastic/channel.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace meshtastic {

inline constexpr ModuleSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_precision_{0u},
        is_client_muted_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleSettings::ModuleSettings(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModuleSettings_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleSettingsDefaultTypeInternal() {}
  union {
    ModuleSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleSettingsDefaultTypeInternal _ModuleSettings_default_instance_;

inline constexpr ChannelSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        psk_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        module_settings_{nullptr},
        channel_num_{0u},
        id_{0u},
        uplink_enabled_{false},
        downlink_enabled_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelSettings::ChannelSettings(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ChannelSettings_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChannelSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelSettingsDefaultTypeInternal() {}
  union {
    ChannelSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelSettingsDefaultTypeInternal _ChannelSettings_default_instance_;

inline constexpr Channel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        settings_{nullptr},
        index_{0},
        role_{static_cast< ::meshtastic::Channel_Role >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Channel::Channel(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Channel_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChannelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDefaultTypeInternal() {}
  union {
    Channel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDefaultTypeInternal _Channel_default_instance_;
}  // namespace meshtastic
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_meshtastic_2fchannel_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_meshtastic_2fchannel_2eproto = nullptr;
const ::uint32_t
    TableStruct_meshtastic_2fchannel_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::ChannelSettings, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::ChannelSettings, _impl_.channel_num_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ChannelSettings, _impl_.psk_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ChannelSettings, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ChannelSettings, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ChannelSettings, _impl_.uplink_enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ChannelSettings, _impl_.downlink_enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ChannelSettings, _impl_.module_settings_),
        3,
        0,
        1,
        4,
        5,
        6,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleSettings, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleSettings, _impl_.position_precision_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleSettings, _impl_.is_client_muted_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::Channel, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::Channel, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::Channel, _impl_.settings_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::Channel, _impl_.role_),
        1,
        0,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::meshtastic::ChannelSettings)},
        {17, sizeof(::meshtastic::ModuleSettings)},
        {24, sizeof(::meshtastic::Channel)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::meshtastic::_ChannelSettings_default_instance_._instance,
    &::meshtastic::_ModuleSettings_default_instance_._instance,
    &::meshtastic::_Channel_default_instance_._instance,
};
const char descriptor_table_protodef_meshtastic_2fchannel_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\030meshtastic/channel.proto\022\nmeshtastic\"\270"
    "\001\n\017ChannelSettings\022\027\n\013channel_num\030\001 \001(\rB"
    "\002\030\001\022\013\n\003psk\030\002 \001(\014\022\014\n\004name\030\003 \001(\t\022\n\n\002id\030\004 \001"
    "(\007\022\026\n\016uplink_enabled\030\005 \001(\010\022\030\n\020downlink_e"
    "nabled\030\006 \001(\010\0223\n\017module_settings\030\007 \001(\0132\032."
    "meshtastic.ModuleSettings\"E\n\016ModuleSetti"
    "ngs\022\032\n\022position_precision\030\001 \001(\r\022\027\n\017is_cl"
    "ient_muted\030\002 \001(\010\"\241\001\n\007Channel\022\r\n\005index\030\001 "
    "\001(\005\022-\n\010settings\030\002 \001(\0132\033.meshtastic.Chann"
    "elSettings\022&\n\004role\030\003 \001(\0162\030.meshtastic.Ch"
    "annel.Role\"0\n\004Role\022\014\n\010DISABLED\020\000\022\013\n\007PRIM"
    "ARY\020\001\022\r\n\tSECONDARY\020\002Bb\n\023com.geeksville.m"
    "eshB\rChannelProtosZ\"github.com/meshtasti"
    "c/go/generated\252\002\024Meshtastic.Protobufs\272\002\000"
    "b\006proto3"
};
static ::absl::once_flag descriptor_table_meshtastic_2fchannel_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_meshtastic_2fchannel_2eproto = {
    false,
    false,
    568,
    descriptor_table_protodef_meshtastic_2fchannel_2eproto,
    "meshtastic/channel.proto",
    &descriptor_table_meshtastic_2fchannel_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_meshtastic_2fchannel_2eproto::offsets,
    file_level_enum_descriptors_meshtastic_2fchannel_2eproto,
    file_level_service_descriptors_meshtastic_2fchannel_2eproto,
};
namespace meshtastic {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Channel_Role_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_meshtastic_2fchannel_2eproto);
  return file_level_enum_descriptors_meshtastic_2fchannel_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Channel_Role_internal_data_[] = {
    196608u, 0u, };
// ===================================================================

class ChannelSettings::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ChannelSettings>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ChannelSettings, _impl_._has_bits_);
};

ChannelSettings::ChannelSettings(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChannelSettings_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.ChannelSettings)
}
PROTOBUF_NDEBUG_INLINE ChannelSettings::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::meshtastic::ChannelSettings& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        psk_(arena, from.psk_),
        name_(arena, from.name_) {}

ChannelSettings::ChannelSettings(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ChannelSettings& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChannelSettings_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ChannelSettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.module_settings_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.module_settings_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, channel_num_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, channel_num_),
           offsetof(Impl_, downlink_enabled_) -
               offsetof(Impl_, channel_num_) +
               sizeof(Impl_::downlink_enabled_));

  // @@protoc_insertion_point(copy_constructor:meshtastic.ChannelSettings)
}
PROTOBUF_NDEBUG_INLINE ChannelSettings::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        psk_(arena),
        name_(arena) {}

inline void ChannelSettings::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, module_settings_),
           0,
           offsetof(Impl_, downlink_enabled_) -
               offsetof(Impl_, module_settings_) +
               sizeof(Impl_::downlink_enabled_));
}
ChannelSettings::~ChannelSettings() {
  // @@protoc_insertion_point(destructor:meshtastic.ChannelSettings)
  SharedDtor(*this);
}
inline void ChannelSettings::SharedDtor(MessageLite& self) {
  ChannelSettings& this_ = static_cast<ChannelSettings&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.psk_.Destroy();
  this_._impl_.name_.Destroy();
  delete this_._impl_.module_settings_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ChannelSettings::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ChannelSettings(arena);
}
constexpr auto ChannelSettings::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ChannelSettings),
                                            alignof(ChannelSettings));
}
constexpr auto ChannelSettings::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ChannelSettings_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ChannelSettings::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ChannelSettings>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ChannelSettings::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ChannelSettings>(), &ChannelSettings::ByteSizeLong,
              &ChannelSettings::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ChannelSettings, _impl_._cached_size_),
          false,
      },
      &ChannelSettings::kDescriptorMethods,
      &descriptor_table_meshtastic_2fchannel_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ChannelSettings_class_data_ =
        ChannelSettings::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ChannelSettings::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ChannelSettings_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ChannelSettings_class_data_.tc_table);
  return ChannelSettings_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 39, 2>
ChannelSettings::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelSettings, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ChannelSettings_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::ChannelSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 channel_num = 1 [deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChannelSettings, _impl_.channel_num_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(ChannelSettings, _impl_.channel_num_)}},
    // bytes psk = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ChannelSettings, _impl_.psk_)}},
    // string name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(ChannelSettings, _impl_.name_)}},
    // fixed32 id = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 4, 0, PROTOBUF_FIELD_OFFSET(ChannelSettings, _impl_.id_)}},
    // bool uplink_enabled = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ChannelSettings, _impl_.uplink_enabled_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(ChannelSettings, _impl_.uplink_enabled_)}},
    // bool downlink_enabled = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ChannelSettings, _impl_.downlink_enabled_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(ChannelSettings, _impl_.downlink_enabled_)}},
    // .meshtastic.ModuleSettings module_settings = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(ChannelSettings, _impl_.module_settings_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 channel_num = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(ChannelSettings, _impl_.channel_num_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bytes psk = 2;
    {PROTOBUF_FIELD_OFFSET(ChannelSettings, _impl_.psk_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // string name = 3;
    {PROTOBUF_FIELD_OFFSET(ChannelSettings, _impl_.name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // fixed32 id = 4;
    {PROTOBUF_FIELD_OFFSET(ChannelSettings, _impl_.id_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // bool uplink_enabled = 5;
    {PROTOBUF_FIELD_OFFSET(ChannelSettings, _impl_.uplink_enabled_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool downlink_enabled = 6;
    {PROTOBUF_FIELD_OFFSET(ChannelSettings, _impl_.downlink_enabled_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .meshtastic.ModuleSettings module_settings = 7;
    {PROTOBUF_FIELD_OFFSET(ChannelSettings, _impl_.module_settings_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleSettings>()},
  }},
  {{
    "\32\0\0\4\0\0\0\0"
    "meshtastic.ChannelSettings"
    "name"
  }},
};
PROTOBUF_NOINLINE void ChannelSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.ChannelSettings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.psk_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.module_settings_ != nullptr);
      _impl_.module_settings_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000078U) != 0) {
    ::memset(&_impl_.channel_num_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.downlink_enabled_) -
        reinterpret_cast<char*>(&_impl_.channel_num_)) + sizeof(_impl_.downlink_enabled_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ChannelSettings::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ChannelSettings& this_ = static_cast<const ChannelSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ChannelSettings::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ChannelSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.ChannelSettings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 channel_num = 1 [deprecated = true];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_channel_num() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_channel_num(), target);
    }
  }

  // bytes psk = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_psk().empty()) {
      const ::std::string& _s = this_._internal_psk();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  // string name = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.ChannelSettings.name");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // fixed32 id = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
          4, this_._internal_id(), target);
    }
  }

  // bool uplink_enabled = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_uplink_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_uplink_enabled(), target);
    }
  }

  // bool downlink_enabled = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (this_._internal_downlink_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_downlink_enabled(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .meshtastic.ModuleSettings module_settings = 7;
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.module_settings_, this_._impl_.module_settings_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.ChannelSettings)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ChannelSettings::ByteSizeLong(const MessageLite& base) {
  const ChannelSettings& this_ = static_cast<const ChannelSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ChannelSettings::ByteSizeLong() const {
  const ChannelSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.ChannelSettings)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    // bytes psk = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_psk().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_psk());
      }
    }
    // string name = 3;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // .meshtastic.ModuleSettings module_settings = 7;
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.module_settings_);
    }
    // uint32 channel_num = 1 [deprecated = true];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_channel_num() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_channel_num());
      }
    }
    // fixed32 id = 4;
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_id() != 0) {
        total_size += 5;
      }
    }
    // bool uplink_enabled = 5;
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_uplink_enabled() != 0) {
        total_size += 2;
      }
    }
    // bool downlink_enabled = 6;
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_downlink_enabled() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ChannelSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChannelSettings*>(&to_msg);
  auto& from = static_cast<const ChannelSettings&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.ChannelSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_psk().empty()) {
        _this->_internal_set_psk(from._internal_psk());
      } else {
        if (_this->_impl_.psk_.IsDefault()) {
          _this->_internal_set_psk("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.module_settings_ != nullptr);
      if (_this->_impl_.module_settings_ == nullptr) {
        _this->_impl_.module_settings_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.module_settings_);
      } else {
        _this->_impl_.module_settings_->MergeFrom(*from._impl_.module_settings_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_channel_num() != 0) {
        _this->_impl_.channel_num_ = from._impl_.channel_num_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_uplink_enabled() != 0) {
        _this->_impl_.uplink_enabled_ = from._impl_.uplink_enabled_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_downlink_enabled() != 0) {
        _this->_impl_.downlink_enabled_ = from._impl_.downlink_enabled_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelSettings::CopyFrom(const ChannelSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.ChannelSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ChannelSettings::InternalSwap(ChannelSettings* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.psk_, &other->_impl_.psk_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChannelSettings, _impl_.downlink_enabled_)
      + sizeof(ChannelSettings::_impl_.downlink_enabled_)
      - PROTOBUF_FIELD_OFFSET(ChannelSettings, _impl_.module_settings_)>(
          reinterpret_cast<char*>(&_impl_.module_settings_),
          reinterpret_cast<char*>(&other->_impl_.module_settings_));
}

::google::protobuf::Metadata ChannelSettings::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModuleSettings::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ModuleSettings>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModuleSettings, _impl_._has_bits_);
};

ModuleSettings::ModuleSettings(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleSettings_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.ModuleSettings)
}
ModuleSettings::ModuleSettings(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleSettings& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleSettings_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ModuleSettings::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ModuleSettings::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_precision_),
           0,
           offsetof(Impl_, is_client_muted_) -
               offsetof(Impl_, position_precision_) +
               sizeof(Impl_::is_client_muted_));
}
ModuleSettings::~ModuleSettings() {
  // @@protoc_insertion_point(destructor:meshtastic.ModuleSettings)
  SharedDtor(*this);
}
inline void ModuleSettings::SharedDtor(MessageLite& self) {
  ModuleSettings& this_ = static_cast<ModuleSettings&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ModuleSettings::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModuleSettings(arena);
}
constexpr auto ModuleSettings::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ModuleSettings),
                                            alignof(ModuleSettings));
}
constexpr auto ModuleSettings::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModuleSettings_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModuleSettings::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModuleSettings>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModuleSettings::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModuleSettings>(), &ModuleSettings::ByteSizeLong,
              &ModuleSettings::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModuleSettings, _impl_._cached_size_),
          false,
      },
      &ModuleSettings::kDescriptorMethods,
      &descriptor_table_meshtastic_2fchannel_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ModuleSettings_class_data_ =
        ModuleSettings::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ModuleSettings::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModuleSettings_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModuleSettings_class_data_.tc_table);
  return ModuleSettings_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
ModuleSettings::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModuleSettings, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ModuleSettings_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::ModuleSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool is_client_muted = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleSettings, _impl_.is_client_muted_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ModuleSettings, _impl_.is_client_muted_)}},
    // uint32 position_precision = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleSettings, _impl_.position_precision_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ModuleSettings, _impl_.position_precision_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 position_precision = 1;
    {PROTOBUF_FIELD_OFFSET(ModuleSettings, _impl_.position_precision_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bool is_client_muted = 2;
    {PROTOBUF_FIELD_OFFSET(ModuleSettings, _impl_.is_client_muted_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ModuleSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.ModuleSettings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    ::memset(&_impl_.position_precision_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_client_muted_) -
        reinterpret_cast<char*>(&_impl_.position_precision_)) + sizeof(_impl_.is_client_muted_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModuleSettings::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModuleSettings& this_ = static_cast<const ModuleSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModuleSettings::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModuleSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.ModuleSettings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 position_precision = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_position_precision() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_position_precision(), target);
    }
  }

  // bool is_client_muted = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_is_client_muted() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_is_client_muted(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.ModuleSettings)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModuleSettings::ByteSizeLong(const MessageLite& base) {
  const ModuleSettings& this_ = static_cast<const ModuleSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModuleSettings::ByteSizeLong() const {
  const ModuleSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.ModuleSettings)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // uint32 position_precision = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_position_precision() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_position_precision());
      }
    }
    // bool is_client_muted = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_is_client_muted() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ModuleSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleSettings*>(&to_msg);
  auto& from = static_cast<const ModuleSettings&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.ModuleSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_position_precision() != 0) {
        _this->_impl_.position_precision_ = from._impl_.position_precision_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_is_client_muted() != 0) {
        _this->_impl_.is_client_muted_ = from._impl_.is_client_muted_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleSettings::CopyFrom(const ModuleSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.ModuleSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleSettings::InternalSwap(ModuleSettings* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleSettings, _impl_.is_client_muted_)
      + sizeof(ModuleSettings::_impl_.is_client_muted_)
      - PROTOBUF_FIELD_OFFSET(ModuleSettings, _impl_.position_precision_)>(
          reinterpret_cast<char*>(&_impl_.position_precision_),
          reinterpret_cast<char*>(&other->_impl_.position_precision_));
}

::google::protobuf::Metadata ModuleSettings::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Channel::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Channel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Channel, _impl_._has_bits_);
};

Channel::Channel(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Channel_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.Channel)
}
PROTOBUF_NDEBUG_INLINE Channel::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::meshtastic::Channel& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Channel::Channel(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Channel& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Channel_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Channel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.settings_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.settings_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, index_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, index_),
           offsetof(Impl_, role_) -
               offsetof(Impl_, index_) +
               sizeof(Impl_::role_));

  // @@protoc_insertion_point(copy_constructor:meshtastic.Channel)
}
PROTOBUF_NDEBUG_INLINE Channel::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Channel::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, settings_),
           0,
           offsetof(Impl_, role_) -
               offsetof(Impl_, settings_) +
               sizeof(Impl_::role_));
}
Channel::~Channel() {
  // @@protoc_insertion_point(destructor:meshtastic.Channel)
  SharedDtor(*this);
}
inline void Channel::SharedDtor(MessageLite& self) {
  Channel& this_ = static_cast<Channel&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.settings_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Channel::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Channel(arena);
}
constexpr auto Channel::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Channel),
                                            alignof(Channel));
}
constexpr auto Channel::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Channel_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Channel::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Channel>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Channel::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Channel>(), &Channel::ByteSizeLong,
              &Channel::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Channel, _impl_._cached_size_),
          false,
      },
      &Channel::kDescriptorMethods,
      &descriptor_table_meshtastic_2fchannel_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Channel_class_data_ =
        Channel::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Channel::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Channel_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Channel_class_data_.tc_table);
  return Channel_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
Channel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Channel, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Channel_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::Channel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Channel, _impl_.index_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Channel, _impl_.index_)}},
    // .meshtastic.ChannelSettings settings = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Channel, _impl_.settings_)}},
    // .meshtastic.Channel.Role role = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Channel, _impl_.role_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(Channel, _impl_.role_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 index = 1;
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.index_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .meshtastic.ChannelSettings settings = 2;
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.settings_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.Channel.Role role = 3;
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.role_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::ChannelSettings>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Channel::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.Channel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.settings_ != nullptr);
    _impl_.settings_->Clear();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.index_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.role_) -
        reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.role_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Channel::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Channel& this_ = static_cast<const Channel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Channel::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Channel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.Channel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 index = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_index() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_index(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .meshtastic.ChannelSettings settings = 2;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.settings_, this_._impl_.settings_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.Channel.Role role = 3;
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (this_._internal_role() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_role(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.Channel)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Channel::ByteSizeLong(const MessageLite& base) {
  const Channel& this_ = static_cast<const Channel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Channel::ByteSizeLong() const {
  const Channel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.Channel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // .meshtastic.ChannelSettings settings = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.settings_);
    }
    // int32 index = 1;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_index() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_index());
      }
    }
    // .meshtastic.Channel.Role role = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_role() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_role());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Channel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Channel*>(&to_msg);
  auto& from = static_cast<const Channel&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.Channel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.settings_ != nullptr);
      if (_this->_impl_.settings_ == nullptr) {
        _this->_impl_.settings_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.settings_);
      } else {
        _this->_impl_.settings_->MergeFrom(*from._impl_.settings_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_index() != 0) {
        _this->_impl_.index_ = from._impl_.index_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_role() != 0) {
        _this->_impl_.role_ = from._impl_.role_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Channel::CopyFrom(const Channel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Channel::InternalSwap(Channel* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Channel, _impl_.role_)
      + sizeof(Channel::_impl_.role_)
      - PROTOBUF_FIELD_OFFSET(Channel, _impl_.settings_)>(
          reinterpret_cast<char*>(&_impl_.settings_),
          reinterpret_cast<char*>(&other->_impl_.settings_));
}

::google::protobuf::Metadata Channel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace meshtastic
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_meshtastic_2fchannel_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
