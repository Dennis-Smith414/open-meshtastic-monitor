// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: meshtastic/interdevice.proto
// Protobuf C++ Version: 6.32.0

#include "meshtastic/interdevice.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace meshtastic {

inline constexpr SensorData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        type_{static_cast< ::meshtastic::MessageType >(0)},
        data_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR SensorData::SensorData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SensorData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SensorDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorDataDefaultTypeInternal() {}
  union {
    SensorData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorDataDefaultTypeInternal _SensorData_default_instance_;

inline constexpr InterdeviceMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR InterdeviceMessage::InterdeviceMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(InterdeviceMessage_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InterdeviceMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InterdeviceMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InterdeviceMessageDefaultTypeInternal() {}
  union {
    InterdeviceMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InterdeviceMessageDefaultTypeInternal _InterdeviceMessage_default_instance_;
}  // namespace meshtastic
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_meshtastic_2finterdevice_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_meshtastic_2finterdevice_2eproto = nullptr;
const ::uint32_t
    TableStruct_meshtastic_2finterdevice_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::SensorData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::SensorData, _impl_._oneof_case_[0]),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::SensorData, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::SensorData, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::SensorData, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::SensorData, _impl_.data_),
        0,
        ~0u,
        ~0u,
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::InterdeviceMessage, _impl_._oneof_case_[0]),
        PROTOBUF_FIELD_OFFSET(::meshtastic::InterdeviceMessage, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::InterdeviceMessage, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::InterdeviceMessage, _impl_.data_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::meshtastic::SensorData)},
        {11, sizeof(::meshtastic::InterdeviceMessage)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::meshtastic::_SensorData_default_instance_._instance,
    &::meshtastic::_InterdeviceMessage_default_instance_._instance,
};
const char descriptor_table_protodef_meshtastic_2finterdevice_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\034meshtastic/interdevice.proto\022\nmeshtast"
    "ic\"j\n\nSensorData\022%\n\004type\030\001 \001(\0162\027.meshtas"
    "tic.MessageType\022\025\n\013float_value\030\002 \001(\002H\000\022\026"
    "\n\014uint32_value\030\003 \001(\rH\000B\006\n\004data\"V\n\022Interd"
    "eviceMessage\022\016\n\004nmea\030\001 \001(\tH\000\022(\n\006sensor\030\002"
    " \001(\0132\026.meshtastic.SensorDataH\000B\006\n\004data*\325"
    "\001\n\013MessageType\022\007\n\003ACK\020\000\022\025\n\020COLLECT_INTER"
    "VAL\020\240\001\022\014\n\007BEEP_ON\020\241\001\022\r\n\010BEEP_OFF\020\242\001\022\r\n\010S"
    "HUTDOWN\020\243\001\022\r\n\010POWER_ON\020\244\001\022\017\n\nSCD41_TEMP\020"
    "\260\001\022\023\n\016SCD41_HUMIDITY\020\261\001\022\016\n\tSCD41_CO2\020\262\001\022"
    "\017\n\nAHT20_TEMP\020\263\001\022\023\n\016AHT20_HUMIDITY\020\264\001\022\017\n"
    "\nTVOC_INDEX\020\265\001Bf\n\023com.geeksville.meshB\021I"
    "nterdeviceProtosZ\"github.com/meshtastic/"
    "go/generated\252\002\024Meshtastic.Protobufs\272\002\000b\006"
    "proto3"
};
static ::absl::once_flag descriptor_table_meshtastic_2finterdevice_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_meshtastic_2finterdevice_2eproto = {
    false,
    false,
    566,
    descriptor_table_protodef_meshtastic_2finterdevice_2eproto,
    "meshtastic/interdevice.proto",
    &descriptor_table_meshtastic_2finterdevice_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_meshtastic_2finterdevice_2eproto::offsets,
    file_level_enum_descriptors_meshtastic_2finterdevice_2eproto,
    file_level_service_descriptors_meshtastic_2finterdevice_2eproto,
};
namespace meshtastic {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MessageType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_meshtastic_2finterdevice_2eproto);
  return file_level_enum_descriptors_meshtastic_2finterdevice_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MessageType_internal_data_[] = {
    65536u, 192u, 0u, 0u, 0u, 0u, 2147483648u, 2064399u, };
// ===================================================================

class SensorData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SensorData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SensorData, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::meshtastic::SensorData, _impl_._oneof_case_);
};

SensorData::SensorData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SensorData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.SensorData)
}
SensorData::SensorData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SensorData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SensorData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE SensorData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        data_{},
        _oneof_case_{} {}

inline void SensorData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
SensorData::~SensorData() {
  // @@protoc_insertion_point(destructor:meshtastic.SensorData)
  SharedDtor(*this);
}
inline void SensorData::SharedDtor(MessageLite& self) {
  SensorData& this_ = static_cast<SensorData&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_data()) {
    this_.clear_data();
  }
  this_._impl_.~Impl_();
}

void SensorData::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:meshtastic.SensorData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (data_case()) {
    case kFloatValue: {
      // No need to clear
      break;
    }
    case kUint32Value: {
      // No need to clear
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DATA_NOT_SET;
}


inline void* PROTOBUF_NONNULL SensorData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SensorData(arena);
}
constexpr auto SensorData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SensorData),
                                            alignof(SensorData));
}
constexpr auto SensorData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SensorData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SensorData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SensorData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SensorData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SensorData>(), &SensorData::ByteSizeLong,
              &SensorData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SensorData, _impl_._cached_size_),
          false,
      },
      &SensorData::kDescriptorMethods,
      &descriptor_table_meshtastic_2finterdevice_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SensorData_class_data_ =
        SensorData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SensorData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SensorData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SensorData_class_data_.tc_table);
  return SensorData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 0, 0, 2>
SensorData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorData, _impl_._has_bits_),
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SensorData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::SensorData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .meshtastic.MessageType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorData, _impl_.type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SensorData, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .meshtastic.MessageType type = 1;
    {PROTOBUF_FIELD_OFFSET(SensorData, _impl_.type_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // float float_value = 2;
    {PROTOBUF_FIELD_OFFSET(SensorData, _impl_.data_.float_value_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kFloat)},
    // uint32 uint32_value = 3;
    {PROTOBUF_FIELD_OFFSET(SensorData, _impl_.data_.uint32_value_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SensorData::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.SensorData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  clear_data();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SensorData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SensorData& this_ = static_cast<const SensorData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SensorData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SensorData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.SensorData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .meshtastic.MessageType type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  switch (this_.data_case()) {
    case kFloatValue: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_float_value(), target);
      break;
    }
    case kUint32Value: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_uint32_value(), target);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.SensorData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SensorData::ByteSizeLong(const MessageLite& base) {
  const SensorData& this_ = static_cast<const SensorData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SensorData::ByteSizeLong() const {
  const SensorData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.SensorData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .meshtastic.MessageType type = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  switch (this_.data_case()) {
    // float float_value = 2;
    case kFloatValue: {
      total_size += 5;
      break;
    }
    // uint32 uint32_value = 3;
    case kUint32Value: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_uint32_value());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SensorData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorData*>(&to_msg);
  auto& from = static_cast<const SensorData&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.SensorData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (from._internal_type() != 0) {
      _this->_impl_.type_ = from._impl_.type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_data();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kFloatValue: {
        _this->_impl_.data_.float_value_ = from._impl_.data_.float_value_;
        break;
      }
      case kUint32Value: {
        _this->_impl_.data_.uint32_value_ = from._impl_.data_.uint32_value_;
        break;
      }
      case DATA_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorData::CopyFrom(const SensorData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.SensorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorData::InternalSwap(SensorData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_.data_, other->_impl_.data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata SensorData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InterdeviceMessage::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::meshtastic::InterdeviceMessage, _impl_._oneof_case_);
};

void InterdeviceMessage::set_allocated_sensor(::meshtastic::SensorData* PROTOBUF_NULLABLE sensor) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_data();
  if (sensor) {
    ::google::protobuf::Arena* submessage_arena = sensor->GetArena();
    if (message_arena != submessage_arena) {
      sensor = ::google::protobuf::internal::GetOwnedMessage(message_arena, sensor, submessage_arena);
    }
    set_has_sensor();
    _impl_.data_.sensor_ = sensor;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.InterdeviceMessage.sensor)
}
InterdeviceMessage::InterdeviceMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InterdeviceMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.InterdeviceMessage)
}
PROTOBUF_NDEBUG_INLINE InterdeviceMessage::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::meshtastic::InterdeviceMessage& from_msg)
      : data_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

InterdeviceMessage::InterdeviceMessage(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const InterdeviceMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InterdeviceMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InterdeviceMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (data_case()) {
    case DATA_NOT_SET:
      break;
      case kNmea:
        new (&_impl_.data_.nmea_) decltype(_impl_.data_.nmea_){arena, from._impl_.data_.nmea_};
        break;
      case kSensor:
        _impl_.data_.sensor_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_.sensor_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:meshtastic.InterdeviceMessage)
}
PROTOBUF_NDEBUG_INLINE InterdeviceMessage::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : data_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void InterdeviceMessage::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InterdeviceMessage::~InterdeviceMessage() {
  // @@protoc_insertion_point(destructor:meshtastic.InterdeviceMessage)
  SharedDtor(*this);
}
inline void InterdeviceMessage::SharedDtor(MessageLite& self) {
  InterdeviceMessage& this_ = static_cast<InterdeviceMessage&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_data()) {
    this_.clear_data();
  }
  this_._impl_.~Impl_();
}

void InterdeviceMessage::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:meshtastic.InterdeviceMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (data_case()) {
    case kNmea: {
      _impl_.data_.nmea_.Destroy();
      break;
    }
    case kSensor: {
      if (GetArena() == nullptr) {
        delete _impl_.data_.sensor_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.data_.sensor_);
      }
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DATA_NOT_SET;
}


inline void* PROTOBUF_NONNULL InterdeviceMessage::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) InterdeviceMessage(arena);
}
constexpr auto InterdeviceMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(InterdeviceMessage),
                                            alignof(InterdeviceMessage));
}
constexpr auto InterdeviceMessage::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_InterdeviceMessage_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &InterdeviceMessage::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<InterdeviceMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &InterdeviceMessage::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<InterdeviceMessage>(), &InterdeviceMessage::ByteSizeLong,
              &InterdeviceMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(InterdeviceMessage, _impl_._cached_size_),
          false,
      },
      &InterdeviceMessage::kDescriptorMethods,
      &descriptor_table_meshtastic_2finterdevice_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull InterdeviceMessage_class_data_ =
        InterdeviceMessage::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
InterdeviceMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&InterdeviceMessage_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(InterdeviceMessage_class_data_.tc_table);
  return InterdeviceMessage_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 42, 2>
InterdeviceMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    InterdeviceMessage_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::InterdeviceMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string nmea = 1;
    {PROTOBUF_FIELD_OFFSET(InterdeviceMessage, _impl_.data_.nmea_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .meshtastic.SensorData sensor = 2;
    {PROTOBUF_FIELD_OFFSET(InterdeviceMessage, _impl_.data_.sensor_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::SensorData>()},
  }},
  {{
    "\35\4\0\0\0\0\0\0"
    "meshtastic.InterdeviceMessage"
    "nmea"
  }},
};
PROTOBUF_NOINLINE void InterdeviceMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.InterdeviceMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL InterdeviceMessage::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const InterdeviceMessage& this_ = static_cast<const InterdeviceMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL InterdeviceMessage::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const InterdeviceMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.InterdeviceMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.data_case()) {
    case kNmea: {
      const ::std::string& _s = this_._internal_nmea();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.InterdeviceMessage.nmea");
      target = stream->WriteStringMaybeAliased(1, _s, target);
      break;
    }
    case kSensor: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.data_.sensor_, this_._impl_.data_.sensor_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.InterdeviceMessage)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t InterdeviceMessage::ByteSizeLong(const MessageLite& base) {
  const InterdeviceMessage& this_ = static_cast<const InterdeviceMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t InterdeviceMessage::ByteSizeLong() const {
  const InterdeviceMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.InterdeviceMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.data_case()) {
    // string nmea = 1;
    case kNmea: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_nmea());
      break;
    }
    // .meshtastic.SensorData sensor = 2;
    case kSensor: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.data_.sensor_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void InterdeviceMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InterdeviceMessage*>(&to_msg);
  auto& from = static_cast<const InterdeviceMessage&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.InterdeviceMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_data();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kNmea: {
        if (oneof_needs_init) {
          _this->_impl_.data_.nmea_.InitDefault();
        }
        _this->_impl_.data_.nmea_.Set(from._internal_nmea(), arena);
        break;
      }
      case kSensor: {
        if (oneof_needs_init) {
          _this->_impl_.data_.sensor_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_.sensor_);
        } else {
          _this->_impl_.data_.sensor_->MergeFrom(*from._impl_.data_.sensor_);
        }
        break;
      }
      case DATA_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InterdeviceMessage::CopyFrom(const InterdeviceMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.InterdeviceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InterdeviceMessage::InternalSwap(InterdeviceMessage* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata InterdeviceMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace meshtastic
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_meshtastic_2finterdevice_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
