// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: meshtastic/storeforward.proto
// Protobuf C++ Version: 6.32.0

#ifndef meshtastic_2fstoreforward_2eproto_2epb_2eh
#define meshtastic_2fstoreforward_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_meshtastic_2fstoreforward_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_meshtastic_2fstoreforward_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_meshtastic_2fstoreforward_2eproto;
}  // extern "C"
namespace meshtastic {
enum StoreAndForward_RequestResponse : int;
extern const uint32_t StoreAndForward_RequestResponse_internal_data_[];
class StoreAndForward;
struct StoreAndForwardDefaultTypeInternal;
extern StoreAndForwardDefaultTypeInternal _StoreAndForward_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StoreAndForward_class_data_;
class StoreAndForward_Heartbeat;
struct StoreAndForward_HeartbeatDefaultTypeInternal;
extern StoreAndForward_HeartbeatDefaultTypeInternal _StoreAndForward_Heartbeat_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StoreAndForward_Heartbeat_class_data_;
class StoreAndForward_History;
struct StoreAndForward_HistoryDefaultTypeInternal;
extern StoreAndForward_HistoryDefaultTypeInternal _StoreAndForward_History_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StoreAndForward_History_class_data_;
class StoreAndForward_Statistics;
struct StoreAndForward_StatisticsDefaultTypeInternal;
extern StoreAndForward_StatisticsDefaultTypeInternal _StoreAndForward_Statistics_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StoreAndForward_Statistics_class_data_;
}  // namespace meshtastic
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::meshtastic::StoreAndForward_RequestResponse_internal_data_>
    internal::EnumTraitsImpl::value<::meshtastic::StoreAndForward_RequestResponse>;
}  // namespace protobuf
}  // namespace google

namespace meshtastic {
enum StoreAndForward_RequestResponse : int {
  StoreAndForward_RequestResponse_UNSET = 0,
  StoreAndForward_RequestResponse_ROUTER_ERROR = 1,
  StoreAndForward_RequestResponse_ROUTER_HEARTBEAT = 2,
  StoreAndForward_RequestResponse_ROUTER_PING = 3,
  StoreAndForward_RequestResponse_ROUTER_PONG = 4,
  StoreAndForward_RequestResponse_ROUTER_BUSY = 5,
  StoreAndForward_RequestResponse_ROUTER_HISTORY = 6,
  StoreAndForward_RequestResponse_ROUTER_STATS = 7,
  StoreAndForward_RequestResponse_ROUTER_TEXT_DIRECT = 8,
  StoreAndForward_RequestResponse_ROUTER_TEXT_BROADCAST = 9,
  StoreAndForward_RequestResponse_CLIENT_ERROR = 64,
  StoreAndForward_RequestResponse_CLIENT_HISTORY = 65,
  StoreAndForward_RequestResponse_CLIENT_STATS = 66,
  StoreAndForward_RequestResponse_CLIENT_PING = 67,
  StoreAndForward_RequestResponse_CLIENT_PONG = 68,
  StoreAndForward_RequestResponse_CLIENT_ABORT = 106,
  StoreAndForward_RequestResponse_StoreAndForward_RequestResponse_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  StoreAndForward_RequestResponse_StoreAndForward_RequestResponse_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t StoreAndForward_RequestResponse_internal_data_[];
inline constexpr StoreAndForward_RequestResponse StoreAndForward_RequestResponse_RequestResponse_MIN =
    static_cast<StoreAndForward_RequestResponse>(0);
inline constexpr StoreAndForward_RequestResponse StoreAndForward_RequestResponse_RequestResponse_MAX =
    static_cast<StoreAndForward_RequestResponse>(106);
inline bool StoreAndForward_RequestResponse_IsValid(int value) {
  return ::google::protobuf::internal::ValidateEnum(value, StoreAndForward_RequestResponse_internal_data_);
}
inline constexpr int StoreAndForward_RequestResponse_RequestResponse_ARRAYSIZE = 106 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL StoreAndForward_RequestResponse_descriptor();
template <typename T>
const ::std::string& StoreAndForward_RequestResponse_Name(T value) {
  static_assert(::std::is_same<T, StoreAndForward_RequestResponse>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to RequestResponse_Name().");
  return ::google::protobuf::internal::NameOfEnum(StoreAndForward_RequestResponse_descriptor(), value);
}
inline bool StoreAndForward_RequestResponse_Parse(
    ::absl::string_view name, StoreAndForward_RequestResponse* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<StoreAndForward_RequestResponse>(StoreAndForward_RequestResponse_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class StoreAndForward_Statistics final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.StoreAndForward.Statistics) */ {
 public:
  inline StoreAndForward_Statistics() : StoreAndForward_Statistics(nullptr) {}
  ~StoreAndForward_Statistics() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StoreAndForward_Statistics* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StoreAndForward_Statistics));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StoreAndForward_Statistics(::google::protobuf::internal::ConstantInitialized);

  inline StoreAndForward_Statistics(const StoreAndForward_Statistics& from) : StoreAndForward_Statistics(nullptr, from) {}
  inline StoreAndForward_Statistics(StoreAndForward_Statistics&& from) noexcept
      : StoreAndForward_Statistics(nullptr, ::std::move(from)) {}
  inline StoreAndForward_Statistics& operator=(const StoreAndForward_Statistics& from) {
    CopyFrom(from);
    return *this;
  }
  inline StoreAndForward_Statistics& operator=(StoreAndForward_Statistics&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StoreAndForward_Statistics& default_instance() {
    return *reinterpret_cast<const StoreAndForward_Statistics*>(
        &_StoreAndForward_Statistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(StoreAndForward_Statistics& a, StoreAndForward_Statistics& b) { a.Swap(&b); }
  inline void Swap(StoreAndForward_Statistics* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StoreAndForward_Statistics* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StoreAndForward_Statistics* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StoreAndForward_Statistics>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StoreAndForward_Statistics& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StoreAndForward_Statistics& from) { StoreAndForward_Statistics::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StoreAndForward_Statistics* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.StoreAndForward.Statistics"; }

 protected:
  explicit StoreAndForward_Statistics(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StoreAndForward_Statistics(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StoreAndForward_Statistics& from);
  StoreAndForward_Statistics(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StoreAndForward_Statistics&& from) noexcept
      : StoreAndForward_Statistics(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessagesTotalFieldNumber = 1,
    kMessagesSavedFieldNumber = 2,
    kMessagesMaxFieldNumber = 3,
    kUpTimeFieldNumber = 4,
    kRequestsFieldNumber = 5,
    kRequestsHistoryFieldNumber = 6,
    kHeartbeatFieldNumber = 7,
    kReturnMaxFieldNumber = 8,
    kReturnWindowFieldNumber = 9,
  };
  // uint32 messages_total = 1;
  void clear_messages_total() ;
  ::uint32_t messages_total() const;
  void set_messages_total(::uint32_t value);

  private:
  ::uint32_t _internal_messages_total() const;
  void _internal_set_messages_total(::uint32_t value);

  public:
  // uint32 messages_saved = 2;
  void clear_messages_saved() ;
  ::uint32_t messages_saved() const;
  void set_messages_saved(::uint32_t value);

  private:
  ::uint32_t _internal_messages_saved() const;
  void _internal_set_messages_saved(::uint32_t value);

  public:
  // uint32 messages_max = 3;
  void clear_messages_max() ;
  ::uint32_t messages_max() const;
  void set_messages_max(::uint32_t value);

  private:
  ::uint32_t _internal_messages_max() const;
  void _internal_set_messages_max(::uint32_t value);

  public:
  // uint32 up_time = 4;
  void clear_up_time() ;
  ::uint32_t up_time() const;
  void set_up_time(::uint32_t value);

  private:
  ::uint32_t _internal_up_time() const;
  void _internal_set_up_time(::uint32_t value);

  public:
  // uint32 requests = 5;
  void clear_requests() ;
  ::uint32_t requests() const;
  void set_requests(::uint32_t value);

  private:
  ::uint32_t _internal_requests() const;
  void _internal_set_requests(::uint32_t value);

  public:
  // uint32 requests_history = 6;
  void clear_requests_history() ;
  ::uint32_t requests_history() const;
  void set_requests_history(::uint32_t value);

  private:
  ::uint32_t _internal_requests_history() const;
  void _internal_set_requests_history(::uint32_t value);

  public:
  // bool heartbeat = 7;
  void clear_heartbeat() ;
  bool heartbeat() const;
  void set_heartbeat(bool value);

  private:
  bool _internal_heartbeat() const;
  void _internal_set_heartbeat(bool value);

  public:
  // uint32 return_max = 8;
  void clear_return_max() ;
  ::uint32_t return_max() const;
  void set_return_max(::uint32_t value);

  private:
  ::uint32_t _internal_return_max() const;
  void _internal_set_return_max(::uint32_t value);

  public:
  // uint32 return_window = 9;
  void clear_return_window() ;
  ::uint32_t return_window() const;
  void set_return_window(::uint32_t value);

  private:
  ::uint32_t _internal_return_window() const;
  void _internal_set_return_window(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.StoreAndForward.Statistics)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const StoreAndForward_Statistics& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t messages_total_;
    ::uint32_t messages_saved_;
    ::uint32_t messages_max_;
    ::uint32_t up_time_;
    ::uint32_t requests_;
    ::uint32_t requests_history_;
    bool heartbeat_;
    ::uint32_t return_max_;
    ::uint32_t return_window_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fstoreforward_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StoreAndForward_Statistics_class_data_;
// -------------------------------------------------------------------

class StoreAndForward_History final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.StoreAndForward.History) */ {
 public:
  inline StoreAndForward_History() : StoreAndForward_History(nullptr) {}
  ~StoreAndForward_History() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StoreAndForward_History* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StoreAndForward_History));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StoreAndForward_History(::google::protobuf::internal::ConstantInitialized);

  inline StoreAndForward_History(const StoreAndForward_History& from) : StoreAndForward_History(nullptr, from) {}
  inline StoreAndForward_History(StoreAndForward_History&& from) noexcept
      : StoreAndForward_History(nullptr, ::std::move(from)) {}
  inline StoreAndForward_History& operator=(const StoreAndForward_History& from) {
    CopyFrom(from);
    return *this;
  }
  inline StoreAndForward_History& operator=(StoreAndForward_History&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StoreAndForward_History& default_instance() {
    return *reinterpret_cast<const StoreAndForward_History*>(
        &_StoreAndForward_History_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(StoreAndForward_History& a, StoreAndForward_History& b) { a.Swap(&b); }
  inline void Swap(StoreAndForward_History* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StoreAndForward_History* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StoreAndForward_History* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StoreAndForward_History>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StoreAndForward_History& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StoreAndForward_History& from) { StoreAndForward_History::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StoreAndForward_History* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.StoreAndForward.History"; }

 protected:
  explicit StoreAndForward_History(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StoreAndForward_History(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StoreAndForward_History& from);
  StoreAndForward_History(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StoreAndForward_History&& from) noexcept
      : StoreAndForward_History(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHistoryMessagesFieldNumber = 1,
    kWindowFieldNumber = 2,
    kLastRequestFieldNumber = 3,
  };
  // uint32 history_messages = 1;
  void clear_history_messages() ;
  ::uint32_t history_messages() const;
  void set_history_messages(::uint32_t value);

  private:
  ::uint32_t _internal_history_messages() const;
  void _internal_set_history_messages(::uint32_t value);

  public:
  // uint32 window = 2;
  void clear_window() ;
  ::uint32_t window() const;
  void set_window(::uint32_t value);

  private:
  ::uint32_t _internal_window() const;
  void _internal_set_window(::uint32_t value);

  public:
  // uint32 last_request = 3;
  void clear_last_request() ;
  ::uint32_t last_request() const;
  void set_last_request(::uint32_t value);

  private:
  ::uint32_t _internal_last_request() const;
  void _internal_set_last_request(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.StoreAndForward.History)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const StoreAndForward_History& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t history_messages_;
    ::uint32_t window_;
    ::uint32_t last_request_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fstoreforward_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StoreAndForward_History_class_data_;
// -------------------------------------------------------------------

class StoreAndForward_Heartbeat final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.StoreAndForward.Heartbeat) */ {
 public:
  inline StoreAndForward_Heartbeat() : StoreAndForward_Heartbeat(nullptr) {}
  ~StoreAndForward_Heartbeat() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StoreAndForward_Heartbeat* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StoreAndForward_Heartbeat));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StoreAndForward_Heartbeat(::google::protobuf::internal::ConstantInitialized);

  inline StoreAndForward_Heartbeat(const StoreAndForward_Heartbeat& from) : StoreAndForward_Heartbeat(nullptr, from) {}
  inline StoreAndForward_Heartbeat(StoreAndForward_Heartbeat&& from) noexcept
      : StoreAndForward_Heartbeat(nullptr, ::std::move(from)) {}
  inline StoreAndForward_Heartbeat& operator=(const StoreAndForward_Heartbeat& from) {
    CopyFrom(from);
    return *this;
  }
  inline StoreAndForward_Heartbeat& operator=(StoreAndForward_Heartbeat&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StoreAndForward_Heartbeat& default_instance() {
    return *reinterpret_cast<const StoreAndForward_Heartbeat*>(
        &_StoreAndForward_Heartbeat_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(StoreAndForward_Heartbeat& a, StoreAndForward_Heartbeat& b) { a.Swap(&b); }
  inline void Swap(StoreAndForward_Heartbeat* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StoreAndForward_Heartbeat* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StoreAndForward_Heartbeat* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StoreAndForward_Heartbeat>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StoreAndForward_Heartbeat& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StoreAndForward_Heartbeat& from) { StoreAndForward_Heartbeat::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StoreAndForward_Heartbeat* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.StoreAndForward.Heartbeat"; }

 protected:
  explicit StoreAndForward_Heartbeat(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StoreAndForward_Heartbeat(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StoreAndForward_Heartbeat& from);
  StoreAndForward_Heartbeat(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StoreAndForward_Heartbeat&& from) noexcept
      : StoreAndForward_Heartbeat(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPeriodFieldNumber = 1,
    kSecondaryFieldNumber = 2,
  };
  // uint32 period = 1;
  void clear_period() ;
  ::uint32_t period() const;
  void set_period(::uint32_t value);

  private:
  ::uint32_t _internal_period() const;
  void _internal_set_period(::uint32_t value);

  public:
  // uint32 secondary = 2;
  void clear_secondary() ;
  ::uint32_t secondary() const;
  void set_secondary(::uint32_t value);

  private:
  ::uint32_t _internal_secondary() const;
  void _internal_set_secondary(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.StoreAndForward.Heartbeat)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const StoreAndForward_Heartbeat& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t period_;
    ::uint32_t secondary_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fstoreforward_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StoreAndForward_Heartbeat_class_data_;
// -------------------------------------------------------------------

class StoreAndForward final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.StoreAndForward) */ {
 public:
  inline StoreAndForward() : StoreAndForward(nullptr) {}
  ~StoreAndForward() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StoreAndForward* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StoreAndForward));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StoreAndForward(::google::protobuf::internal::ConstantInitialized);

  inline StoreAndForward(const StoreAndForward& from) : StoreAndForward(nullptr, from) {}
  inline StoreAndForward(StoreAndForward&& from) noexcept
      : StoreAndForward(nullptr, ::std::move(from)) {}
  inline StoreAndForward& operator=(const StoreAndForward& from) {
    CopyFrom(from);
    return *this;
  }
  inline StoreAndForward& operator=(StoreAndForward&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StoreAndForward& default_instance() {
    return *reinterpret_cast<const StoreAndForward*>(
        &_StoreAndForward_default_instance_);
  }
  enum VariantCase {
    kStats = 2,
    kHistory = 3,
    kHeartbeat = 4,
    kText = 5,
    VARIANT_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(StoreAndForward& a, StoreAndForward& b) { a.Swap(&b); }
  inline void Swap(StoreAndForward* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StoreAndForward* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StoreAndForward* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StoreAndForward>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StoreAndForward& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StoreAndForward& from) { StoreAndForward::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StoreAndForward* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.StoreAndForward"; }

 protected:
  explicit StoreAndForward(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StoreAndForward(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StoreAndForward& from);
  StoreAndForward(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StoreAndForward&& from) noexcept
      : StoreAndForward(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Statistics = StoreAndForward_Statistics;
  using History = StoreAndForward_History;
  using Heartbeat = StoreAndForward_Heartbeat;
  using RequestResponse = StoreAndForward_RequestResponse;
  static constexpr RequestResponse UNSET = StoreAndForward_RequestResponse_UNSET;
  static constexpr RequestResponse ROUTER_ERROR = StoreAndForward_RequestResponse_ROUTER_ERROR;
  static constexpr RequestResponse ROUTER_HEARTBEAT = StoreAndForward_RequestResponse_ROUTER_HEARTBEAT;
  static constexpr RequestResponse ROUTER_PING = StoreAndForward_RequestResponse_ROUTER_PING;
  static constexpr RequestResponse ROUTER_PONG = StoreAndForward_RequestResponse_ROUTER_PONG;
  static constexpr RequestResponse ROUTER_BUSY = StoreAndForward_RequestResponse_ROUTER_BUSY;
  static constexpr RequestResponse ROUTER_HISTORY = StoreAndForward_RequestResponse_ROUTER_HISTORY;
  static constexpr RequestResponse ROUTER_STATS = StoreAndForward_RequestResponse_ROUTER_STATS;
  static constexpr RequestResponse ROUTER_TEXT_DIRECT = StoreAndForward_RequestResponse_ROUTER_TEXT_DIRECT;
  static constexpr RequestResponse ROUTER_TEXT_BROADCAST = StoreAndForward_RequestResponse_ROUTER_TEXT_BROADCAST;
  static constexpr RequestResponse CLIENT_ERROR = StoreAndForward_RequestResponse_CLIENT_ERROR;
  static constexpr RequestResponse CLIENT_HISTORY = StoreAndForward_RequestResponse_CLIENT_HISTORY;
  static constexpr RequestResponse CLIENT_STATS = StoreAndForward_RequestResponse_CLIENT_STATS;
  static constexpr RequestResponse CLIENT_PING = StoreAndForward_RequestResponse_CLIENT_PING;
  static constexpr RequestResponse CLIENT_PONG = StoreAndForward_RequestResponse_CLIENT_PONG;
  static constexpr RequestResponse CLIENT_ABORT = StoreAndForward_RequestResponse_CLIENT_ABORT;
  static inline bool RequestResponse_IsValid(int value) {
    return StoreAndForward_RequestResponse_IsValid(value);
  }
  static constexpr RequestResponse RequestResponse_MIN = StoreAndForward_RequestResponse_RequestResponse_MIN;
  static constexpr RequestResponse RequestResponse_MAX = StoreAndForward_RequestResponse_RequestResponse_MAX;
  static constexpr int RequestResponse_ARRAYSIZE = StoreAndForward_RequestResponse_RequestResponse_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL RequestResponse_descriptor() {
    return StoreAndForward_RequestResponse_descriptor();
  }
  template <typename T>
  static inline const ::std::string& RequestResponse_Name(T value) {
    return StoreAndForward_RequestResponse_Name(value);
  }
  static inline bool RequestResponse_Parse(
      ::absl::string_view name, RequestResponse* PROTOBUF_NONNULL value) {
    return StoreAndForward_RequestResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kRrFieldNumber = 1,
    kStatsFieldNumber = 2,
    kHistoryFieldNumber = 3,
    kHeartbeatFieldNumber = 4,
    kTextFieldNumber = 5,
  };
  // .meshtastic.StoreAndForward.RequestResponse rr = 1;
  void clear_rr() ;
  ::meshtastic::StoreAndForward_RequestResponse rr() const;
  void set_rr(::meshtastic::StoreAndForward_RequestResponse value);

  private:
  ::meshtastic::StoreAndForward_RequestResponse _internal_rr() const;
  void _internal_set_rr(::meshtastic::StoreAndForward_RequestResponse value);

  public:
  // .meshtastic.StoreAndForward.Statistics stats = 2;
  bool has_stats() const;
  private:
  bool _internal_has_stats() const;

  public:
  void clear_stats() ;
  const ::meshtastic::StoreAndForward_Statistics& stats() const;
  [[nodiscard]] ::meshtastic::StoreAndForward_Statistics* PROTOBUF_NULLABLE release_stats();
  ::meshtastic::StoreAndForward_Statistics* PROTOBUF_NONNULL mutable_stats();
  void set_allocated_stats(::meshtastic::StoreAndForward_Statistics* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_stats(::meshtastic::StoreAndForward_Statistics* PROTOBUF_NULLABLE value);
  ::meshtastic::StoreAndForward_Statistics* PROTOBUF_NULLABLE unsafe_arena_release_stats();

  private:
  const ::meshtastic::StoreAndForward_Statistics& _internal_stats() const;
  ::meshtastic::StoreAndForward_Statistics* PROTOBUF_NONNULL _internal_mutable_stats();

  public:
  // .meshtastic.StoreAndForward.History history = 3;
  bool has_history() const;
  private:
  bool _internal_has_history() const;

  public:
  void clear_history() ;
  const ::meshtastic::StoreAndForward_History& history() const;
  [[nodiscard]] ::meshtastic::StoreAndForward_History* PROTOBUF_NULLABLE release_history();
  ::meshtastic::StoreAndForward_History* PROTOBUF_NONNULL mutable_history();
  void set_allocated_history(::meshtastic::StoreAndForward_History* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_history(::meshtastic::StoreAndForward_History* PROTOBUF_NULLABLE value);
  ::meshtastic::StoreAndForward_History* PROTOBUF_NULLABLE unsafe_arena_release_history();

  private:
  const ::meshtastic::StoreAndForward_History& _internal_history() const;
  ::meshtastic::StoreAndForward_History* PROTOBUF_NONNULL _internal_mutable_history();

  public:
  // .meshtastic.StoreAndForward.Heartbeat heartbeat = 4;
  bool has_heartbeat() const;
  private:
  bool _internal_has_heartbeat() const;

  public:
  void clear_heartbeat() ;
  const ::meshtastic::StoreAndForward_Heartbeat& heartbeat() const;
  [[nodiscard]] ::meshtastic::StoreAndForward_Heartbeat* PROTOBUF_NULLABLE release_heartbeat();
  ::meshtastic::StoreAndForward_Heartbeat* PROTOBUF_NONNULL mutable_heartbeat();
  void set_allocated_heartbeat(::meshtastic::StoreAndForward_Heartbeat* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_heartbeat(::meshtastic::StoreAndForward_Heartbeat* PROTOBUF_NULLABLE value);
  ::meshtastic::StoreAndForward_Heartbeat* PROTOBUF_NULLABLE unsafe_arena_release_heartbeat();

  private:
  const ::meshtastic::StoreAndForward_Heartbeat& _internal_heartbeat() const;
  ::meshtastic::StoreAndForward_Heartbeat* PROTOBUF_NONNULL _internal_mutable_heartbeat();

  public:
  // bytes text = 5;
  bool has_text() const;
  void clear_text() ;
  const ::std::string& text() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_text(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_text();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_text();
  void set_allocated_text(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_text() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_text(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_text();

  public:
  void clear_variant();
  VariantCase variant_case() const;
  // @@protoc_insertion_point(class_scope:meshtastic.StoreAndForward)
 private:
  class _Internal;
  void set_has_stats();
  void set_has_history();
  void set_has_heartbeat();
  void set_has_text();
  inline bool has_variant() const;
  inline void clear_has_variant();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 5,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const StoreAndForward& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    int rr_;
    union VariantUnion {
      constexpr VariantUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE stats_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE history_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE heartbeat_;
      ::google::protobuf::internal::ArenaStringPtr text_;
    } variant_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fstoreforward_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StoreAndForward_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// StoreAndForward_Statistics

// uint32 messages_total = 1;
inline void StoreAndForward_Statistics::clear_messages_total() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messages_total_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::uint32_t StoreAndForward_Statistics::messages_total() const {
  // @@protoc_insertion_point(field_get:meshtastic.StoreAndForward.Statistics.messages_total)
  return _internal_messages_total();
}
inline void StoreAndForward_Statistics::set_messages_total(::uint32_t value) {
  _internal_set_messages_total(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:meshtastic.StoreAndForward.Statistics.messages_total)
}
inline ::uint32_t StoreAndForward_Statistics::_internal_messages_total() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.messages_total_;
}
inline void StoreAndForward_Statistics::_internal_set_messages_total(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messages_total_ = value;
}

// uint32 messages_saved = 2;
inline void StoreAndForward_Statistics::clear_messages_saved() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messages_saved_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint32_t StoreAndForward_Statistics::messages_saved() const {
  // @@protoc_insertion_point(field_get:meshtastic.StoreAndForward.Statistics.messages_saved)
  return _internal_messages_saved();
}
inline void StoreAndForward_Statistics::set_messages_saved(::uint32_t value) {
  _internal_set_messages_saved(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.StoreAndForward.Statistics.messages_saved)
}
inline ::uint32_t StoreAndForward_Statistics::_internal_messages_saved() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.messages_saved_;
}
inline void StoreAndForward_Statistics::_internal_set_messages_saved(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messages_saved_ = value;
}

// uint32 messages_max = 3;
inline void StoreAndForward_Statistics::clear_messages_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messages_max_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint32_t StoreAndForward_Statistics::messages_max() const {
  // @@protoc_insertion_point(field_get:meshtastic.StoreAndForward.Statistics.messages_max)
  return _internal_messages_max();
}
inline void StoreAndForward_Statistics::set_messages_max(::uint32_t value) {
  _internal_set_messages_max(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:meshtastic.StoreAndForward.Statistics.messages_max)
}
inline ::uint32_t StoreAndForward_Statistics::_internal_messages_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.messages_max_;
}
inline void StoreAndForward_Statistics::_internal_set_messages_max(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messages_max_ = value;
}

// uint32 up_time = 4;
inline void StoreAndForward_Statistics::clear_up_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.up_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint32_t StoreAndForward_Statistics::up_time() const {
  // @@protoc_insertion_point(field_get:meshtastic.StoreAndForward.Statistics.up_time)
  return _internal_up_time();
}
inline void StoreAndForward_Statistics::set_up_time(::uint32_t value) {
  _internal_set_up_time(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:meshtastic.StoreAndForward.Statistics.up_time)
}
inline ::uint32_t StoreAndForward_Statistics::_internal_up_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.up_time_;
}
inline void StoreAndForward_Statistics::_internal_set_up_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.up_time_ = value;
}

// uint32 requests = 5;
inline void StoreAndForward_Statistics::clear_requests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requests_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::uint32_t StoreAndForward_Statistics::requests() const {
  // @@protoc_insertion_point(field_get:meshtastic.StoreAndForward.Statistics.requests)
  return _internal_requests();
}
inline void StoreAndForward_Statistics::set_requests(::uint32_t value) {
  _internal_set_requests(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:meshtastic.StoreAndForward.Statistics.requests)
}
inline ::uint32_t StoreAndForward_Statistics::_internal_requests() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requests_;
}
inline void StoreAndForward_Statistics::_internal_set_requests(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requests_ = value;
}

// uint32 requests_history = 6;
inline void StoreAndForward_Statistics::clear_requests_history() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requests_history_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline ::uint32_t StoreAndForward_Statistics::requests_history() const {
  // @@protoc_insertion_point(field_get:meshtastic.StoreAndForward.Statistics.requests_history)
  return _internal_requests_history();
}
inline void StoreAndForward_Statistics::set_requests_history(::uint32_t value) {
  _internal_set_requests_history(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:meshtastic.StoreAndForward.Statistics.requests_history)
}
inline ::uint32_t StoreAndForward_Statistics::_internal_requests_history() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requests_history_;
}
inline void StoreAndForward_Statistics::_internal_set_requests_history(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requests_history_ = value;
}

// bool heartbeat = 7;
inline void StoreAndForward_Statistics::clear_heartbeat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heartbeat_ = false;
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline bool StoreAndForward_Statistics::heartbeat() const {
  // @@protoc_insertion_point(field_get:meshtastic.StoreAndForward.Statistics.heartbeat)
  return _internal_heartbeat();
}
inline void StoreAndForward_Statistics::set_heartbeat(bool value) {
  _internal_set_heartbeat(value);
  _impl_._has_bits_[0] |= 0x00000040U;
  // @@protoc_insertion_point(field_set:meshtastic.StoreAndForward.Statistics.heartbeat)
}
inline bool StoreAndForward_Statistics::_internal_heartbeat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.heartbeat_;
}
inline void StoreAndForward_Statistics::_internal_set_heartbeat(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heartbeat_ = value;
}

// uint32 return_max = 8;
inline void StoreAndForward_Statistics::clear_return_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.return_max_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080U;
}
inline ::uint32_t StoreAndForward_Statistics::return_max() const {
  // @@protoc_insertion_point(field_get:meshtastic.StoreAndForward.Statistics.return_max)
  return _internal_return_max();
}
inline void StoreAndForward_Statistics::set_return_max(::uint32_t value) {
  _internal_set_return_max(value);
  _impl_._has_bits_[0] |= 0x00000080U;
  // @@protoc_insertion_point(field_set:meshtastic.StoreAndForward.Statistics.return_max)
}
inline ::uint32_t StoreAndForward_Statistics::_internal_return_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.return_max_;
}
inline void StoreAndForward_Statistics::_internal_set_return_max(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.return_max_ = value;
}

// uint32 return_window = 9;
inline void StoreAndForward_Statistics::clear_return_window() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.return_window_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100U;
}
inline ::uint32_t StoreAndForward_Statistics::return_window() const {
  // @@protoc_insertion_point(field_get:meshtastic.StoreAndForward.Statistics.return_window)
  return _internal_return_window();
}
inline void StoreAndForward_Statistics::set_return_window(::uint32_t value) {
  _internal_set_return_window(value);
  _impl_._has_bits_[0] |= 0x00000100U;
  // @@protoc_insertion_point(field_set:meshtastic.StoreAndForward.Statistics.return_window)
}
inline ::uint32_t StoreAndForward_Statistics::_internal_return_window() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.return_window_;
}
inline void StoreAndForward_Statistics::_internal_set_return_window(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.return_window_ = value;
}

// -------------------------------------------------------------------

// StoreAndForward_History

// uint32 history_messages = 1;
inline void StoreAndForward_History::clear_history_messages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.history_messages_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::uint32_t StoreAndForward_History::history_messages() const {
  // @@protoc_insertion_point(field_get:meshtastic.StoreAndForward.History.history_messages)
  return _internal_history_messages();
}
inline void StoreAndForward_History::set_history_messages(::uint32_t value) {
  _internal_set_history_messages(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:meshtastic.StoreAndForward.History.history_messages)
}
inline ::uint32_t StoreAndForward_History::_internal_history_messages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.history_messages_;
}
inline void StoreAndForward_History::_internal_set_history_messages(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.history_messages_ = value;
}

// uint32 window = 2;
inline void StoreAndForward_History::clear_window() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.window_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint32_t StoreAndForward_History::window() const {
  // @@protoc_insertion_point(field_get:meshtastic.StoreAndForward.History.window)
  return _internal_window();
}
inline void StoreAndForward_History::set_window(::uint32_t value) {
  _internal_set_window(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.StoreAndForward.History.window)
}
inline ::uint32_t StoreAndForward_History::_internal_window() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.window_;
}
inline void StoreAndForward_History::_internal_set_window(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.window_ = value;
}

// uint32 last_request = 3;
inline void StoreAndForward_History::clear_last_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_request_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint32_t StoreAndForward_History::last_request() const {
  // @@protoc_insertion_point(field_get:meshtastic.StoreAndForward.History.last_request)
  return _internal_last_request();
}
inline void StoreAndForward_History::set_last_request(::uint32_t value) {
  _internal_set_last_request(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:meshtastic.StoreAndForward.History.last_request)
}
inline ::uint32_t StoreAndForward_History::_internal_last_request() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_request_;
}
inline void StoreAndForward_History::_internal_set_last_request(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_request_ = value;
}

// -------------------------------------------------------------------

// StoreAndForward_Heartbeat

// uint32 period = 1;
inline void StoreAndForward_Heartbeat::clear_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.period_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::uint32_t StoreAndForward_Heartbeat::period() const {
  // @@protoc_insertion_point(field_get:meshtastic.StoreAndForward.Heartbeat.period)
  return _internal_period();
}
inline void StoreAndForward_Heartbeat::set_period(::uint32_t value) {
  _internal_set_period(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:meshtastic.StoreAndForward.Heartbeat.period)
}
inline ::uint32_t StoreAndForward_Heartbeat::_internal_period() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.period_;
}
inline void StoreAndForward_Heartbeat::_internal_set_period(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.period_ = value;
}

// uint32 secondary = 2;
inline void StoreAndForward_Heartbeat::clear_secondary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secondary_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint32_t StoreAndForward_Heartbeat::secondary() const {
  // @@protoc_insertion_point(field_get:meshtastic.StoreAndForward.Heartbeat.secondary)
  return _internal_secondary();
}
inline void StoreAndForward_Heartbeat::set_secondary(::uint32_t value) {
  _internal_set_secondary(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.StoreAndForward.Heartbeat.secondary)
}
inline ::uint32_t StoreAndForward_Heartbeat::_internal_secondary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.secondary_;
}
inline void StoreAndForward_Heartbeat::_internal_set_secondary(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secondary_ = value;
}

// -------------------------------------------------------------------

// StoreAndForward

// .meshtastic.StoreAndForward.RequestResponse rr = 1;
inline void StoreAndForward::clear_rr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rr_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::meshtastic::StoreAndForward_RequestResponse StoreAndForward::rr() const {
  // @@protoc_insertion_point(field_get:meshtastic.StoreAndForward.rr)
  return _internal_rr();
}
inline void StoreAndForward::set_rr(::meshtastic::StoreAndForward_RequestResponse value) {
  _internal_set_rr(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:meshtastic.StoreAndForward.rr)
}
inline ::meshtastic::StoreAndForward_RequestResponse StoreAndForward::_internal_rr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::meshtastic::StoreAndForward_RequestResponse>(_impl_.rr_);
}
inline void StoreAndForward::_internal_set_rr(::meshtastic::StoreAndForward_RequestResponse value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rr_ = value;
}

// .meshtastic.StoreAndForward.Statistics stats = 2;
inline bool StoreAndForward::has_stats() const {
  return variant_case() == kStats;
}
inline bool StoreAndForward::_internal_has_stats() const {
  return variant_case() == kStats;
}
inline void StoreAndForward::set_has_stats() {
  _impl_._oneof_case_[0] = kStats;
}
inline void StoreAndForward::clear_stats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (variant_case() == kStats) {
    if (GetArena() == nullptr) {
      delete _impl_.variant_.stats_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.variant_.stats_);
    }
    clear_has_variant();
  }
}
inline ::meshtastic::StoreAndForward_Statistics* PROTOBUF_NULLABLE StoreAndForward::release_stats() {
  // @@protoc_insertion_point(field_release:meshtastic.StoreAndForward.stats)
  if (variant_case() == kStats) {
    clear_has_variant();
    auto* temp = reinterpret_cast<::meshtastic::StoreAndForward_Statistics*>(_impl_.variant_.stats_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.variant_.stats_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::meshtastic::StoreAndForward_Statistics& StoreAndForward::_internal_stats() const {
  return variant_case() == kStats ? *reinterpret_cast<::meshtastic::StoreAndForward_Statistics*>(_impl_.variant_.stats_) : reinterpret_cast<::meshtastic::StoreAndForward_Statistics&>(::meshtastic::_StoreAndForward_Statistics_default_instance_);
}
inline const ::meshtastic::StoreAndForward_Statistics& StoreAndForward::stats() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.StoreAndForward.stats)
  return _internal_stats();
}
inline ::meshtastic::StoreAndForward_Statistics* PROTOBUF_NULLABLE StoreAndForward::unsafe_arena_release_stats() {
  // @@protoc_insertion_point(field_unsafe_arena_release:meshtastic.StoreAndForward.stats)
  if (variant_case() == kStats) {
    clear_has_variant();
    auto* temp = reinterpret_cast<::meshtastic::StoreAndForward_Statistics*>(_impl_.variant_.stats_);
    _impl_.variant_.stats_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void StoreAndForward::unsafe_arena_set_allocated_stats(
    ::meshtastic::StoreAndForward_Statistics* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_variant();
  if (value) {
    set_has_stats();
    _impl_.variant_.stats_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.StoreAndForward.stats)
}
inline ::meshtastic::StoreAndForward_Statistics* PROTOBUF_NONNULL StoreAndForward::_internal_mutable_stats() {
  if (variant_case() != kStats) {
    clear_variant();
    set_has_stats();
    _impl_.variant_.stats_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::meshtastic::StoreAndForward_Statistics>(GetArena()));
  }
  return reinterpret_cast<::meshtastic::StoreAndForward_Statistics*>(_impl_.variant_.stats_);
}
inline ::meshtastic::StoreAndForward_Statistics* PROTOBUF_NONNULL StoreAndForward::mutable_stats()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::meshtastic::StoreAndForward_Statistics* _msg = _internal_mutable_stats();
  // @@protoc_insertion_point(field_mutable:meshtastic.StoreAndForward.stats)
  return _msg;
}

// .meshtastic.StoreAndForward.History history = 3;
inline bool StoreAndForward::has_history() const {
  return variant_case() == kHistory;
}
inline bool StoreAndForward::_internal_has_history() const {
  return variant_case() == kHistory;
}
inline void StoreAndForward::set_has_history() {
  _impl_._oneof_case_[0] = kHistory;
}
inline void StoreAndForward::clear_history() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (variant_case() == kHistory) {
    if (GetArena() == nullptr) {
      delete _impl_.variant_.history_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.variant_.history_);
    }
    clear_has_variant();
  }
}
inline ::meshtastic::StoreAndForward_History* PROTOBUF_NULLABLE StoreAndForward::release_history() {
  // @@protoc_insertion_point(field_release:meshtastic.StoreAndForward.history)
  if (variant_case() == kHistory) {
    clear_has_variant();
    auto* temp = reinterpret_cast<::meshtastic::StoreAndForward_History*>(_impl_.variant_.history_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.variant_.history_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::meshtastic::StoreAndForward_History& StoreAndForward::_internal_history() const {
  return variant_case() == kHistory ? *reinterpret_cast<::meshtastic::StoreAndForward_History*>(_impl_.variant_.history_) : reinterpret_cast<::meshtastic::StoreAndForward_History&>(::meshtastic::_StoreAndForward_History_default_instance_);
}
inline const ::meshtastic::StoreAndForward_History& StoreAndForward::history() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.StoreAndForward.history)
  return _internal_history();
}
inline ::meshtastic::StoreAndForward_History* PROTOBUF_NULLABLE StoreAndForward::unsafe_arena_release_history() {
  // @@protoc_insertion_point(field_unsafe_arena_release:meshtastic.StoreAndForward.history)
  if (variant_case() == kHistory) {
    clear_has_variant();
    auto* temp = reinterpret_cast<::meshtastic::StoreAndForward_History*>(_impl_.variant_.history_);
    _impl_.variant_.history_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void StoreAndForward::unsafe_arena_set_allocated_history(
    ::meshtastic::StoreAndForward_History* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_variant();
  if (value) {
    set_has_history();
    _impl_.variant_.history_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.StoreAndForward.history)
}
inline ::meshtastic::StoreAndForward_History* PROTOBUF_NONNULL StoreAndForward::_internal_mutable_history() {
  if (variant_case() != kHistory) {
    clear_variant();
    set_has_history();
    _impl_.variant_.history_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::meshtastic::StoreAndForward_History>(GetArena()));
  }
  return reinterpret_cast<::meshtastic::StoreAndForward_History*>(_impl_.variant_.history_);
}
inline ::meshtastic::StoreAndForward_History* PROTOBUF_NONNULL StoreAndForward::mutable_history()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::meshtastic::StoreAndForward_History* _msg = _internal_mutable_history();
  // @@protoc_insertion_point(field_mutable:meshtastic.StoreAndForward.history)
  return _msg;
}

// .meshtastic.StoreAndForward.Heartbeat heartbeat = 4;
inline bool StoreAndForward::has_heartbeat() const {
  return variant_case() == kHeartbeat;
}
inline bool StoreAndForward::_internal_has_heartbeat() const {
  return variant_case() == kHeartbeat;
}
inline void StoreAndForward::set_has_heartbeat() {
  _impl_._oneof_case_[0] = kHeartbeat;
}
inline void StoreAndForward::clear_heartbeat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (variant_case() == kHeartbeat) {
    if (GetArena() == nullptr) {
      delete _impl_.variant_.heartbeat_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.variant_.heartbeat_);
    }
    clear_has_variant();
  }
}
inline ::meshtastic::StoreAndForward_Heartbeat* PROTOBUF_NULLABLE StoreAndForward::release_heartbeat() {
  // @@protoc_insertion_point(field_release:meshtastic.StoreAndForward.heartbeat)
  if (variant_case() == kHeartbeat) {
    clear_has_variant();
    auto* temp = reinterpret_cast<::meshtastic::StoreAndForward_Heartbeat*>(_impl_.variant_.heartbeat_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.variant_.heartbeat_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::meshtastic::StoreAndForward_Heartbeat& StoreAndForward::_internal_heartbeat() const {
  return variant_case() == kHeartbeat ? *reinterpret_cast<::meshtastic::StoreAndForward_Heartbeat*>(_impl_.variant_.heartbeat_) : reinterpret_cast<::meshtastic::StoreAndForward_Heartbeat&>(::meshtastic::_StoreAndForward_Heartbeat_default_instance_);
}
inline const ::meshtastic::StoreAndForward_Heartbeat& StoreAndForward::heartbeat() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.StoreAndForward.heartbeat)
  return _internal_heartbeat();
}
inline ::meshtastic::StoreAndForward_Heartbeat* PROTOBUF_NULLABLE StoreAndForward::unsafe_arena_release_heartbeat() {
  // @@protoc_insertion_point(field_unsafe_arena_release:meshtastic.StoreAndForward.heartbeat)
  if (variant_case() == kHeartbeat) {
    clear_has_variant();
    auto* temp = reinterpret_cast<::meshtastic::StoreAndForward_Heartbeat*>(_impl_.variant_.heartbeat_);
    _impl_.variant_.heartbeat_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void StoreAndForward::unsafe_arena_set_allocated_heartbeat(
    ::meshtastic::StoreAndForward_Heartbeat* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_variant();
  if (value) {
    set_has_heartbeat();
    _impl_.variant_.heartbeat_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.StoreAndForward.heartbeat)
}
inline ::meshtastic::StoreAndForward_Heartbeat* PROTOBUF_NONNULL StoreAndForward::_internal_mutable_heartbeat() {
  if (variant_case() != kHeartbeat) {
    clear_variant();
    set_has_heartbeat();
    _impl_.variant_.heartbeat_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::meshtastic::StoreAndForward_Heartbeat>(GetArena()));
  }
  return reinterpret_cast<::meshtastic::StoreAndForward_Heartbeat*>(_impl_.variant_.heartbeat_);
}
inline ::meshtastic::StoreAndForward_Heartbeat* PROTOBUF_NONNULL StoreAndForward::mutable_heartbeat()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::meshtastic::StoreAndForward_Heartbeat* _msg = _internal_mutable_heartbeat();
  // @@protoc_insertion_point(field_mutable:meshtastic.StoreAndForward.heartbeat)
  return _msg;
}

// bytes text = 5;
inline bool StoreAndForward::has_text() const {
  return variant_case() == kText;
}
inline void StoreAndForward::set_has_text() {
  _impl_._oneof_case_[0] = kText;
}
inline void StoreAndForward::clear_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (variant_case() == kText) {
    _impl_.variant_.text_.Destroy();
    clear_has_variant();
  }
}
inline const ::std::string& StoreAndForward::text() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.StoreAndForward.text)
  return _internal_text();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void StoreAndForward::set_text(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (variant_case() != kText) {
    clear_variant();

    set_has_text();
    _impl_.variant_.text_.InitDefault();
  }
  _impl_.variant_.text_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.StoreAndForward.text)
}
inline ::std::string* PROTOBUF_NONNULL StoreAndForward::mutable_text()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_text();
  // @@protoc_insertion_point(field_mutable:meshtastic.StoreAndForward.text)
  return _s;
}
inline const ::std::string& StoreAndForward::_internal_text() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (variant_case() != kText) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.variant_.text_.Get();
}
inline void StoreAndForward::_internal_set_text(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (variant_case() != kText) {
    clear_variant();

    set_has_text();
    _impl_.variant_.text_.InitDefault();
  }
  _impl_.variant_.text_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL StoreAndForward::_internal_mutable_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (variant_case() != kText) {
    clear_variant();

    set_has_text();
    _impl_.variant_.text_.InitDefault();
  }
  return _impl_.variant_.text_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE StoreAndForward::release_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.StoreAndForward.text)
  if (variant_case() != kText) {
    return nullptr;
  }
  clear_has_variant();
  return _impl_.variant_.text_.Release();
}
inline void StoreAndForward::set_allocated_text(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_variant()) {
    clear_variant();
  }
  if (value != nullptr) {
    set_has_text();
    _impl_.variant_.text_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.StoreAndForward.text)
}

inline bool StoreAndForward::has_variant() const {
  return variant_case() != VARIANT_NOT_SET;
}
inline void StoreAndForward::clear_has_variant() {
  _impl_._oneof_case_[0] = VARIANT_NOT_SET;
}
inline StoreAndForward::VariantCase StoreAndForward::variant_case() const {
  return StoreAndForward::VariantCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace meshtastic


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::meshtastic::StoreAndForward_RequestResponse> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::meshtastic::StoreAndForward_RequestResponse>() {
  return ::meshtastic::StoreAndForward_RequestResponse_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // meshtastic_2fstoreforward_2eproto_2epb_2eh
