// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: meshtastic/module_config.proto
// Protobuf C++ Version: 6.31.1

#include "meshtastic/module_config.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace meshtastic {

inline constexpr RemoteHardwarePin::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gpio_pin_{0u},
        type_{static_cast< ::meshtastic::RemoteHardwarePinType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR RemoteHardwarePin::RemoteHardwarePin(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RemoteHardwarePin_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RemoteHardwarePinDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoteHardwarePinDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoteHardwarePinDefaultTypeInternal() {}
  union {
    RemoteHardwarePin _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoteHardwarePinDefaultTypeInternal _RemoteHardwarePin_default_instance_;

inline constexpr ModuleConfig_TelemetryConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_update_interval_{0u},
        environment_update_interval_{0u},
        environment_measurement_enabled_{false},
        environment_screen_enabled_{false},
        environment_display_fahrenheit_{false},
        air_quality_enabled_{false},
        air_quality_interval_{0u},
        power_update_interval_{0u},
        power_measurement_enabled_{false},
        power_screen_enabled_{false},
        health_measurement_enabled_{false},
        health_screen_enabled_{false},
        health_update_interval_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleConfig_TelemetryConfig::ModuleConfig_TelemetryConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModuleConfig_TelemetryConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleConfig_TelemetryConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleConfig_TelemetryConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleConfig_TelemetryConfigDefaultTypeInternal() {}
  union {
    ModuleConfig_TelemetryConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleConfig_TelemetryConfigDefaultTypeInternal _ModuleConfig_TelemetryConfig_default_instance_;

inline constexpr ModuleConfig_StoreForwardConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        records_{0u},
        enabled_{false},
        heartbeat_{false},
        is_server_{false},
        history_return_max_{0u},
        history_return_window_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleConfig_StoreForwardConfig::ModuleConfig_StoreForwardConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModuleConfig_StoreForwardConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleConfig_StoreForwardConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleConfig_StoreForwardConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleConfig_StoreForwardConfigDefaultTypeInternal() {}
  union {
    ModuleConfig_StoreForwardConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleConfig_StoreForwardConfigDefaultTypeInternal _ModuleConfig_StoreForwardConfig_default_instance_;

inline constexpr ModuleConfig_SerialConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rxd_{0u},
        enabled_{false},
        echo_{false},
        override_console_serial_port_{false},
        txd_{0u},
        baud_{static_cast< ::meshtastic::ModuleConfig_SerialConfig_Serial_Baud >(0)},
        timeout_{0u},
        mode_{static_cast< ::meshtastic::ModuleConfig_SerialConfig_Serial_Mode >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleConfig_SerialConfig::ModuleConfig_SerialConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModuleConfig_SerialConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleConfig_SerialConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleConfig_SerialConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleConfig_SerialConfigDefaultTypeInternal() {}
  union {
    ModuleConfig_SerialConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleConfig_SerialConfigDefaultTypeInternal _ModuleConfig_SerialConfig_default_instance_;

inline constexpr ModuleConfig_RangeTestConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sender_{0u},
        enabled_{false},
        save_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleConfig_RangeTestConfig::ModuleConfig_RangeTestConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModuleConfig_RangeTestConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleConfig_RangeTestConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleConfig_RangeTestConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleConfig_RangeTestConfigDefaultTypeInternal() {}
  union {
    ModuleConfig_RangeTestConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleConfig_RangeTestConfigDefaultTypeInternal _ModuleConfig_RangeTestConfig_default_instance_;

inline constexpr ModuleConfig_PaxcounterConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        enabled_{false},
        paxcounter_update_interval_{0u},
        wifi_threshold_{0},
        ble_threshold_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleConfig_PaxcounterConfig::ModuleConfig_PaxcounterConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModuleConfig_PaxcounterConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleConfig_PaxcounterConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleConfig_PaxcounterConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleConfig_PaxcounterConfigDefaultTypeInternal() {}
  union {
    ModuleConfig_PaxcounterConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleConfig_PaxcounterConfigDefaultTypeInternal _ModuleConfig_PaxcounterConfig_default_instance_;

inline constexpr ModuleConfig_NeighborInfoConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        update_interval_{0u},
        enabled_{false},
        transmit_over_lora_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleConfig_NeighborInfoConfig::ModuleConfig_NeighborInfoConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModuleConfig_NeighborInfoConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleConfig_NeighborInfoConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleConfig_NeighborInfoConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleConfig_NeighborInfoConfigDefaultTypeInternal() {}
  union {
    ModuleConfig_NeighborInfoConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleConfig_NeighborInfoConfigDefaultTypeInternal _ModuleConfig_NeighborInfoConfig_default_instance_;

inline constexpr ModuleConfig_MapReportSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        publish_interval_secs_{0u},
        position_precision_{0u},
        should_report_location_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleConfig_MapReportSettings::ModuleConfig_MapReportSettings(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModuleConfig_MapReportSettings_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleConfig_MapReportSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleConfig_MapReportSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleConfig_MapReportSettingsDefaultTypeInternal() {}
  union {
    ModuleConfig_MapReportSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleConfig_MapReportSettingsDefaultTypeInternal _ModuleConfig_MapReportSettings_default_instance_;

inline constexpr ModuleConfig_ExternalNotificationConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        output_ms_{0u},
        output_{0u},
        enabled_{false},
        active_{false},
        alert_message_{false},
        alert_bell_{false},
        output_vibra_{0u},
        output_buzzer_{0u},
        use_pwm_{false},
        alert_message_vibra_{false},
        alert_message_buzzer_{false},
        alert_bell_vibra_{false},
        nag_timeout_{0u},
        alert_bell_buzzer_{false},
        use_i2s_as_buzzer_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleConfig_ExternalNotificationConfig::ModuleConfig_ExternalNotificationConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModuleConfig_ExternalNotificationConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleConfig_ExternalNotificationConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleConfig_ExternalNotificationConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleConfig_ExternalNotificationConfigDefaultTypeInternal() {}
  union {
    ModuleConfig_ExternalNotificationConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleConfig_ExternalNotificationConfigDefaultTypeInternal _ModuleConfig_ExternalNotificationConfig_default_instance_;

inline constexpr ModuleConfig_DetectionSensorConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        minimum_broadcast_secs_{0u},
        state_broadcast_secs_{0u},
        enabled_{false},
        send_bell_{false},
        use_pullup_{false},
        monitor_pin_{0u},
        detection_trigger_type_{static_cast< ::meshtastic::ModuleConfig_DetectionSensorConfig_TriggerType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleConfig_DetectionSensorConfig::ModuleConfig_DetectionSensorConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModuleConfig_DetectionSensorConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleConfig_DetectionSensorConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleConfig_DetectionSensorConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleConfig_DetectionSensorConfigDefaultTypeInternal() {}
  union {
    ModuleConfig_DetectionSensorConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleConfig_DetectionSensorConfigDefaultTypeInternal _ModuleConfig_DetectionSensorConfig_default_instance_;

inline constexpr ModuleConfig_CannedMessageConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        allow_input_source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        inputbroker_pin_a_{0u},
        inputbroker_pin_b_{0u},
        inputbroker_pin_press_{0u},
        inputbroker_event_cw_{static_cast< ::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar >(0)},
        inputbroker_event_ccw_{static_cast< ::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar >(0)},
        inputbroker_event_press_{static_cast< ::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar >(0)},
        rotary1_enabled_{false},
        updown1_enabled_{false},
        enabled_{false},
        send_bell_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleConfig_CannedMessageConfig::ModuleConfig_CannedMessageConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModuleConfig_CannedMessageConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleConfig_CannedMessageConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleConfig_CannedMessageConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleConfig_CannedMessageConfigDefaultTypeInternal() {}
  union {
    ModuleConfig_CannedMessageConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleConfig_CannedMessageConfigDefaultTypeInternal _ModuleConfig_CannedMessageConfig_default_instance_;

inline constexpr ModuleConfig_AudioConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        codec2_enabled_{false},
        ptt_pin_{0u},
        bitrate_{static_cast< ::meshtastic::ModuleConfig_AudioConfig_Audio_Baud >(0)},
        i2s_ws_{0u},
        i2s_sd_{0u},
        i2s_din_{0u},
        i2s_sck_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleConfig_AudioConfig::ModuleConfig_AudioConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModuleConfig_AudioConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleConfig_AudioConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleConfig_AudioConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleConfig_AudioConfigDefaultTypeInternal() {}
  union {
    ModuleConfig_AudioConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleConfig_AudioConfigDefaultTypeInternal _ModuleConfig_AudioConfig_default_instance_;

inline constexpr ModuleConfig_AmbientLightingConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        led_state_{false},
        current_{0u},
        red_{0u},
        green_{0u},
        blue_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleConfig_AmbientLightingConfig::ModuleConfig_AmbientLightingConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModuleConfig_AmbientLightingConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleConfig_AmbientLightingConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleConfig_AmbientLightingConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleConfig_AmbientLightingConfigDefaultTypeInternal() {}
  union {
    ModuleConfig_AmbientLightingConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleConfig_AmbientLightingConfigDefaultTypeInternal _ModuleConfig_AmbientLightingConfig_default_instance_;

inline constexpr ModuleConfig_RemoteHardwareConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        available_pins_{},
        enabled_{false},
        allow_undefined_pin_access_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleConfig_RemoteHardwareConfig::ModuleConfig_RemoteHardwareConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModuleConfig_RemoteHardwareConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleConfig_RemoteHardwareConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleConfig_RemoteHardwareConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleConfig_RemoteHardwareConfigDefaultTypeInternal() {}
  union {
    ModuleConfig_RemoteHardwareConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleConfig_RemoteHardwareConfigDefaultTypeInternal _ModuleConfig_RemoteHardwareConfig_default_instance_;

inline constexpr ModuleConfig_MQTTConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        root_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        map_report_settings_{nullptr},
        enabled_{false},
        encryption_enabled_{false},
        json_enabled_{false},
        tls_enabled_{false},
        proxy_to_client_enabled_{false},
        map_reporting_enabled_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleConfig_MQTTConfig::ModuleConfig_MQTTConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModuleConfig_MQTTConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleConfig_MQTTConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleConfig_MQTTConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleConfig_MQTTConfigDefaultTypeInternal() {}
  union {
    ModuleConfig_MQTTConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleConfig_MQTTConfigDefaultTypeInternal _ModuleConfig_MQTTConfig_default_instance_;

inline constexpr ModuleConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_variant_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleConfig::ModuleConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModuleConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleConfigDefaultTypeInternal() {}
  union {
    ModuleConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleConfigDefaultTypeInternal _ModuleConfig_default_instance_;
}  // namespace meshtastic
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_meshtastic_2fmodule_5fconfig_2eproto[6];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_meshtastic_2fmodule_5fconfig_2eproto = nullptr;
const ::uint32_t
    TableStruct_meshtastic_2fmodule_5fconfig_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_MQTTConfig, _impl_._has_bits_),
        14, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_MQTTConfig, _impl_.enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_MQTTConfig, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_MQTTConfig, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_MQTTConfig, _impl_.password_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_MQTTConfig, _impl_.encryption_enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_MQTTConfig, _impl_.json_enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_MQTTConfig, _impl_.tls_enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_MQTTConfig, _impl_.root_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_MQTTConfig, _impl_.proxy_to_client_enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_MQTTConfig, _impl_.map_reporting_enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_MQTTConfig, _impl_.map_report_settings_),
        5,
        0,
        1,
        2,
        6,
        7,
        8,
        3,
        9,
        10,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_MapReportSettings, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_MapReportSettings, _impl_.publish_interval_secs_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_MapReportSettings, _impl_.position_precision_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_MapReportSettings, _impl_.should_report_location_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_RemoteHardwareConfig, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_RemoteHardwareConfig, _impl_.enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_RemoteHardwareConfig, _impl_.allow_undefined_pin_access_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_RemoteHardwareConfig, _impl_.available_pins_),
        0,
        1,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_NeighborInfoConfig, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_NeighborInfoConfig, _impl_.enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_NeighborInfoConfig, _impl_.update_interval_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_NeighborInfoConfig, _impl_.transmit_over_lora_),
        1,
        0,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_DetectionSensorConfig, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_DetectionSensorConfig, _impl_.enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_DetectionSensorConfig, _impl_.minimum_broadcast_secs_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_DetectionSensorConfig, _impl_.state_broadcast_secs_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_DetectionSensorConfig, _impl_.send_bell_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_DetectionSensorConfig, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_DetectionSensorConfig, _impl_.monitor_pin_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_DetectionSensorConfig, _impl_.detection_trigger_type_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_DetectionSensorConfig, _impl_.use_pullup_),
        3,
        1,
        2,
        4,
        0,
        6,
        7,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_AudioConfig, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_AudioConfig, _impl_.codec2_enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_AudioConfig, _impl_.ptt_pin_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_AudioConfig, _impl_.bitrate_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_AudioConfig, _impl_.i2s_ws_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_AudioConfig, _impl_.i2s_sd_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_AudioConfig, _impl_.i2s_din_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_AudioConfig, _impl_.i2s_sck_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_PaxcounterConfig, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_PaxcounterConfig, _impl_.enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_PaxcounterConfig, _impl_.paxcounter_update_interval_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_PaxcounterConfig, _impl_.wifi_threshold_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_PaxcounterConfig, _impl_.ble_threshold_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_SerialConfig, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_SerialConfig, _impl_.enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_SerialConfig, _impl_.echo_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_SerialConfig, _impl_.rxd_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_SerialConfig, _impl_.txd_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_SerialConfig, _impl_.baud_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_SerialConfig, _impl_.timeout_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_SerialConfig, _impl_.mode_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_SerialConfig, _impl_.override_console_serial_port_),
        1,
        2,
        0,
        4,
        5,
        6,
        7,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_ExternalNotificationConfig, _impl_._has_bits_),
        18, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_ExternalNotificationConfig, _impl_.enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_ExternalNotificationConfig, _impl_.output_ms_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_ExternalNotificationConfig, _impl_.output_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_ExternalNotificationConfig, _impl_.output_vibra_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_ExternalNotificationConfig, _impl_.output_buzzer_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_ExternalNotificationConfig, _impl_.active_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_ExternalNotificationConfig, _impl_.alert_message_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_ExternalNotificationConfig, _impl_.alert_message_vibra_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_ExternalNotificationConfig, _impl_.alert_message_buzzer_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_ExternalNotificationConfig, _impl_.alert_bell_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_ExternalNotificationConfig, _impl_.alert_bell_vibra_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_ExternalNotificationConfig, _impl_.alert_bell_buzzer_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_ExternalNotificationConfig, _impl_.use_pwm_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_ExternalNotificationConfig, _impl_.nag_timeout_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_ExternalNotificationConfig, _impl_.use_i2s_as_buzzer_),
        2,
        0,
        1,
        6,
        7,
        3,
        4,
        9,
        10,
        5,
        11,
        13,
        8,
        12,
        14,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_StoreForwardConfig, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_StoreForwardConfig, _impl_.enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_StoreForwardConfig, _impl_.heartbeat_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_StoreForwardConfig, _impl_.records_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_StoreForwardConfig, _impl_.history_return_max_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_StoreForwardConfig, _impl_.history_return_window_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_StoreForwardConfig, _impl_.is_server_),
        1,
        2,
        0,
        4,
        5,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_RangeTestConfig, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_RangeTestConfig, _impl_.enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_RangeTestConfig, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_RangeTestConfig, _impl_.save_),
        1,
        0,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_TelemetryConfig, _impl_._has_bits_),
        16, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_TelemetryConfig, _impl_.device_update_interval_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_TelemetryConfig, _impl_.environment_update_interval_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_TelemetryConfig, _impl_.environment_measurement_enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_TelemetryConfig, _impl_.environment_screen_enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_TelemetryConfig, _impl_.environment_display_fahrenheit_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_TelemetryConfig, _impl_.air_quality_enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_TelemetryConfig, _impl_.air_quality_interval_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_TelemetryConfig, _impl_.power_measurement_enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_TelemetryConfig, _impl_.power_update_interval_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_TelemetryConfig, _impl_.power_screen_enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_TelemetryConfig, _impl_.health_measurement_enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_TelemetryConfig, _impl_.health_update_interval_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_TelemetryConfig, _impl_.health_screen_enabled_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        7,
        9,
        10,
        12,
        11,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_CannedMessageConfig, _impl_._has_bits_),
        14, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_CannedMessageConfig, _impl_.rotary1_enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_CannedMessageConfig, _impl_.inputbroker_pin_a_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_CannedMessageConfig, _impl_.inputbroker_pin_b_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_CannedMessageConfig, _impl_.inputbroker_pin_press_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_CannedMessageConfig, _impl_.inputbroker_event_cw_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_CannedMessageConfig, _impl_.inputbroker_event_ccw_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_CannedMessageConfig, _impl_.inputbroker_event_press_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_CannedMessageConfig, _impl_.updown1_enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_CannedMessageConfig, _impl_.enabled_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_CannedMessageConfig, _impl_.allow_input_source_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_CannedMessageConfig, _impl_.send_bell_),
        7,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        9,
        0,
        10,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_AmbientLightingConfig, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_AmbientLightingConfig, _impl_.led_state_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_AmbientLightingConfig, _impl_.current_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_AmbientLightingConfig, _impl_.red_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_AmbientLightingConfig, _impl_.green_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig_AmbientLightingConfig, _impl_.blue_),
        0,
        1,
        2,
        3,
        4,
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig, _impl_.payload_variant_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::RemoteHardwarePin, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::RemoteHardwarePin, _impl_.gpio_pin_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::RemoteHardwarePin, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::RemoteHardwarePin, _impl_.type_),
        1,
        0,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::meshtastic::ModuleConfig_MQTTConfig)},
        {25, sizeof(::meshtastic::ModuleConfig_MapReportSettings)},
        {34, sizeof(::meshtastic::ModuleConfig_RemoteHardwareConfig)},
        {43, sizeof(::meshtastic::ModuleConfig_NeighborInfoConfig)},
        {52, sizeof(::meshtastic::ModuleConfig_DetectionSensorConfig)},
        {71, sizeof(::meshtastic::ModuleConfig_AudioConfig)},
        {88, sizeof(::meshtastic::ModuleConfig_PaxcounterConfig)},
        {99, sizeof(::meshtastic::ModuleConfig_SerialConfig)},
        {118, sizeof(::meshtastic::ModuleConfig_ExternalNotificationConfig)},
        {151, sizeof(::meshtastic::ModuleConfig_StoreForwardConfig)},
        {166, sizeof(::meshtastic::ModuleConfig_RangeTestConfig)},
        {175, sizeof(::meshtastic::ModuleConfig_TelemetryConfig)},
        {204, sizeof(::meshtastic::ModuleConfig_CannedMessageConfig)},
        {229, sizeof(::meshtastic::ModuleConfig_AmbientLightingConfig)},
        {242, sizeof(::meshtastic::ModuleConfig)},
        {258, sizeof(::meshtastic::RemoteHardwarePin)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::meshtastic::_ModuleConfig_MQTTConfig_default_instance_._instance,
    &::meshtastic::_ModuleConfig_MapReportSettings_default_instance_._instance,
    &::meshtastic::_ModuleConfig_RemoteHardwareConfig_default_instance_._instance,
    &::meshtastic::_ModuleConfig_NeighborInfoConfig_default_instance_._instance,
    &::meshtastic::_ModuleConfig_DetectionSensorConfig_default_instance_._instance,
    &::meshtastic::_ModuleConfig_AudioConfig_default_instance_._instance,
    &::meshtastic::_ModuleConfig_PaxcounterConfig_default_instance_._instance,
    &::meshtastic::_ModuleConfig_SerialConfig_default_instance_._instance,
    &::meshtastic::_ModuleConfig_ExternalNotificationConfig_default_instance_._instance,
    &::meshtastic::_ModuleConfig_StoreForwardConfig_default_instance_._instance,
    &::meshtastic::_ModuleConfig_RangeTestConfig_default_instance_._instance,
    &::meshtastic::_ModuleConfig_TelemetryConfig_default_instance_._instance,
    &::meshtastic::_ModuleConfig_CannedMessageConfig_default_instance_._instance,
    &::meshtastic::_ModuleConfig_AmbientLightingConfig_default_instance_._instance,
    &::meshtastic::_ModuleConfig_default_instance_._instance,
    &::meshtastic::_RemoteHardwarePin_default_instance_._instance,
};
const char descriptor_table_protodef_meshtastic_2fmodule_5fconfig_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\036meshtastic/module_config.proto\022\nmeshta"
    "stic\"\372%\n\014ModuleConfig\0223\n\004mqtt\030\001 \001(\0132#.me"
    "shtastic.ModuleConfig.MQTTConfigH\000\0227\n\006se"
    "rial\030\002 \001(\0132%.meshtastic.ModuleConfig.Ser"
    "ialConfigH\000\022T\n\025external_notification\030\003 \001"
    "(\01323.meshtastic.ModuleConfig.ExternalNot"
    "ificationConfigH\000\022D\n\rstore_forward\030\004 \001(\013"
    "2+.meshtastic.ModuleConfig.StoreForwardC"
    "onfigH\000\022>\n\nrange_test\030\005 \001(\0132(.meshtastic"
    ".ModuleConfig.RangeTestConfigH\000\022=\n\ttelem"
    "etry\030\006 \001(\0132(.meshtastic.ModuleConfig.Tel"
    "emetryConfigH\000\022F\n\016canned_message\030\007 \001(\0132,"
    ".meshtastic.ModuleConfig.CannedMessageCo"
    "nfigH\000\0225\n\005audio\030\010 \001(\0132$.meshtastic.Modul"
    "eConfig.AudioConfigH\000\022H\n\017remote_hardware"
    "\030\t \001(\0132-.meshtastic.ModuleConfig.RemoteH"
    "ardwareConfigH\000\022D\n\rneighbor_info\030\n \001(\0132+"
    ".meshtastic.ModuleConfig.NeighborInfoCon"
    "figH\000\022J\n\020ambient_lighting\030\013 \001(\0132..meshta"
    "stic.ModuleConfig.AmbientLightingConfigH"
    "\000\022J\n\020detection_sensor\030\014 \001(\0132..meshtastic"
    ".ModuleConfig.DetectionSensorConfigH\000\022\?\n"
    "\npaxcounter\030\r \001(\0132).meshtastic.ModuleCon"
    "fig.PaxcounterConfigH\000\032\260\002\n\nMQTTConfig\022\017\n"
    "\007enabled\030\001 \001(\010\022\017\n\007address\030\002 \001(\t\022\020\n\010usern"
    "ame\030\003 \001(\t\022\020\n\010password\030\004 \001(\t\022\032\n\022encryptio"
    "n_enabled\030\005 \001(\010\022\024\n\014json_enabled\030\006 \001(\010\022\023\n"
    "\013tls_enabled\030\007 \001(\010\022\014\n\004root\030\010 \001(\t\022\037\n\027prox"
    "y_to_client_enabled\030\t \001(\010\022\035\n\025map_reporti"
    "ng_enabled\030\n \001(\010\022G\n\023map_report_settings\030"
    "\013 \001(\0132*.meshtastic.ModuleConfig.MapRepor"
    "tSettings\032n\n\021MapReportSettings\022\035\n\025publis"
    "h_interval_secs\030\001 \001(\r\022\032\n\022position_precis"
    "ion\030\002 \001(\r\022\036\n\026should_report_location\030\003 \001("
    "\010\032\202\001\n\024RemoteHardwareConfig\022\017\n\007enabled\030\001 "
    "\001(\010\022\"\n\032allow_undefined_pin_access\030\002 \001(\010\022"
    "5\n\016available_pins\030\003 \003(\0132\035.meshtastic.Rem"
    "oteHardwarePin\032Z\n\022NeighborInfoConfig\022\017\n\007"
    "enabled\030\001 \001(\010\022\027\n\017update_interval\030\002 \001(\r\022\032"
    "\n\022transmit_over_lora\030\003 \001(\010\032\227\003\n\025Detection"
    "SensorConfig\022\017\n\007enabled\030\001 \001(\010\022\036\n\026minimum"
    "_broadcast_secs\030\002 \001(\r\022\034\n\024state_broadcast"
    "_secs\030\003 \001(\r\022\021\n\tsend_bell\030\004 \001(\010\022\014\n\004name\030\005"
    " \001(\t\022\023\n\013monitor_pin\030\006 \001(\r\022Z\n\026detection_t"
    "rigger_type\030\007 \001(\0162:.meshtastic.ModuleCon"
    "fig.DetectionSensorConfig.TriggerType\022\022\n"
    "\nuse_pullup\030\010 \001(\010\"\210\001\n\013TriggerType\022\r\n\tLOG"
    "IC_LOW\020\000\022\016\n\nLOGIC_HIGH\020\001\022\020\n\014FALLING_EDGE"
    "\020\002\022\017\n\013RISING_EDGE\020\003\022\032\n\026EITHER_EDGE_ACTIV"
    "E_LOW\020\004\022\033\n\027EITHER_EDGE_ACTIVE_HIGH\020\005\032\344\002\n"
    "\013AudioConfig\022\026\n\016codec2_enabled\030\001 \001(\010\022\017\n\007"
    "ptt_pin\030\002 \001(\r\022@\n\007bitrate\030\003 \001(\0162/.meshtas"
    "tic.ModuleConfig.AudioConfig.Audio_Baud\022"
    "\016\n\006i2s_ws\030\004 \001(\r\022\016\n\006i2s_sd\030\005 \001(\r\022\017\n\007i2s_d"
    "in\030\006 \001(\r\022\017\n\007i2s_sck\030\007 \001(\r\"\247\001\n\nAudio_Baud"
    "\022\022\n\016CODEC2_DEFAULT\020\000\022\017\n\013CODEC2_3200\020\001\022\017\n"
    "\013CODEC2_2400\020\002\022\017\n\013CODEC2_1600\020\003\022\017\n\013CODEC"
    "2_1400\020\004\022\017\n\013CODEC2_1300\020\005\022\017\n\013CODEC2_1200"
    "\020\006\022\016\n\nCODEC2_700\020\007\022\017\n\013CODEC2_700B\020\010\032v\n\020P"
    "axcounterConfig\022\017\n\007enabled\030\001 \001(\010\022\"\n\032paxc"
    "ounter_update_interval\030\002 \001(\r\022\026\n\016wifi_thr"
    "eshold\030\003 \001(\005\022\025\n\rble_threshold\030\004 \001(\005\032\214\005\n\014"
    "SerialConfig\022\017\n\007enabled\030\001 \001(\010\022\014\n\004echo\030\002 "
    "\001(\010\022\013\n\003rxd\030\003 \001(\r\022\013\n\003txd\030\004 \001(\r\022\?\n\004baud\030\005 "
    "\001(\01621.meshtastic.ModuleConfig.SerialConf"
    "ig.Serial_Baud\022\017\n\007timeout\030\006 \001(\r\022\?\n\004mode\030"
    "\007 \001(\01621.meshtastic.ModuleConfig.SerialCo"
    "nfig.Serial_Mode\022$\n\034override_console_ser"
    "ial_port\030\010 \001(\010\"\212\002\n\013Serial_Baud\022\020\n\014BAUD_D"
    "EFAULT\020\000\022\014\n\010BAUD_110\020\001\022\014\n\010BAUD_300\020\002\022\014\n\010"
    "BAUD_600\020\003\022\r\n\tBAUD_1200\020\004\022\r\n\tBAUD_2400\020\005"
    "\022\r\n\tBAUD_4800\020\006\022\r\n\tBAUD_9600\020\007\022\016\n\nBAUD_1"
    "9200\020\010\022\016\n\nBAUD_38400\020\t\022\016\n\nBAUD_57600\020\n\022\017"
    "\n\013BAUD_115200\020\013\022\017\n\013BAUD_230400\020\014\022\017\n\013BAUD"
    "_460800\020\r\022\017\n\013BAUD_576000\020\016\022\017\n\013BAUD_92160"
    "0\020\017\"}\n\013Serial_Mode\022\013\n\007DEFAULT\020\000\022\n\n\006SIMPL"
    "E\020\001\022\t\n\005PROTO\020\002\022\013\n\007TEXTMSG\020\003\022\010\n\004NMEA\020\004\022\013\n"
    "\007CALTOPO\020\005\022\010\n\004WS85\020\006\022\r\n\tVE_DIRECT\020\007\022\r\n\tM"
    "S_CONFIG\020\010\032\351\002\n\032ExternalNotificationConfi"
    "g\022\017\n\007enabled\030\001 \001(\010\022\021\n\toutput_ms\030\002 \001(\r\022\016\n"
    "\006output\030\003 \001(\r\022\024\n\014output_vibra\030\010 \001(\r\022\025\n\ro"
    "utput_buzzer\030\t \001(\r\022\016\n\006active\030\004 \001(\010\022\025\n\ral"
    "ert_message\030\005 \001(\010\022\033\n\023alert_message_vibra"
    "\030\n \001(\010\022\034\n\024alert_message_buzzer\030\013 \001(\010\022\022\n\n"
    "alert_bell\030\006 \001(\010\022\030\n\020alert_bell_vibra\030\014 \001"
    "(\010\022\031\n\021alert_bell_buzzer\030\r \001(\010\022\017\n\007use_pwm"
    "\030\007 \001(\010\022\023\n\013nag_timeout\030\016 \001(\r\022\031\n\021use_i2s_a"
    "s_buzzer\030\017 \001(\010\032\227\001\n\022StoreForwardConfig\022\017\n"
    "\007enabled\030\001 \001(\010\022\021\n\theartbeat\030\002 \001(\010\022\017\n\007rec"
    "ords\030\003 \001(\r\022\032\n\022history_return_max\030\004 \001(\r\022\035"
    "\n\025history_return_window\030\005 \001(\r\022\021\n\tis_serv"
    "er\030\006 \001(\010\032@\n\017RangeTestConfig\022\017\n\007enabled\030\001"
    " \001(\010\022\016\n\006sender\030\002 \001(\r\022\014\n\004save\030\003 \001(\010\032\311\003\n\017T"
    "elemetryConfig\022\036\n\026device_update_interval"
    "\030\001 \001(\r\022#\n\033environment_update_interval\030\002 "
    "\001(\r\022\'\n\037environment_measurement_enabled\030\003"
    " \001(\010\022\"\n\032environment_screen_enabled\030\004 \001(\010"
    "\022&\n\036environment_display_fahrenheit\030\005 \001(\010"
    "\022\033\n\023air_quality_enabled\030\006 \001(\010\022\034\n\024air_qua"
    "lity_interval\030\007 \001(\r\022!\n\031power_measurement"
    "_enabled\030\010 \001(\010\022\035\n\025power_update_interval\030"
    "\t \001(\r\022\034\n\024power_screen_enabled\030\n \001(\010\022\"\n\032h"
    "ealth_measurement_enabled\030\013 \001(\010\022\036\n\026healt"
    "h_update_interval\030\014 \001(\r\022\035\n\025health_screen"
    "_enabled\030\r \001(\010\032\336\004\n\023CannedMessageConfig\022\027"
    "\n\017rotary1_enabled\030\001 \001(\010\022\031\n\021inputbroker_p"
    "in_a\030\002 \001(\r\022\031\n\021inputbroker_pin_b\030\003 \001(\r\022\035\n"
    "\025inputbroker_pin_press\030\004 \001(\r\022Y\n\024inputbro"
    "ker_event_cw\030\005 \001(\0162;.meshtastic.ModuleCo"
    "nfig.CannedMessageConfig.InputEventChar\022"
    "Z\n\025inputbroker_event_ccw\030\006 \001(\0162;.meshtas"
    "tic.ModuleConfig.CannedMessageConfig.Inp"
    "utEventChar\022\\\n\027inputbroker_event_press\030\007"
    " \001(\0162;.meshtastic.ModuleConfig.CannedMes"
    "sageConfig.InputEventChar\022\027\n\017updown1_ena"
    "bled\030\010 \001(\010\022\023\n\007enabled\030\t \001(\010B\002\030\001\022\036\n\022allow"
    "_input_source\030\n \001(\tB\002\030\001\022\021\n\tsend_bell\030\013 \001"
    "(\010\"c\n\016InputEventChar\022\010\n\004NONE\020\000\022\006\n\002UP\020\021\022\010"
    "\n\004DOWN\020\022\022\010\n\004LEFT\020\023\022\t\n\005RIGHT\020\024\022\n\n\006SELECT\020"
    "\n\022\010\n\004BACK\020\033\022\n\n\006CANCEL\020\030\032e\n\025AmbientLighti"
    "ngConfig\022\021\n\tled_state\030\001 \001(\010\022\017\n\007current\030\002"
    " \001(\r\022\013\n\003red\030\003 \001(\r\022\r\n\005green\030\004 \001(\r\022\014\n\004blue"
    "\030\005 \001(\rB\021\n\017payload_variant\"d\n\021RemoteHardw"
    "arePin\022\020\n\010gpio_pin\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022/"
    "\n\004type\030\003 \001(\0162!.meshtastic.RemoteHardware"
    "PinType*I\n\025RemoteHardwarePinType\022\013\n\007UNKN"
    "OWN\020\000\022\020\n\014DIGITAL_READ\020\001\022\021\n\rDIGITAL_WRITE"
    "\020\002Bg\n\023com.geeksville.meshB\022ModuleConfigP"
    "rotosZ\"github.com/meshtastic/go/generate"
    "d\252\002\024Meshtastic.Protobufs\272\002\000b\006proto3"
};
static ::absl::once_flag descriptor_table_meshtastic_2fmodule_5fconfig_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_meshtastic_2fmodule_5fconfig_2eproto = {
    false,
    false,
    5195,
    descriptor_table_protodef_meshtastic_2fmodule_5fconfig_2eproto,
    "meshtastic/module_config.proto",
    &descriptor_table_meshtastic_2fmodule_5fconfig_2eproto_once,
    nullptr,
    0,
    16,
    schemas,
    file_default_instances,
    TableStruct_meshtastic_2fmodule_5fconfig_2eproto::offsets,
    file_level_enum_descriptors_meshtastic_2fmodule_5fconfig_2eproto,
    file_level_service_descriptors_meshtastic_2fmodule_5fconfig_2eproto,
};
namespace meshtastic {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ModuleConfig_DetectionSensorConfig_TriggerType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_meshtastic_2fmodule_5fconfig_2eproto);
  return file_level_enum_descriptors_meshtastic_2fmodule_5fconfig_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ModuleConfig_DetectionSensorConfig_TriggerType_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ModuleConfig_AudioConfig_Audio_Baud_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_meshtastic_2fmodule_5fconfig_2eproto);
  return file_level_enum_descriptors_meshtastic_2fmodule_5fconfig_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ModuleConfig_AudioConfig_Audio_Baud_internal_data_[] = {
    589824u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ModuleConfig_SerialConfig_Serial_Baud_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_meshtastic_2fmodule_5fconfig_2eproto);
  return file_level_enum_descriptors_meshtastic_2fmodule_5fconfig_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t ModuleConfig_SerialConfig_Serial_Baud_internal_data_[] = {
    1048576u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ModuleConfig_SerialConfig_Serial_Mode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_meshtastic_2fmodule_5fconfig_2eproto);
  return file_level_enum_descriptors_meshtastic_2fmodule_5fconfig_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t ModuleConfig_SerialConfig_Serial_Mode_internal_data_[] = {
    589824u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ModuleConfig_CannedMessageConfig_InputEventChar_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_meshtastic_2fmodule_5fconfig_2eproto);
  return file_level_enum_descriptors_meshtastic_2fmodule_5fconfig_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t ModuleConfig_CannedMessageConfig_InputEventChar_internal_data_[] = {
    65536u, 32u, 76481024u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL RemoteHardwarePinType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_meshtastic_2fmodule_5fconfig_2eproto);
  return file_level_enum_descriptors_meshtastic_2fmodule_5fconfig_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t RemoteHardwarePinType_internal_data_[] = {
    196608u, 0u, };
// ===================================================================

class ModuleConfig_MQTTConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ModuleConfig_MQTTConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_._has_bits_);
};

ModuleConfig_MQTTConfig::ModuleConfig_MQTTConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_MQTTConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.ModuleConfig.MQTTConfig)
}
PROTOBUF_NDEBUG_INLINE ModuleConfig_MQTTConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::meshtastic::ModuleConfig_MQTTConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        address_(arena, from.address_),
        username_(arena, from.username_),
        password_(arena, from.password_),
        root_(arena, from.root_) {}

ModuleConfig_MQTTConfig::ModuleConfig_MQTTConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ModuleConfig_MQTTConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_MQTTConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModuleConfig_MQTTConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.map_report_settings_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.map_report_settings_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enabled_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, enabled_),
           offsetof(Impl_, map_reporting_enabled_) -
               offsetof(Impl_, enabled_) +
               sizeof(Impl_::map_reporting_enabled_));

  // @@protoc_insertion_point(copy_constructor:meshtastic.ModuleConfig.MQTTConfig)
}
PROTOBUF_NDEBUG_INLINE ModuleConfig_MQTTConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        address_(arena),
        username_(arena),
        password_(arena),
        root_(arena) {}

inline void ModuleConfig_MQTTConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, map_report_settings_),
           0,
           offsetof(Impl_, map_reporting_enabled_) -
               offsetof(Impl_, map_report_settings_) +
               sizeof(Impl_::map_reporting_enabled_));
}
ModuleConfig_MQTTConfig::~ModuleConfig_MQTTConfig() {
  // @@protoc_insertion_point(destructor:meshtastic.ModuleConfig.MQTTConfig)
  SharedDtor(*this);
}
inline void ModuleConfig_MQTTConfig::SharedDtor(MessageLite& self) {
  ModuleConfig_MQTTConfig& this_ = static_cast<ModuleConfig_MQTTConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.address_.Destroy();
  this_._impl_.username_.Destroy();
  this_._impl_.password_.Destroy();
  this_._impl_.root_.Destroy();
  delete this_._impl_.map_report_settings_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ModuleConfig_MQTTConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModuleConfig_MQTTConfig(arena);
}
constexpr auto ModuleConfig_MQTTConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ModuleConfig_MQTTConfig),
                                            alignof(ModuleConfig_MQTTConfig));
}
constexpr auto ModuleConfig_MQTTConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModuleConfig_MQTTConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModuleConfig_MQTTConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModuleConfig_MQTTConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModuleConfig_MQTTConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModuleConfig_MQTTConfig>(), &ModuleConfig_MQTTConfig::ByteSizeLong,
              &ModuleConfig_MQTTConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_._cached_size_),
          false,
      },
      &ModuleConfig_MQTTConfig::kDescriptorMethods,
      &descriptor_table_meshtastic_2fmodule_5fconfig_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ModuleConfig_MQTTConfig_class_data_ =
        ModuleConfig_MQTTConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ModuleConfig_MQTTConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModuleConfig_MQTTConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModuleConfig_MQTTConfig_class_data_.tc_table);
  return ModuleConfig_MQTTConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 1, 78, 2>
ModuleConfig_MQTTConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ModuleConfig_MQTTConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_MQTTConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool enabled = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_MQTTConfig, _impl_.enabled_), 5>(),
     {8, 5, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.enabled_)}},
    // string address = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.address_)}},
    // string username = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.username_)}},
    // string password = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.password_)}},
    // bool encryption_enabled = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_MQTTConfig, _impl_.encryption_enabled_), 6>(),
     {40, 6, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.encryption_enabled_)}},
    // bool json_enabled = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_MQTTConfig, _impl_.json_enabled_), 7>(),
     {48, 7, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.json_enabled_)}},
    // bool tls_enabled = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_MQTTConfig, _impl_.tls_enabled_), 8>(),
     {56, 8, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.tls_enabled_)}},
    // string root = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.root_)}},
    // bool proxy_to_client_enabled = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_MQTTConfig, _impl_.proxy_to_client_enabled_), 9>(),
     {72, 9, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.proxy_to_client_enabled_)}},
    // bool map_reporting_enabled = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_MQTTConfig, _impl_.map_reporting_enabled_), 10>(),
     {80, 10, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.map_reporting_enabled_)}},
    // .meshtastic.ModuleConfig.MapReportSettings map_report_settings = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 4, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.map_report_settings_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool enabled = 1;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.enabled_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string address = 2;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.address_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string username = 3;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.username_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 4;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.password_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool encryption_enabled = 5;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.encryption_enabled_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool json_enabled = 6;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.json_enabled_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool tls_enabled = 7;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.tls_enabled_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string root = 8;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.root_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool proxy_to_client_enabled = 9;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.proxy_to_client_enabled_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool map_reporting_enabled = 10;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.map_reporting_enabled_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .meshtastic.ModuleConfig.MapReportSettings map_report_settings = 11;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.map_report_settings_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_MapReportSettings>()},
  }},
  {{
    "\42\0\7\10\10\0\0\0\4\0\0\0\0\0\0\0"
    "meshtastic.ModuleConfig.MQTTConfig"
    "address"
    "username"
    "password"
    "root"
  }},
};
PROTOBUF_NOINLINE void ModuleConfig_MQTTConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.ModuleConfig.MQTTConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.address_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.username_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.password_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.root_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.map_report_settings_ != nullptr);
      _impl_.map_report_settings_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000e0u) != 0) {
    ::memset(&_impl_.enabled_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.json_enabled_) -
        reinterpret_cast<char*>(&_impl_.enabled_)) + sizeof(_impl_.json_enabled_));
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    ::memset(&_impl_.tls_enabled_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.map_reporting_enabled_) -
        reinterpret_cast<char*>(&_impl_.tls_enabled_)) + sizeof(_impl_.map_reporting_enabled_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModuleConfig_MQTTConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModuleConfig_MQTTConfig& this_ = static_cast<const ModuleConfig_MQTTConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModuleConfig_MQTTConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModuleConfig_MQTTConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.ModuleConfig.MQTTConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool enabled = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_enabled(), target);
    }
  }

  // string address = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_address().empty()) {
      const ::std::string& _s = this_._internal_address();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.ModuleConfig.MQTTConfig.address");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string username = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_username().empty()) {
      const ::std::string& _s = this_._internal_username();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.ModuleConfig.MQTTConfig.username");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string password = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_password().empty()) {
      const ::std::string& _s = this_._internal_password();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.ModuleConfig.MQTTConfig.password");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // bool encryption_enabled = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_encryption_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_encryption_enabled(), target);
    }
  }

  // bool json_enabled = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_json_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_json_enabled(), target);
    }
  }

  // bool tls_enabled = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (this_._internal_tls_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          7, this_._internal_tls_enabled(), target);
    }
  }

  // string root = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._internal_root().empty()) {
      const ::std::string& _s = this_._internal_root();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.ModuleConfig.MQTTConfig.root");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  // bool proxy_to_client_enabled = 9;
  if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
    if (this_._internal_proxy_to_client_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          9, this_._internal_proxy_to_client_enabled(), target);
    }
  }

  // bool map_reporting_enabled = 10;
  if ((this_._impl_._has_bits_[0] & 0x00000400u) != 0) {
    if (this_._internal_map_reporting_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          10, this_._internal_map_reporting_enabled(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .meshtastic.ModuleConfig.MapReportSettings map_report_settings = 11;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, *this_._impl_.map_report_settings_, this_._impl_.map_report_settings_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.ModuleConfig.MQTTConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModuleConfig_MQTTConfig::ByteSizeLong(const MessageLite& base) {
  const ModuleConfig_MQTTConfig& this_ = static_cast<const ModuleConfig_MQTTConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModuleConfig_MQTTConfig::ByteSizeLong() const {
  const ModuleConfig_MQTTConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.ModuleConfig.MQTTConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string address = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_address().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_address());
      }
    }
    // string username = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_username().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_username());
      }
    }
    // string password = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_password().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_password());
      }
    }
    // string root = 8;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_root().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_root());
      }
    }
    // .meshtastic.ModuleConfig.MapReportSettings map_report_settings = 11;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.map_report_settings_);
    }
    // bool enabled = 1;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_enabled() != 0) {
        total_size += 2;
      }
    }
    // bool encryption_enabled = 5;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_encryption_enabled() != 0) {
        total_size += 2;
      }
    }
    // bool json_enabled = 6;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_json_enabled() != 0) {
        total_size += 2;
      }
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    // bool tls_enabled = 7;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_tls_enabled() != 0) {
        total_size += 2;
      }
    }
    // bool proxy_to_client_enabled = 9;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_proxy_to_client_enabled() != 0) {
        total_size += 2;
      }
    }
    // bool map_reporting_enabled = 10;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_map_reporting_enabled() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ModuleConfig_MQTTConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleConfig_MQTTConfig*>(&to_msg);
  auto& from = static_cast<const ModuleConfig_MQTTConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.ModuleConfig.MQTTConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_address().empty()) {
        _this->_internal_set_address(from._internal_address());
      } else {
        if (_this->_impl_.address_.IsDefault()) {
          _this->_internal_set_address("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_username().empty()) {
        _this->_internal_set_username(from._internal_username());
      } else {
        if (_this->_impl_.username_.IsDefault()) {
          _this->_internal_set_username("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_password().empty()) {
        _this->_internal_set_password(from._internal_password());
      } else {
        if (_this->_impl_.password_.IsDefault()) {
          _this->_internal_set_password("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_root().empty()) {
        _this->_internal_set_root(from._internal_root());
      } else {
        if (_this->_impl_.root_.IsDefault()) {
          _this->_internal_set_root("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.map_report_settings_ != nullptr);
      if (_this->_impl_.map_report_settings_ == nullptr) {
        _this->_impl_.map_report_settings_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.map_report_settings_);
      } else {
        _this->_impl_.map_report_settings_->MergeFrom(*from._impl_.map_report_settings_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_enabled() != 0) {
        _this->_impl_.enabled_ = from._impl_.enabled_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_encryption_enabled() != 0) {
        _this->_impl_.encryption_enabled_ = from._impl_.encryption_enabled_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_json_enabled() != 0) {
        _this->_impl_.json_enabled_ = from._impl_.json_enabled_;
      }
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_tls_enabled() != 0) {
        _this->_impl_.tls_enabled_ = from._impl_.tls_enabled_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_proxy_to_client_enabled() != 0) {
        _this->_impl_.proxy_to_client_enabled_ = from._impl_.proxy_to_client_enabled_;
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_map_reporting_enabled() != 0) {
        _this->_impl_.map_reporting_enabled_ = from._impl_.map_reporting_enabled_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleConfig_MQTTConfig::CopyFrom(const ModuleConfig_MQTTConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.ModuleConfig.MQTTConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleConfig_MQTTConfig::InternalSwap(ModuleConfig_MQTTConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.root_, &other->_impl_.root_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.map_reporting_enabled_)
      + sizeof(ModuleConfig_MQTTConfig::_impl_.map_reporting_enabled_)
      - PROTOBUF_FIELD_OFFSET(ModuleConfig_MQTTConfig, _impl_.map_report_settings_)>(
          reinterpret_cast<char*>(&_impl_.map_report_settings_),
          reinterpret_cast<char*>(&other->_impl_.map_report_settings_));
}

::google::protobuf::Metadata ModuleConfig_MQTTConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModuleConfig_MapReportSettings::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ModuleConfig_MapReportSettings>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModuleConfig_MapReportSettings, _impl_._has_bits_);
};

ModuleConfig_MapReportSettings::ModuleConfig_MapReportSettings(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_MapReportSettings_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.ModuleConfig.MapReportSettings)
}
ModuleConfig_MapReportSettings::ModuleConfig_MapReportSettings(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_MapReportSettings& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_MapReportSettings_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ModuleConfig_MapReportSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ModuleConfig_MapReportSettings::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, publish_interval_secs_),
           0,
           offsetof(Impl_, should_report_location_) -
               offsetof(Impl_, publish_interval_secs_) +
               sizeof(Impl_::should_report_location_));
}
ModuleConfig_MapReportSettings::~ModuleConfig_MapReportSettings() {
  // @@protoc_insertion_point(destructor:meshtastic.ModuleConfig.MapReportSettings)
  SharedDtor(*this);
}
inline void ModuleConfig_MapReportSettings::SharedDtor(MessageLite& self) {
  ModuleConfig_MapReportSettings& this_ = static_cast<ModuleConfig_MapReportSettings&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ModuleConfig_MapReportSettings::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModuleConfig_MapReportSettings(arena);
}
constexpr auto ModuleConfig_MapReportSettings::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ModuleConfig_MapReportSettings),
                                            alignof(ModuleConfig_MapReportSettings));
}
constexpr auto ModuleConfig_MapReportSettings::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModuleConfig_MapReportSettings_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModuleConfig_MapReportSettings::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModuleConfig_MapReportSettings>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModuleConfig_MapReportSettings::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModuleConfig_MapReportSettings>(), &ModuleConfig_MapReportSettings::ByteSizeLong,
              &ModuleConfig_MapReportSettings::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModuleConfig_MapReportSettings, _impl_._cached_size_),
          false,
      },
      &ModuleConfig_MapReportSettings::kDescriptorMethods,
      &descriptor_table_meshtastic_2fmodule_5fconfig_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ModuleConfig_MapReportSettings_class_data_ =
        ModuleConfig_MapReportSettings::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ModuleConfig_MapReportSettings::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModuleConfig_MapReportSettings_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModuleConfig_MapReportSettings_class_data_.tc_table);
  return ModuleConfig_MapReportSettings_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
ModuleConfig_MapReportSettings::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModuleConfig_MapReportSettings, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ModuleConfig_MapReportSettings_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_MapReportSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 publish_interval_secs = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_MapReportSettings, _impl_.publish_interval_secs_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_MapReportSettings, _impl_.publish_interval_secs_)}},
    // uint32 position_precision = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_MapReportSettings, _impl_.position_precision_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_MapReportSettings, _impl_.position_precision_)}},
    // bool should_report_location = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_MapReportSettings, _impl_.should_report_location_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_MapReportSettings, _impl_.should_report_location_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 publish_interval_secs = 1;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_MapReportSettings, _impl_.publish_interval_secs_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 position_precision = 2;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_MapReportSettings, _impl_.position_precision_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bool should_report_location = 3;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_MapReportSettings, _impl_.should_report_location_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ModuleConfig_MapReportSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.ModuleConfig.MapReportSettings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.publish_interval_secs_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.should_report_location_) -
        reinterpret_cast<char*>(&_impl_.publish_interval_secs_)) + sizeof(_impl_.should_report_location_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModuleConfig_MapReportSettings::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModuleConfig_MapReportSettings& this_ = static_cast<const ModuleConfig_MapReportSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModuleConfig_MapReportSettings::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModuleConfig_MapReportSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.ModuleConfig.MapReportSettings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 publish_interval_secs = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_publish_interval_secs() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_publish_interval_secs(), target);
    }
  }

  // uint32 position_precision = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_position_precision() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_position_precision(), target);
    }
  }

  // bool should_report_location = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_should_report_location() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_should_report_location(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.ModuleConfig.MapReportSettings)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModuleConfig_MapReportSettings::ByteSizeLong(const MessageLite& base) {
  const ModuleConfig_MapReportSettings& this_ = static_cast<const ModuleConfig_MapReportSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModuleConfig_MapReportSettings::ByteSizeLong() const {
  const ModuleConfig_MapReportSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.ModuleConfig.MapReportSettings)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // uint32 publish_interval_secs = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_publish_interval_secs() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_publish_interval_secs());
      }
    }
    // uint32 position_precision = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_position_precision() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_position_precision());
      }
    }
    // bool should_report_location = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_should_report_location() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ModuleConfig_MapReportSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleConfig_MapReportSettings*>(&to_msg);
  auto& from = static_cast<const ModuleConfig_MapReportSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.ModuleConfig.MapReportSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_publish_interval_secs() != 0) {
        _this->_impl_.publish_interval_secs_ = from._impl_.publish_interval_secs_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_position_precision() != 0) {
        _this->_impl_.position_precision_ = from._impl_.position_precision_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_should_report_location() != 0) {
        _this->_impl_.should_report_location_ = from._impl_.should_report_location_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleConfig_MapReportSettings::CopyFrom(const ModuleConfig_MapReportSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.ModuleConfig.MapReportSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleConfig_MapReportSettings::InternalSwap(ModuleConfig_MapReportSettings* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleConfig_MapReportSettings, _impl_.should_report_location_)
      + sizeof(ModuleConfig_MapReportSettings::_impl_.should_report_location_)
      - PROTOBUF_FIELD_OFFSET(ModuleConfig_MapReportSettings, _impl_.publish_interval_secs_)>(
          reinterpret_cast<char*>(&_impl_.publish_interval_secs_),
          reinterpret_cast<char*>(&other->_impl_.publish_interval_secs_));
}

::google::protobuf::Metadata ModuleConfig_MapReportSettings::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModuleConfig_RemoteHardwareConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ModuleConfig_RemoteHardwareConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModuleConfig_RemoteHardwareConfig, _impl_._has_bits_);
};

ModuleConfig_RemoteHardwareConfig::ModuleConfig_RemoteHardwareConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_RemoteHardwareConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.ModuleConfig.RemoteHardwareConfig)
}
PROTOBUF_NDEBUG_INLINE ModuleConfig_RemoteHardwareConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::meshtastic::ModuleConfig_RemoteHardwareConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        available_pins_{visibility, arena, from.available_pins_} {}

ModuleConfig_RemoteHardwareConfig::ModuleConfig_RemoteHardwareConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ModuleConfig_RemoteHardwareConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_RemoteHardwareConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModuleConfig_RemoteHardwareConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enabled_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, enabled_),
           offsetof(Impl_, allow_undefined_pin_access_) -
               offsetof(Impl_, enabled_) +
               sizeof(Impl_::allow_undefined_pin_access_));

  // @@protoc_insertion_point(copy_constructor:meshtastic.ModuleConfig.RemoteHardwareConfig)
}
PROTOBUF_NDEBUG_INLINE ModuleConfig_RemoteHardwareConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        available_pins_{visibility, arena} {}

inline void ModuleConfig_RemoteHardwareConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enabled_),
           0,
           offsetof(Impl_, allow_undefined_pin_access_) -
               offsetof(Impl_, enabled_) +
               sizeof(Impl_::allow_undefined_pin_access_));
}
ModuleConfig_RemoteHardwareConfig::~ModuleConfig_RemoteHardwareConfig() {
  // @@protoc_insertion_point(destructor:meshtastic.ModuleConfig.RemoteHardwareConfig)
  SharedDtor(*this);
}
inline void ModuleConfig_RemoteHardwareConfig::SharedDtor(MessageLite& self) {
  ModuleConfig_RemoteHardwareConfig& this_ = static_cast<ModuleConfig_RemoteHardwareConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ModuleConfig_RemoteHardwareConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModuleConfig_RemoteHardwareConfig(arena);
}
constexpr auto ModuleConfig_RemoteHardwareConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ModuleConfig_RemoteHardwareConfig, _impl_.available_pins_) +
          decltype(ModuleConfig_RemoteHardwareConfig::_impl_.available_pins_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ModuleConfig_RemoteHardwareConfig), alignof(ModuleConfig_RemoteHardwareConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ModuleConfig_RemoteHardwareConfig::PlacementNew_,
                                 sizeof(ModuleConfig_RemoteHardwareConfig),
                                 alignof(ModuleConfig_RemoteHardwareConfig));
  }
}
constexpr auto ModuleConfig_RemoteHardwareConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModuleConfig_RemoteHardwareConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModuleConfig_RemoteHardwareConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModuleConfig_RemoteHardwareConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModuleConfig_RemoteHardwareConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModuleConfig_RemoteHardwareConfig>(), &ModuleConfig_RemoteHardwareConfig::ByteSizeLong,
              &ModuleConfig_RemoteHardwareConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModuleConfig_RemoteHardwareConfig, _impl_._cached_size_),
          false,
      },
      &ModuleConfig_RemoteHardwareConfig::kDescriptorMethods,
      &descriptor_table_meshtastic_2fmodule_5fconfig_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ModuleConfig_RemoteHardwareConfig_class_data_ =
        ModuleConfig_RemoteHardwareConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ModuleConfig_RemoteHardwareConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModuleConfig_RemoteHardwareConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModuleConfig_RemoteHardwareConfig_class_data_.tc_table);
  return ModuleConfig_RemoteHardwareConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
ModuleConfig_RemoteHardwareConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModuleConfig_RemoteHardwareConfig, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ModuleConfig_RemoteHardwareConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_RemoteHardwareConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool enabled = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_RemoteHardwareConfig, _impl_.enabled_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_RemoteHardwareConfig, _impl_.enabled_)}},
    // bool allow_undefined_pin_access = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_RemoteHardwareConfig, _impl_.allow_undefined_pin_access_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_RemoteHardwareConfig, _impl_.allow_undefined_pin_access_)}},
    // repeated .meshtastic.RemoteHardwarePin available_pins = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_RemoteHardwareConfig, _impl_.available_pins_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool enabled = 1;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_RemoteHardwareConfig, _impl_.enabled_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool allow_undefined_pin_access = 2;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_RemoteHardwareConfig, _impl_.allow_undefined_pin_access_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .meshtastic.RemoteHardwarePin available_pins = 3;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_RemoteHardwareConfig, _impl_.available_pins_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::RemoteHardwarePin>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ModuleConfig_RemoteHardwareConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.ModuleConfig.RemoteHardwareConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.available_pins_.Clear();
  ::memset(&_impl_.enabled_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.allow_undefined_pin_access_) -
      reinterpret_cast<char*>(&_impl_.enabled_)) + sizeof(_impl_.allow_undefined_pin_access_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModuleConfig_RemoteHardwareConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModuleConfig_RemoteHardwareConfig& this_ = static_cast<const ModuleConfig_RemoteHardwareConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModuleConfig_RemoteHardwareConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModuleConfig_RemoteHardwareConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.ModuleConfig.RemoteHardwareConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool enabled = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_enabled(), target);
    }
  }

  // bool allow_undefined_pin_access = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_allow_undefined_pin_access() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_allow_undefined_pin_access(), target);
    }
  }

  // repeated .meshtastic.RemoteHardwarePin available_pins = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_available_pins_size());
       i < n; i++) {
    const auto& repfield = this_._internal_available_pins().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.ModuleConfig.RemoteHardwareConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModuleConfig_RemoteHardwareConfig::ByteSizeLong(const MessageLite& base) {
  const ModuleConfig_RemoteHardwareConfig& this_ = static_cast<const ModuleConfig_RemoteHardwareConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModuleConfig_RemoteHardwareConfig::ByteSizeLong() const {
  const ModuleConfig_RemoteHardwareConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.ModuleConfig.RemoteHardwareConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .meshtastic.RemoteHardwarePin available_pins = 3;
    {
      total_size += 1UL * this_._internal_available_pins_size();
      for (const auto& msg : this_._internal_available_pins()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // bool enabled = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_enabled() != 0) {
        total_size += 2;
      }
    }
    // bool allow_undefined_pin_access = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_allow_undefined_pin_access() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ModuleConfig_RemoteHardwareConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleConfig_RemoteHardwareConfig*>(&to_msg);
  auto& from = static_cast<const ModuleConfig_RemoteHardwareConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.ModuleConfig.RemoteHardwareConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_available_pins()->MergeFrom(
      from._internal_available_pins());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_enabled() != 0) {
        _this->_impl_.enabled_ = from._impl_.enabled_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_allow_undefined_pin_access() != 0) {
        _this->_impl_.allow_undefined_pin_access_ = from._impl_.allow_undefined_pin_access_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleConfig_RemoteHardwareConfig::CopyFrom(const ModuleConfig_RemoteHardwareConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.ModuleConfig.RemoteHardwareConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleConfig_RemoteHardwareConfig::InternalSwap(ModuleConfig_RemoteHardwareConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.available_pins_.InternalSwap(&other->_impl_.available_pins_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleConfig_RemoteHardwareConfig, _impl_.allow_undefined_pin_access_)
      + sizeof(ModuleConfig_RemoteHardwareConfig::_impl_.allow_undefined_pin_access_)
      - PROTOBUF_FIELD_OFFSET(ModuleConfig_RemoteHardwareConfig, _impl_.enabled_)>(
          reinterpret_cast<char*>(&_impl_.enabled_),
          reinterpret_cast<char*>(&other->_impl_.enabled_));
}

::google::protobuf::Metadata ModuleConfig_RemoteHardwareConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModuleConfig_NeighborInfoConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ModuleConfig_NeighborInfoConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModuleConfig_NeighborInfoConfig, _impl_._has_bits_);
};

ModuleConfig_NeighborInfoConfig::ModuleConfig_NeighborInfoConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_NeighborInfoConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.ModuleConfig.NeighborInfoConfig)
}
ModuleConfig_NeighborInfoConfig::ModuleConfig_NeighborInfoConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_NeighborInfoConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_NeighborInfoConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ModuleConfig_NeighborInfoConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ModuleConfig_NeighborInfoConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, update_interval_),
           0,
           offsetof(Impl_, transmit_over_lora_) -
               offsetof(Impl_, update_interval_) +
               sizeof(Impl_::transmit_over_lora_));
}
ModuleConfig_NeighborInfoConfig::~ModuleConfig_NeighborInfoConfig() {
  // @@protoc_insertion_point(destructor:meshtastic.ModuleConfig.NeighborInfoConfig)
  SharedDtor(*this);
}
inline void ModuleConfig_NeighborInfoConfig::SharedDtor(MessageLite& self) {
  ModuleConfig_NeighborInfoConfig& this_ = static_cast<ModuleConfig_NeighborInfoConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ModuleConfig_NeighborInfoConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModuleConfig_NeighborInfoConfig(arena);
}
constexpr auto ModuleConfig_NeighborInfoConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ModuleConfig_NeighborInfoConfig),
                                            alignof(ModuleConfig_NeighborInfoConfig));
}
constexpr auto ModuleConfig_NeighborInfoConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModuleConfig_NeighborInfoConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModuleConfig_NeighborInfoConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModuleConfig_NeighborInfoConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModuleConfig_NeighborInfoConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModuleConfig_NeighborInfoConfig>(), &ModuleConfig_NeighborInfoConfig::ByteSizeLong,
              &ModuleConfig_NeighborInfoConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModuleConfig_NeighborInfoConfig, _impl_._cached_size_),
          false,
      },
      &ModuleConfig_NeighborInfoConfig::kDescriptorMethods,
      &descriptor_table_meshtastic_2fmodule_5fconfig_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ModuleConfig_NeighborInfoConfig_class_data_ =
        ModuleConfig_NeighborInfoConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ModuleConfig_NeighborInfoConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModuleConfig_NeighborInfoConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModuleConfig_NeighborInfoConfig_class_data_.tc_table);
  return ModuleConfig_NeighborInfoConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
ModuleConfig_NeighborInfoConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModuleConfig_NeighborInfoConfig, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ModuleConfig_NeighborInfoConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_NeighborInfoConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool enabled = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_NeighborInfoConfig, _impl_.enabled_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_NeighborInfoConfig, _impl_.enabled_)}},
    // uint32 update_interval = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_NeighborInfoConfig, _impl_.update_interval_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_NeighborInfoConfig, _impl_.update_interval_)}},
    // bool transmit_over_lora = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_NeighborInfoConfig, _impl_.transmit_over_lora_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_NeighborInfoConfig, _impl_.transmit_over_lora_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool enabled = 1;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_NeighborInfoConfig, _impl_.enabled_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // uint32 update_interval = 2;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_NeighborInfoConfig, _impl_.update_interval_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bool transmit_over_lora = 3;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_NeighborInfoConfig, _impl_.transmit_over_lora_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ModuleConfig_NeighborInfoConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.ModuleConfig.NeighborInfoConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.update_interval_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.transmit_over_lora_) -
        reinterpret_cast<char*>(&_impl_.update_interval_)) + sizeof(_impl_.transmit_over_lora_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModuleConfig_NeighborInfoConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModuleConfig_NeighborInfoConfig& this_ = static_cast<const ModuleConfig_NeighborInfoConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModuleConfig_NeighborInfoConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModuleConfig_NeighborInfoConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.ModuleConfig.NeighborInfoConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool enabled = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_enabled(), target);
    }
  }

  // uint32 update_interval = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_update_interval() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_update_interval(), target);
    }
  }

  // bool transmit_over_lora = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_transmit_over_lora() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_transmit_over_lora(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.ModuleConfig.NeighborInfoConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModuleConfig_NeighborInfoConfig::ByteSizeLong(const MessageLite& base) {
  const ModuleConfig_NeighborInfoConfig& this_ = static_cast<const ModuleConfig_NeighborInfoConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModuleConfig_NeighborInfoConfig::ByteSizeLong() const {
  const ModuleConfig_NeighborInfoConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.ModuleConfig.NeighborInfoConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // uint32 update_interval = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_update_interval() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_update_interval());
      }
    }
    // bool enabled = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_enabled() != 0) {
        total_size += 2;
      }
    }
    // bool transmit_over_lora = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_transmit_over_lora() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ModuleConfig_NeighborInfoConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleConfig_NeighborInfoConfig*>(&to_msg);
  auto& from = static_cast<const ModuleConfig_NeighborInfoConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.ModuleConfig.NeighborInfoConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_update_interval() != 0) {
        _this->_impl_.update_interval_ = from._impl_.update_interval_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_enabled() != 0) {
        _this->_impl_.enabled_ = from._impl_.enabled_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_transmit_over_lora() != 0) {
        _this->_impl_.transmit_over_lora_ = from._impl_.transmit_over_lora_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleConfig_NeighborInfoConfig::CopyFrom(const ModuleConfig_NeighborInfoConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.ModuleConfig.NeighborInfoConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleConfig_NeighborInfoConfig::InternalSwap(ModuleConfig_NeighborInfoConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleConfig_NeighborInfoConfig, _impl_.transmit_over_lora_)
      + sizeof(ModuleConfig_NeighborInfoConfig::_impl_.transmit_over_lora_)
      - PROTOBUF_FIELD_OFFSET(ModuleConfig_NeighborInfoConfig, _impl_.update_interval_)>(
          reinterpret_cast<char*>(&_impl_.update_interval_),
          reinterpret_cast<char*>(&other->_impl_.update_interval_));
}

::google::protobuf::Metadata ModuleConfig_NeighborInfoConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModuleConfig_DetectionSensorConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ModuleConfig_DetectionSensorConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_._has_bits_);
};

ModuleConfig_DetectionSensorConfig::ModuleConfig_DetectionSensorConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_DetectionSensorConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.ModuleConfig.DetectionSensorConfig)
}
PROTOBUF_NDEBUG_INLINE ModuleConfig_DetectionSensorConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::meshtastic::ModuleConfig_DetectionSensorConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

ModuleConfig_DetectionSensorConfig::ModuleConfig_DetectionSensorConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ModuleConfig_DetectionSensorConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_DetectionSensorConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModuleConfig_DetectionSensorConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, minimum_broadcast_secs_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, minimum_broadcast_secs_),
           offsetof(Impl_, detection_trigger_type_) -
               offsetof(Impl_, minimum_broadcast_secs_) +
               sizeof(Impl_::detection_trigger_type_));

  // @@protoc_insertion_point(copy_constructor:meshtastic.ModuleConfig.DetectionSensorConfig)
}
PROTOBUF_NDEBUG_INLINE ModuleConfig_DetectionSensorConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena) {}

inline void ModuleConfig_DetectionSensorConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, minimum_broadcast_secs_),
           0,
           offsetof(Impl_, detection_trigger_type_) -
               offsetof(Impl_, minimum_broadcast_secs_) +
               sizeof(Impl_::detection_trigger_type_));
}
ModuleConfig_DetectionSensorConfig::~ModuleConfig_DetectionSensorConfig() {
  // @@protoc_insertion_point(destructor:meshtastic.ModuleConfig.DetectionSensorConfig)
  SharedDtor(*this);
}
inline void ModuleConfig_DetectionSensorConfig::SharedDtor(MessageLite& self) {
  ModuleConfig_DetectionSensorConfig& this_ = static_cast<ModuleConfig_DetectionSensorConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ModuleConfig_DetectionSensorConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModuleConfig_DetectionSensorConfig(arena);
}
constexpr auto ModuleConfig_DetectionSensorConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ModuleConfig_DetectionSensorConfig),
                                            alignof(ModuleConfig_DetectionSensorConfig));
}
constexpr auto ModuleConfig_DetectionSensorConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModuleConfig_DetectionSensorConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModuleConfig_DetectionSensorConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModuleConfig_DetectionSensorConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModuleConfig_DetectionSensorConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModuleConfig_DetectionSensorConfig>(), &ModuleConfig_DetectionSensorConfig::ByteSizeLong,
              &ModuleConfig_DetectionSensorConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_._cached_size_),
          false,
      },
      &ModuleConfig_DetectionSensorConfig::kDescriptorMethods,
      &descriptor_table_meshtastic_2fmodule_5fconfig_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ModuleConfig_DetectionSensorConfig_class_data_ =
        ModuleConfig_DetectionSensorConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ModuleConfig_DetectionSensorConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModuleConfig_DetectionSensorConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModuleConfig_DetectionSensorConfig_class_data_.tc_table);
  return ModuleConfig_DetectionSensorConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 66, 2>
ModuleConfig_DetectionSensorConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ModuleConfig_DetectionSensorConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_DetectionSensorConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool use_pullup = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_DetectionSensorConfig, _impl_.use_pullup_), 5>(),
     {64, 5, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_.use_pullup_)}},
    // bool enabled = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_DetectionSensorConfig, _impl_.enabled_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_.enabled_)}},
    // uint32 minimum_broadcast_secs = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_DetectionSensorConfig, _impl_.minimum_broadcast_secs_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_.minimum_broadcast_secs_)}},
    // uint32 state_broadcast_secs = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_DetectionSensorConfig, _impl_.state_broadcast_secs_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_.state_broadcast_secs_)}},
    // bool send_bell = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_DetectionSensorConfig, _impl_.send_bell_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_.send_bell_)}},
    // string name = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_.name_)}},
    // uint32 monitor_pin = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_DetectionSensorConfig, _impl_.monitor_pin_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_.monitor_pin_)}},
    // .meshtastic.ModuleConfig.DetectionSensorConfig.TriggerType detection_trigger_type = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_DetectionSensorConfig, _impl_.detection_trigger_type_), 7>(),
     {56, 7, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_.detection_trigger_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool enabled = 1;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_.enabled_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // uint32 minimum_broadcast_secs = 2;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_.minimum_broadcast_secs_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 state_broadcast_secs = 3;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_.state_broadcast_secs_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bool send_bell = 4;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_.send_bell_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string name = 5;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 monitor_pin = 6;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_.monitor_pin_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .meshtastic.ModuleConfig.DetectionSensorConfig.TriggerType detection_trigger_type = 7;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_.detection_trigger_type_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // bool use_pullup = 8;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_.use_pullup_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\55\0\0\0\0\4\0\0\0\0\0\0\0\0\0\0"
    "meshtastic.ModuleConfig.DetectionSensorConfig"
    "name"
  }},
};
PROTOBUF_NOINLINE void ModuleConfig_DetectionSensorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.ModuleConfig.DetectionSensorConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x000000feu) != 0) {
    ::memset(&_impl_.minimum_broadcast_secs_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.detection_trigger_type_) -
        reinterpret_cast<char*>(&_impl_.minimum_broadcast_secs_)) + sizeof(_impl_.detection_trigger_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModuleConfig_DetectionSensorConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModuleConfig_DetectionSensorConfig& this_ = static_cast<const ModuleConfig_DetectionSensorConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModuleConfig_DetectionSensorConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModuleConfig_DetectionSensorConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.ModuleConfig.DetectionSensorConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool enabled = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_enabled(), target);
    }
  }

  // uint32 minimum_broadcast_secs = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_minimum_broadcast_secs() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_minimum_broadcast_secs(), target);
    }
  }

  // uint32 state_broadcast_secs = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_state_broadcast_secs() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_state_broadcast_secs(), target);
    }
  }

  // bool send_bell = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_send_bell() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_send_bell(), target);
    }
  }

  // string name = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.ModuleConfig.DetectionSensorConfig.name");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // uint32 monitor_pin = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_monitor_pin() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          6, this_._internal_monitor_pin(), target);
    }
  }

  // .meshtastic.ModuleConfig.DetectionSensorConfig.TriggerType detection_trigger_type = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_detection_trigger_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          7, this_._internal_detection_trigger_type(), target);
    }
  }

  // bool use_pullup = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_use_pullup() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          8, this_._internal_use_pullup(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.ModuleConfig.DetectionSensorConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModuleConfig_DetectionSensorConfig::ByteSizeLong(const MessageLite& base) {
  const ModuleConfig_DetectionSensorConfig& this_ = static_cast<const ModuleConfig_DetectionSensorConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModuleConfig_DetectionSensorConfig::ByteSizeLong() const {
  const ModuleConfig_DetectionSensorConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.ModuleConfig.DetectionSensorConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string name = 5;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // uint32 minimum_broadcast_secs = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_minimum_broadcast_secs() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_minimum_broadcast_secs());
      }
    }
    // uint32 state_broadcast_secs = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_state_broadcast_secs() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_state_broadcast_secs());
      }
    }
    // bool enabled = 1;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_enabled() != 0) {
        total_size += 2;
      }
    }
    // bool send_bell = 4;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_send_bell() != 0) {
        total_size += 2;
      }
    }
    // bool use_pullup = 8;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_use_pullup() != 0) {
        total_size += 2;
      }
    }
    // uint32 monitor_pin = 6;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_monitor_pin() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_monitor_pin());
      }
    }
    // .meshtastic.ModuleConfig.DetectionSensorConfig.TriggerType detection_trigger_type = 7;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_detection_trigger_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_detection_trigger_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ModuleConfig_DetectionSensorConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleConfig_DetectionSensorConfig*>(&to_msg);
  auto& from = static_cast<const ModuleConfig_DetectionSensorConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.ModuleConfig.DetectionSensorConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_minimum_broadcast_secs() != 0) {
        _this->_impl_.minimum_broadcast_secs_ = from._impl_.minimum_broadcast_secs_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_state_broadcast_secs() != 0) {
        _this->_impl_.state_broadcast_secs_ = from._impl_.state_broadcast_secs_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_enabled() != 0) {
        _this->_impl_.enabled_ = from._impl_.enabled_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_send_bell() != 0) {
        _this->_impl_.send_bell_ = from._impl_.send_bell_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_use_pullup() != 0) {
        _this->_impl_.use_pullup_ = from._impl_.use_pullup_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_monitor_pin() != 0) {
        _this->_impl_.monitor_pin_ = from._impl_.monitor_pin_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_detection_trigger_type() != 0) {
        _this->_impl_.detection_trigger_type_ = from._impl_.detection_trigger_type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleConfig_DetectionSensorConfig::CopyFrom(const ModuleConfig_DetectionSensorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.ModuleConfig.DetectionSensorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleConfig_DetectionSensorConfig::InternalSwap(ModuleConfig_DetectionSensorConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_.detection_trigger_type_)
      + sizeof(ModuleConfig_DetectionSensorConfig::_impl_.detection_trigger_type_)
      - PROTOBUF_FIELD_OFFSET(ModuleConfig_DetectionSensorConfig, _impl_.minimum_broadcast_secs_)>(
          reinterpret_cast<char*>(&_impl_.minimum_broadcast_secs_),
          reinterpret_cast<char*>(&other->_impl_.minimum_broadcast_secs_));
}

::google::protobuf::Metadata ModuleConfig_DetectionSensorConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModuleConfig_AudioConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ModuleConfig_AudioConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModuleConfig_AudioConfig, _impl_._has_bits_);
};

ModuleConfig_AudioConfig::ModuleConfig_AudioConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_AudioConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.ModuleConfig.AudioConfig)
}
ModuleConfig_AudioConfig::ModuleConfig_AudioConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_AudioConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_AudioConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ModuleConfig_AudioConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ModuleConfig_AudioConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, codec2_enabled_),
           0,
           offsetof(Impl_, i2s_sck_) -
               offsetof(Impl_, codec2_enabled_) +
               sizeof(Impl_::i2s_sck_));
}
ModuleConfig_AudioConfig::~ModuleConfig_AudioConfig() {
  // @@protoc_insertion_point(destructor:meshtastic.ModuleConfig.AudioConfig)
  SharedDtor(*this);
}
inline void ModuleConfig_AudioConfig::SharedDtor(MessageLite& self) {
  ModuleConfig_AudioConfig& this_ = static_cast<ModuleConfig_AudioConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ModuleConfig_AudioConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModuleConfig_AudioConfig(arena);
}
constexpr auto ModuleConfig_AudioConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ModuleConfig_AudioConfig),
                                            alignof(ModuleConfig_AudioConfig));
}
constexpr auto ModuleConfig_AudioConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModuleConfig_AudioConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModuleConfig_AudioConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModuleConfig_AudioConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModuleConfig_AudioConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModuleConfig_AudioConfig>(), &ModuleConfig_AudioConfig::ByteSizeLong,
              &ModuleConfig_AudioConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModuleConfig_AudioConfig, _impl_._cached_size_),
          false,
      },
      &ModuleConfig_AudioConfig::kDescriptorMethods,
      &descriptor_table_meshtastic_2fmodule_5fconfig_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ModuleConfig_AudioConfig_class_data_ =
        ModuleConfig_AudioConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ModuleConfig_AudioConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModuleConfig_AudioConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModuleConfig_AudioConfig_class_data_.tc_table);
  return ModuleConfig_AudioConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2>
ModuleConfig_AudioConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModuleConfig_AudioConfig, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ModuleConfig_AudioConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_AudioConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool codec2_enabled = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_AudioConfig, _impl_.codec2_enabled_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_AudioConfig, _impl_.codec2_enabled_)}},
    // uint32 ptt_pin = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_AudioConfig, _impl_.ptt_pin_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_AudioConfig, _impl_.ptt_pin_)}},
    // .meshtastic.ModuleConfig.AudioConfig.Audio_Baud bitrate = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_AudioConfig, _impl_.bitrate_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_AudioConfig, _impl_.bitrate_)}},
    // uint32 i2s_ws = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_AudioConfig, _impl_.i2s_ws_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_AudioConfig, _impl_.i2s_ws_)}},
    // uint32 i2s_sd = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_AudioConfig, _impl_.i2s_sd_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_AudioConfig, _impl_.i2s_sd_)}},
    // uint32 i2s_din = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_AudioConfig, _impl_.i2s_din_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_AudioConfig, _impl_.i2s_din_)}},
    // uint32 i2s_sck = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_AudioConfig, _impl_.i2s_sck_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_AudioConfig, _impl_.i2s_sck_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool codec2_enabled = 1;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_AudioConfig, _impl_.codec2_enabled_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // uint32 ptt_pin = 2;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_AudioConfig, _impl_.ptt_pin_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .meshtastic.ModuleConfig.AudioConfig.Audio_Baud bitrate = 3;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_AudioConfig, _impl_.bitrate_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // uint32 i2s_ws = 4;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_AudioConfig, _impl_.i2s_ws_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 i2s_sd = 5;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_AudioConfig, _impl_.i2s_sd_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 i2s_din = 6;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_AudioConfig, _impl_.i2s_din_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 i2s_sck = 7;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_AudioConfig, _impl_.i2s_sck_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ModuleConfig_AudioConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.ModuleConfig.AudioConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    ::memset(&_impl_.codec2_enabled_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.i2s_sck_) -
        reinterpret_cast<char*>(&_impl_.codec2_enabled_)) + sizeof(_impl_.i2s_sck_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModuleConfig_AudioConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModuleConfig_AudioConfig& this_ = static_cast<const ModuleConfig_AudioConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModuleConfig_AudioConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModuleConfig_AudioConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.ModuleConfig.AudioConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool codec2_enabled = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_codec2_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_codec2_enabled(), target);
    }
  }

  // uint32 ptt_pin = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_ptt_pin() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_ptt_pin(), target);
    }
  }

  // .meshtastic.ModuleConfig.AudioConfig.Audio_Baud bitrate = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_bitrate() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_bitrate(), target);
    }
  }

  // uint32 i2s_ws = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_i2s_ws() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          4, this_._internal_i2s_ws(), target);
    }
  }

  // uint32 i2s_sd = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_i2s_sd() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          5, this_._internal_i2s_sd(), target);
    }
  }

  // uint32 i2s_din = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_i2s_din() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          6, this_._internal_i2s_din(), target);
    }
  }

  // uint32 i2s_sck = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_i2s_sck() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          7, this_._internal_i2s_sck(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.ModuleConfig.AudioConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModuleConfig_AudioConfig::ByteSizeLong(const MessageLite& base) {
  const ModuleConfig_AudioConfig& this_ = static_cast<const ModuleConfig_AudioConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModuleConfig_AudioConfig::ByteSizeLong() const {
  const ModuleConfig_AudioConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.ModuleConfig.AudioConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // bool codec2_enabled = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_codec2_enabled() != 0) {
        total_size += 2;
      }
    }
    // uint32 ptt_pin = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_ptt_pin() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_ptt_pin());
      }
    }
    // .meshtastic.ModuleConfig.AudioConfig.Audio_Baud bitrate = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_bitrate() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_bitrate());
      }
    }
    // uint32 i2s_ws = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_i2s_ws() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_i2s_ws());
      }
    }
    // uint32 i2s_sd = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_i2s_sd() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_i2s_sd());
      }
    }
    // uint32 i2s_din = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_i2s_din() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_i2s_din());
      }
    }
    // uint32 i2s_sck = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_i2s_sck() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_i2s_sck());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ModuleConfig_AudioConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleConfig_AudioConfig*>(&to_msg);
  auto& from = static_cast<const ModuleConfig_AudioConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.ModuleConfig.AudioConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_codec2_enabled() != 0) {
        _this->_impl_.codec2_enabled_ = from._impl_.codec2_enabled_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_ptt_pin() != 0) {
        _this->_impl_.ptt_pin_ = from._impl_.ptt_pin_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_bitrate() != 0) {
        _this->_impl_.bitrate_ = from._impl_.bitrate_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_i2s_ws() != 0) {
        _this->_impl_.i2s_ws_ = from._impl_.i2s_ws_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_i2s_sd() != 0) {
        _this->_impl_.i2s_sd_ = from._impl_.i2s_sd_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_i2s_din() != 0) {
        _this->_impl_.i2s_din_ = from._impl_.i2s_din_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_i2s_sck() != 0) {
        _this->_impl_.i2s_sck_ = from._impl_.i2s_sck_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleConfig_AudioConfig::CopyFrom(const ModuleConfig_AudioConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.ModuleConfig.AudioConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleConfig_AudioConfig::InternalSwap(ModuleConfig_AudioConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleConfig_AudioConfig, _impl_.i2s_sck_)
      + sizeof(ModuleConfig_AudioConfig::_impl_.i2s_sck_)
      - PROTOBUF_FIELD_OFFSET(ModuleConfig_AudioConfig, _impl_.codec2_enabled_)>(
          reinterpret_cast<char*>(&_impl_.codec2_enabled_),
          reinterpret_cast<char*>(&other->_impl_.codec2_enabled_));
}

::google::protobuf::Metadata ModuleConfig_AudioConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModuleConfig_PaxcounterConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ModuleConfig_PaxcounterConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModuleConfig_PaxcounterConfig, _impl_._has_bits_);
};

ModuleConfig_PaxcounterConfig::ModuleConfig_PaxcounterConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_PaxcounterConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.ModuleConfig.PaxcounterConfig)
}
ModuleConfig_PaxcounterConfig::ModuleConfig_PaxcounterConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_PaxcounterConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_PaxcounterConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ModuleConfig_PaxcounterConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ModuleConfig_PaxcounterConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enabled_),
           0,
           offsetof(Impl_, ble_threshold_) -
               offsetof(Impl_, enabled_) +
               sizeof(Impl_::ble_threshold_));
}
ModuleConfig_PaxcounterConfig::~ModuleConfig_PaxcounterConfig() {
  // @@protoc_insertion_point(destructor:meshtastic.ModuleConfig.PaxcounterConfig)
  SharedDtor(*this);
}
inline void ModuleConfig_PaxcounterConfig::SharedDtor(MessageLite& self) {
  ModuleConfig_PaxcounterConfig& this_ = static_cast<ModuleConfig_PaxcounterConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ModuleConfig_PaxcounterConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModuleConfig_PaxcounterConfig(arena);
}
constexpr auto ModuleConfig_PaxcounterConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ModuleConfig_PaxcounterConfig),
                                            alignof(ModuleConfig_PaxcounterConfig));
}
constexpr auto ModuleConfig_PaxcounterConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModuleConfig_PaxcounterConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModuleConfig_PaxcounterConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModuleConfig_PaxcounterConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModuleConfig_PaxcounterConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModuleConfig_PaxcounterConfig>(), &ModuleConfig_PaxcounterConfig::ByteSizeLong,
              &ModuleConfig_PaxcounterConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModuleConfig_PaxcounterConfig, _impl_._cached_size_),
          false,
      },
      &ModuleConfig_PaxcounterConfig::kDescriptorMethods,
      &descriptor_table_meshtastic_2fmodule_5fconfig_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ModuleConfig_PaxcounterConfig_class_data_ =
        ModuleConfig_PaxcounterConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ModuleConfig_PaxcounterConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModuleConfig_PaxcounterConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModuleConfig_PaxcounterConfig_class_data_.tc_table);
  return ModuleConfig_PaxcounterConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
ModuleConfig_PaxcounterConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModuleConfig_PaxcounterConfig, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ModuleConfig_PaxcounterConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_PaxcounterConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 ble_threshold = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_PaxcounterConfig, _impl_.ble_threshold_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_PaxcounterConfig, _impl_.ble_threshold_)}},
    // bool enabled = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_PaxcounterConfig, _impl_.enabled_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_PaxcounterConfig, _impl_.enabled_)}},
    // uint32 paxcounter_update_interval = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_PaxcounterConfig, _impl_.paxcounter_update_interval_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_PaxcounterConfig, _impl_.paxcounter_update_interval_)}},
    // int32 wifi_threshold = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_PaxcounterConfig, _impl_.wifi_threshold_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_PaxcounterConfig, _impl_.wifi_threshold_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool enabled = 1;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_PaxcounterConfig, _impl_.enabled_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // uint32 paxcounter_update_interval = 2;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_PaxcounterConfig, _impl_.paxcounter_update_interval_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // int32 wifi_threshold = 3;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_PaxcounterConfig, _impl_.wifi_threshold_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 ble_threshold = 4;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_PaxcounterConfig, _impl_.ble_threshold_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ModuleConfig_PaxcounterConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.ModuleConfig.PaxcounterConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.enabled_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ble_threshold_) -
        reinterpret_cast<char*>(&_impl_.enabled_)) + sizeof(_impl_.ble_threshold_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModuleConfig_PaxcounterConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModuleConfig_PaxcounterConfig& this_ = static_cast<const ModuleConfig_PaxcounterConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModuleConfig_PaxcounterConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModuleConfig_PaxcounterConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.ModuleConfig.PaxcounterConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool enabled = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_enabled(), target);
    }
  }

  // uint32 paxcounter_update_interval = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_paxcounter_update_interval() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_paxcounter_update_interval(), target);
    }
  }

  // int32 wifi_threshold = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_wifi_threshold() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_wifi_threshold(), target);
    }
  }

  // int32 ble_threshold = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_ble_threshold() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_ble_threshold(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.ModuleConfig.PaxcounterConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModuleConfig_PaxcounterConfig::ByteSizeLong(const MessageLite& base) {
  const ModuleConfig_PaxcounterConfig& this_ = static_cast<const ModuleConfig_PaxcounterConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModuleConfig_PaxcounterConfig::ByteSizeLong() const {
  const ModuleConfig_PaxcounterConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.ModuleConfig.PaxcounterConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // bool enabled = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_enabled() != 0) {
        total_size += 2;
      }
    }
    // uint32 paxcounter_update_interval = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_paxcounter_update_interval() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_paxcounter_update_interval());
      }
    }
    // int32 wifi_threshold = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_wifi_threshold() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_wifi_threshold());
      }
    }
    // int32 ble_threshold = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_ble_threshold() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_ble_threshold());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ModuleConfig_PaxcounterConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleConfig_PaxcounterConfig*>(&to_msg);
  auto& from = static_cast<const ModuleConfig_PaxcounterConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.ModuleConfig.PaxcounterConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_enabled() != 0) {
        _this->_impl_.enabled_ = from._impl_.enabled_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_paxcounter_update_interval() != 0) {
        _this->_impl_.paxcounter_update_interval_ = from._impl_.paxcounter_update_interval_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_wifi_threshold() != 0) {
        _this->_impl_.wifi_threshold_ = from._impl_.wifi_threshold_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_ble_threshold() != 0) {
        _this->_impl_.ble_threshold_ = from._impl_.ble_threshold_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleConfig_PaxcounterConfig::CopyFrom(const ModuleConfig_PaxcounterConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.ModuleConfig.PaxcounterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleConfig_PaxcounterConfig::InternalSwap(ModuleConfig_PaxcounterConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleConfig_PaxcounterConfig, _impl_.ble_threshold_)
      + sizeof(ModuleConfig_PaxcounterConfig::_impl_.ble_threshold_)
      - PROTOBUF_FIELD_OFFSET(ModuleConfig_PaxcounterConfig, _impl_.enabled_)>(
          reinterpret_cast<char*>(&_impl_.enabled_),
          reinterpret_cast<char*>(&other->_impl_.enabled_));
}

::google::protobuf::Metadata ModuleConfig_PaxcounterConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModuleConfig_SerialConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ModuleConfig_SerialConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_._has_bits_);
};

ModuleConfig_SerialConfig::ModuleConfig_SerialConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_SerialConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.ModuleConfig.SerialConfig)
}
ModuleConfig_SerialConfig::ModuleConfig_SerialConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_SerialConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_SerialConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ModuleConfig_SerialConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ModuleConfig_SerialConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rxd_),
           0,
           offsetof(Impl_, mode_) -
               offsetof(Impl_, rxd_) +
               sizeof(Impl_::mode_));
}
ModuleConfig_SerialConfig::~ModuleConfig_SerialConfig() {
  // @@protoc_insertion_point(destructor:meshtastic.ModuleConfig.SerialConfig)
  SharedDtor(*this);
}
inline void ModuleConfig_SerialConfig::SharedDtor(MessageLite& self) {
  ModuleConfig_SerialConfig& this_ = static_cast<ModuleConfig_SerialConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ModuleConfig_SerialConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModuleConfig_SerialConfig(arena);
}
constexpr auto ModuleConfig_SerialConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ModuleConfig_SerialConfig),
                                            alignof(ModuleConfig_SerialConfig));
}
constexpr auto ModuleConfig_SerialConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModuleConfig_SerialConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModuleConfig_SerialConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModuleConfig_SerialConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModuleConfig_SerialConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModuleConfig_SerialConfig>(), &ModuleConfig_SerialConfig::ByteSizeLong,
              &ModuleConfig_SerialConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_._cached_size_),
          false,
      },
      &ModuleConfig_SerialConfig::kDescriptorMethods,
      &descriptor_table_meshtastic_2fmodule_5fconfig_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ModuleConfig_SerialConfig_class_data_ =
        ModuleConfig_SerialConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ModuleConfig_SerialConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModuleConfig_SerialConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModuleConfig_SerialConfig_class_data_.tc_table);
  return ModuleConfig_SerialConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 0, 2>
ModuleConfig_SerialConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ModuleConfig_SerialConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_SerialConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool override_console_serial_port = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_SerialConfig, _impl_.override_console_serial_port_), 3>(),
     {64, 3, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_.override_console_serial_port_)}},
    // bool enabled = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_SerialConfig, _impl_.enabled_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_.enabled_)}},
    // bool echo = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_SerialConfig, _impl_.echo_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_.echo_)}},
    // uint32 rxd = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_SerialConfig, _impl_.rxd_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_.rxd_)}},
    // uint32 txd = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_SerialConfig, _impl_.txd_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_.txd_)}},
    // .meshtastic.ModuleConfig.SerialConfig.Serial_Baud baud = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_SerialConfig, _impl_.baud_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_.baud_)}},
    // uint32 timeout = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_SerialConfig, _impl_.timeout_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_.timeout_)}},
    // .meshtastic.ModuleConfig.SerialConfig.Serial_Mode mode = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_SerialConfig, _impl_.mode_), 7>(),
     {56, 7, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_.mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool enabled = 1;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_.enabled_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool echo = 2;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_.echo_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // uint32 rxd = 3;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_.rxd_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 txd = 4;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_.txd_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .meshtastic.ModuleConfig.SerialConfig.Serial_Baud baud = 5;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_.baud_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // uint32 timeout = 6;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_.timeout_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .meshtastic.ModuleConfig.SerialConfig.Serial_Mode mode = 7;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_.mode_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // bool override_console_serial_port = 8;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_.override_console_serial_port_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ModuleConfig_SerialConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.ModuleConfig.SerialConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    ::memset(&_impl_.rxd_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.mode_) -
        reinterpret_cast<char*>(&_impl_.rxd_)) + sizeof(_impl_.mode_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModuleConfig_SerialConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModuleConfig_SerialConfig& this_ = static_cast<const ModuleConfig_SerialConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModuleConfig_SerialConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModuleConfig_SerialConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.ModuleConfig.SerialConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool enabled = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_enabled(), target);
    }
  }

  // bool echo = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_echo() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_echo(), target);
    }
  }

  // uint32 rxd = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_rxd() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_rxd(), target);
    }
  }

  // uint32 txd = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_txd() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          4, this_._internal_txd(), target);
    }
  }

  // .meshtastic.ModuleConfig.SerialConfig.Serial_Baud baud = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_baud() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_baud(), target);
    }
  }

  // uint32 timeout = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_timeout() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          6, this_._internal_timeout(), target);
    }
  }

  // .meshtastic.ModuleConfig.SerialConfig.Serial_Mode mode = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_mode() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          7, this_._internal_mode(), target);
    }
  }

  // bool override_console_serial_port = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_override_console_serial_port() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          8, this_._internal_override_console_serial_port(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.ModuleConfig.SerialConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModuleConfig_SerialConfig::ByteSizeLong(const MessageLite& base) {
  const ModuleConfig_SerialConfig& this_ = static_cast<const ModuleConfig_SerialConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModuleConfig_SerialConfig::ByteSizeLong() const {
  const ModuleConfig_SerialConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.ModuleConfig.SerialConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // uint32 rxd = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_rxd() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_rxd());
      }
    }
    // bool enabled = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_enabled() != 0) {
        total_size += 2;
      }
    }
    // bool echo = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_echo() != 0) {
        total_size += 2;
      }
    }
    // bool override_console_serial_port = 8;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_override_console_serial_port() != 0) {
        total_size += 2;
      }
    }
    // uint32 txd = 4;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_txd() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_txd());
      }
    }
    // .meshtastic.ModuleConfig.SerialConfig.Serial_Baud baud = 5;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_baud() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_baud());
      }
    }
    // uint32 timeout = 6;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_timeout() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_timeout());
      }
    }
    // .meshtastic.ModuleConfig.SerialConfig.Serial_Mode mode = 7;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_mode() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_mode());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ModuleConfig_SerialConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleConfig_SerialConfig*>(&to_msg);
  auto& from = static_cast<const ModuleConfig_SerialConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.ModuleConfig.SerialConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_rxd() != 0) {
        _this->_impl_.rxd_ = from._impl_.rxd_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_enabled() != 0) {
        _this->_impl_.enabled_ = from._impl_.enabled_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_echo() != 0) {
        _this->_impl_.echo_ = from._impl_.echo_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_override_console_serial_port() != 0) {
        _this->_impl_.override_console_serial_port_ = from._impl_.override_console_serial_port_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_txd() != 0) {
        _this->_impl_.txd_ = from._impl_.txd_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_baud() != 0) {
        _this->_impl_.baud_ = from._impl_.baud_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_timeout() != 0) {
        _this->_impl_.timeout_ = from._impl_.timeout_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_mode() != 0) {
        _this->_impl_.mode_ = from._impl_.mode_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleConfig_SerialConfig::CopyFrom(const ModuleConfig_SerialConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.ModuleConfig.SerialConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleConfig_SerialConfig::InternalSwap(ModuleConfig_SerialConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_.mode_)
      + sizeof(ModuleConfig_SerialConfig::_impl_.mode_)
      - PROTOBUF_FIELD_OFFSET(ModuleConfig_SerialConfig, _impl_.rxd_)>(
          reinterpret_cast<char*>(&_impl_.rxd_),
          reinterpret_cast<char*>(&other->_impl_.rxd_));
}

::google::protobuf::Metadata ModuleConfig_SerialConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModuleConfig_ExternalNotificationConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ModuleConfig_ExternalNotificationConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_._has_bits_);
};

ModuleConfig_ExternalNotificationConfig::ModuleConfig_ExternalNotificationConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_ExternalNotificationConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.ModuleConfig.ExternalNotificationConfig)
}
ModuleConfig_ExternalNotificationConfig::ModuleConfig_ExternalNotificationConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_ExternalNotificationConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_ExternalNotificationConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ModuleConfig_ExternalNotificationConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ModuleConfig_ExternalNotificationConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, output_ms_),
           0,
           offsetof(Impl_, use_i2s_as_buzzer_) -
               offsetof(Impl_, output_ms_) +
               sizeof(Impl_::use_i2s_as_buzzer_));
}
ModuleConfig_ExternalNotificationConfig::~ModuleConfig_ExternalNotificationConfig() {
  // @@protoc_insertion_point(destructor:meshtastic.ModuleConfig.ExternalNotificationConfig)
  SharedDtor(*this);
}
inline void ModuleConfig_ExternalNotificationConfig::SharedDtor(MessageLite& self) {
  ModuleConfig_ExternalNotificationConfig& this_ = static_cast<ModuleConfig_ExternalNotificationConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ModuleConfig_ExternalNotificationConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModuleConfig_ExternalNotificationConfig(arena);
}
constexpr auto ModuleConfig_ExternalNotificationConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ModuleConfig_ExternalNotificationConfig),
                                            alignof(ModuleConfig_ExternalNotificationConfig));
}
constexpr auto ModuleConfig_ExternalNotificationConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModuleConfig_ExternalNotificationConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModuleConfig_ExternalNotificationConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModuleConfig_ExternalNotificationConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModuleConfig_ExternalNotificationConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModuleConfig_ExternalNotificationConfig>(), &ModuleConfig_ExternalNotificationConfig::ByteSizeLong,
              &ModuleConfig_ExternalNotificationConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_._cached_size_),
          false,
      },
      &ModuleConfig_ExternalNotificationConfig::kDescriptorMethods,
      &descriptor_table_meshtastic_2fmodule_5fconfig_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ModuleConfig_ExternalNotificationConfig_class_data_ =
        ModuleConfig_ExternalNotificationConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ModuleConfig_ExternalNotificationConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModuleConfig_ExternalNotificationConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModuleConfig_ExternalNotificationConfig_class_data_.tc_table);
  return ModuleConfig_ExternalNotificationConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 15, 0, 0, 2>
ModuleConfig_ExternalNotificationConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_._has_bits_),
    0, // no _extensions_
    15, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294934528,  // skipmap
    offsetof(decltype(_table_), field_entries),
    15,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ModuleConfig_ExternalNotificationConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_ExternalNotificationConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool enabled = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_ExternalNotificationConfig, _impl_.enabled_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.enabled_)}},
    // uint32 output_ms = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_ExternalNotificationConfig, _impl_.output_ms_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.output_ms_)}},
    // uint32 output = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_ExternalNotificationConfig, _impl_.output_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.output_)}},
    // bool active = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_ExternalNotificationConfig, _impl_.active_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.active_)}},
    // bool alert_message = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_ExternalNotificationConfig, _impl_.alert_message_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.alert_message_)}},
    // bool alert_bell = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_ExternalNotificationConfig, _impl_.alert_bell_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.alert_bell_)}},
    // bool use_pwm = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_ExternalNotificationConfig, _impl_.use_pwm_), 8>(),
     {56, 8, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.use_pwm_)}},
    // uint32 output_vibra = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_ExternalNotificationConfig, _impl_.output_vibra_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.output_vibra_)}},
    // uint32 output_buzzer = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_ExternalNotificationConfig, _impl_.output_buzzer_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.output_buzzer_)}},
    // bool alert_message_vibra = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_ExternalNotificationConfig, _impl_.alert_message_vibra_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.alert_message_vibra_)}},
    // bool alert_message_buzzer = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_ExternalNotificationConfig, _impl_.alert_message_buzzer_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.alert_message_buzzer_)}},
    // bool alert_bell_vibra = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_ExternalNotificationConfig, _impl_.alert_bell_vibra_), 11>(),
     {96, 11, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.alert_bell_vibra_)}},
    // bool alert_bell_buzzer = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_ExternalNotificationConfig, _impl_.alert_bell_buzzer_), 13>(),
     {104, 13, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.alert_bell_buzzer_)}},
    // uint32 nag_timeout = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_ExternalNotificationConfig, _impl_.nag_timeout_), 12>(),
     {112, 12, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.nag_timeout_)}},
    // bool use_i2s_as_buzzer = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_ExternalNotificationConfig, _impl_.use_i2s_as_buzzer_), 14>(),
     {120, 14, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.use_i2s_as_buzzer_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool enabled = 1;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.enabled_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // uint32 output_ms = 2;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.output_ms_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 output = 3;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.output_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bool active = 4;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.active_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool alert_message = 5;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.alert_message_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool alert_bell = 6;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.alert_bell_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool use_pwm = 7;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.use_pwm_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // uint32 output_vibra = 8;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.output_vibra_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 output_buzzer = 9;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.output_buzzer_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bool alert_message_vibra = 10;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.alert_message_vibra_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool alert_message_buzzer = 11;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.alert_message_buzzer_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool alert_bell_vibra = 12;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.alert_bell_vibra_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool alert_bell_buzzer = 13;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.alert_bell_buzzer_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // uint32 nag_timeout = 14;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.nag_timeout_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bool use_i2s_as_buzzer = 15;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.use_i2s_as_buzzer_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ModuleConfig_ExternalNotificationConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.ModuleConfig.ExternalNotificationConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    ::memset(&_impl_.output_ms_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.output_buzzer_) -
        reinterpret_cast<char*>(&_impl_.output_ms_)) + sizeof(_impl_.output_buzzer_));
  }
  if ((cached_has_bits & 0x00007f00u) != 0) {
    ::memset(&_impl_.use_pwm_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.use_i2s_as_buzzer_) -
        reinterpret_cast<char*>(&_impl_.use_pwm_)) + sizeof(_impl_.use_i2s_as_buzzer_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModuleConfig_ExternalNotificationConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModuleConfig_ExternalNotificationConfig& this_ = static_cast<const ModuleConfig_ExternalNotificationConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModuleConfig_ExternalNotificationConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModuleConfig_ExternalNotificationConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.ModuleConfig.ExternalNotificationConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool enabled = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_enabled(), target);
    }
  }

  // uint32 output_ms = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_output_ms() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_output_ms(), target);
    }
  }

  // uint32 output = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_output() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_output(), target);
    }
  }

  // bool active = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_active() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_active(), target);
    }
  }

  // bool alert_message = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_alert_message() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_alert_message(), target);
    }
  }

  // bool alert_bell = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_alert_bell() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_alert_bell(), target);
    }
  }

  // bool use_pwm = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (this_._internal_use_pwm() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          7, this_._internal_use_pwm(), target);
    }
  }

  // uint32 output_vibra = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_output_vibra() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          8, this_._internal_output_vibra(), target);
    }
  }

  // uint32 output_buzzer = 9;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_output_buzzer() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          9, this_._internal_output_buzzer(), target);
    }
  }

  // bool alert_message_vibra = 10;
  if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
    if (this_._internal_alert_message_vibra() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          10, this_._internal_alert_message_vibra(), target);
    }
  }

  // bool alert_message_buzzer = 11;
  if ((this_._impl_._has_bits_[0] & 0x00000400u) != 0) {
    if (this_._internal_alert_message_buzzer() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          11, this_._internal_alert_message_buzzer(), target);
    }
  }

  // bool alert_bell_vibra = 12;
  if ((this_._impl_._has_bits_[0] & 0x00000800u) != 0) {
    if (this_._internal_alert_bell_vibra() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          12, this_._internal_alert_bell_vibra(), target);
    }
  }

  // bool alert_bell_buzzer = 13;
  if ((this_._impl_._has_bits_[0] & 0x00002000u) != 0) {
    if (this_._internal_alert_bell_buzzer() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          13, this_._internal_alert_bell_buzzer(), target);
    }
  }

  // uint32 nag_timeout = 14;
  if ((this_._impl_._has_bits_[0] & 0x00001000u) != 0) {
    if (this_._internal_nag_timeout() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          14, this_._internal_nag_timeout(), target);
    }
  }

  // bool use_i2s_as_buzzer = 15;
  if ((this_._impl_._has_bits_[0] & 0x00004000u) != 0) {
    if (this_._internal_use_i2s_as_buzzer() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          15, this_._internal_use_i2s_as_buzzer(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.ModuleConfig.ExternalNotificationConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModuleConfig_ExternalNotificationConfig::ByteSizeLong(const MessageLite& base) {
  const ModuleConfig_ExternalNotificationConfig& this_ = static_cast<const ModuleConfig_ExternalNotificationConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModuleConfig_ExternalNotificationConfig::ByteSizeLong() const {
  const ModuleConfig_ExternalNotificationConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.ModuleConfig.ExternalNotificationConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // uint32 output_ms = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_output_ms() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_output_ms());
      }
    }
    // uint32 output = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_output() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_output());
      }
    }
    // bool enabled = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_enabled() != 0) {
        total_size += 2;
      }
    }
    // bool active = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_active() != 0) {
        total_size += 2;
      }
    }
    // bool alert_message = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_alert_message() != 0) {
        total_size += 2;
      }
    }
    // bool alert_bell = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_alert_bell() != 0) {
        total_size += 2;
      }
    }
    // uint32 output_vibra = 8;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_output_vibra() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_output_vibra());
      }
    }
    // uint32 output_buzzer = 9;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_output_buzzer() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_output_buzzer());
      }
    }
  }
  if ((cached_has_bits & 0x00007f00u) != 0) {
    // bool use_pwm = 7;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_use_pwm() != 0) {
        total_size += 2;
      }
    }
    // bool alert_message_vibra = 10;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_alert_message_vibra() != 0) {
        total_size += 2;
      }
    }
    // bool alert_message_buzzer = 11;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_alert_message_buzzer() != 0) {
        total_size += 2;
      }
    }
    // bool alert_bell_vibra = 12;
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (this_._internal_alert_bell_vibra() != 0) {
        total_size += 2;
      }
    }
    // uint32 nag_timeout = 14;
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (this_._internal_nag_timeout() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_nag_timeout());
      }
    }
    // bool alert_bell_buzzer = 13;
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (this_._internal_alert_bell_buzzer() != 0) {
        total_size += 2;
      }
    }
    // bool use_i2s_as_buzzer = 15;
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (this_._internal_use_i2s_as_buzzer() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ModuleConfig_ExternalNotificationConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleConfig_ExternalNotificationConfig*>(&to_msg);
  auto& from = static_cast<const ModuleConfig_ExternalNotificationConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.ModuleConfig.ExternalNotificationConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_output_ms() != 0) {
        _this->_impl_.output_ms_ = from._impl_.output_ms_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_output() != 0) {
        _this->_impl_.output_ = from._impl_.output_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_enabled() != 0) {
        _this->_impl_.enabled_ = from._impl_.enabled_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_active() != 0) {
        _this->_impl_.active_ = from._impl_.active_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_alert_message() != 0) {
        _this->_impl_.alert_message_ = from._impl_.alert_message_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_alert_bell() != 0) {
        _this->_impl_.alert_bell_ = from._impl_.alert_bell_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_output_vibra() != 0) {
        _this->_impl_.output_vibra_ = from._impl_.output_vibra_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_output_buzzer() != 0) {
        _this->_impl_.output_buzzer_ = from._impl_.output_buzzer_;
      }
    }
  }
  if ((cached_has_bits & 0x00007f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_use_pwm() != 0) {
        _this->_impl_.use_pwm_ = from._impl_.use_pwm_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_alert_message_vibra() != 0) {
        _this->_impl_.alert_message_vibra_ = from._impl_.alert_message_vibra_;
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_alert_message_buzzer() != 0) {
        _this->_impl_.alert_message_buzzer_ = from._impl_.alert_message_buzzer_;
      }
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (from._internal_alert_bell_vibra() != 0) {
        _this->_impl_.alert_bell_vibra_ = from._impl_.alert_bell_vibra_;
      }
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (from._internal_nag_timeout() != 0) {
        _this->_impl_.nag_timeout_ = from._impl_.nag_timeout_;
      }
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (from._internal_alert_bell_buzzer() != 0) {
        _this->_impl_.alert_bell_buzzer_ = from._impl_.alert_bell_buzzer_;
      }
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (from._internal_use_i2s_as_buzzer() != 0) {
        _this->_impl_.use_i2s_as_buzzer_ = from._impl_.use_i2s_as_buzzer_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleConfig_ExternalNotificationConfig::CopyFrom(const ModuleConfig_ExternalNotificationConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.ModuleConfig.ExternalNotificationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleConfig_ExternalNotificationConfig::InternalSwap(ModuleConfig_ExternalNotificationConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.use_i2s_as_buzzer_)
      + sizeof(ModuleConfig_ExternalNotificationConfig::_impl_.use_i2s_as_buzzer_)
      - PROTOBUF_FIELD_OFFSET(ModuleConfig_ExternalNotificationConfig, _impl_.output_ms_)>(
          reinterpret_cast<char*>(&_impl_.output_ms_),
          reinterpret_cast<char*>(&other->_impl_.output_ms_));
}

::google::protobuf::Metadata ModuleConfig_ExternalNotificationConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModuleConfig_StoreForwardConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ModuleConfig_StoreForwardConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModuleConfig_StoreForwardConfig, _impl_._has_bits_);
};

ModuleConfig_StoreForwardConfig::ModuleConfig_StoreForwardConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_StoreForwardConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.ModuleConfig.StoreForwardConfig)
}
ModuleConfig_StoreForwardConfig::ModuleConfig_StoreForwardConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_StoreForwardConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_StoreForwardConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ModuleConfig_StoreForwardConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ModuleConfig_StoreForwardConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, records_),
           0,
           offsetof(Impl_, history_return_window_) -
               offsetof(Impl_, records_) +
               sizeof(Impl_::history_return_window_));
}
ModuleConfig_StoreForwardConfig::~ModuleConfig_StoreForwardConfig() {
  // @@protoc_insertion_point(destructor:meshtastic.ModuleConfig.StoreForwardConfig)
  SharedDtor(*this);
}
inline void ModuleConfig_StoreForwardConfig::SharedDtor(MessageLite& self) {
  ModuleConfig_StoreForwardConfig& this_ = static_cast<ModuleConfig_StoreForwardConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ModuleConfig_StoreForwardConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModuleConfig_StoreForwardConfig(arena);
}
constexpr auto ModuleConfig_StoreForwardConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ModuleConfig_StoreForwardConfig),
                                            alignof(ModuleConfig_StoreForwardConfig));
}
constexpr auto ModuleConfig_StoreForwardConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModuleConfig_StoreForwardConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModuleConfig_StoreForwardConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModuleConfig_StoreForwardConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModuleConfig_StoreForwardConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModuleConfig_StoreForwardConfig>(), &ModuleConfig_StoreForwardConfig::ByteSizeLong,
              &ModuleConfig_StoreForwardConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModuleConfig_StoreForwardConfig, _impl_._cached_size_),
          false,
      },
      &ModuleConfig_StoreForwardConfig::kDescriptorMethods,
      &descriptor_table_meshtastic_2fmodule_5fconfig_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ModuleConfig_StoreForwardConfig_class_data_ =
        ModuleConfig_StoreForwardConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ModuleConfig_StoreForwardConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModuleConfig_StoreForwardConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModuleConfig_StoreForwardConfig_class_data_.tc_table);
  return ModuleConfig_StoreForwardConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2>
ModuleConfig_StoreForwardConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModuleConfig_StoreForwardConfig, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ModuleConfig_StoreForwardConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_StoreForwardConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool enabled = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_StoreForwardConfig, _impl_.enabled_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_StoreForwardConfig, _impl_.enabled_)}},
    // bool heartbeat = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_StoreForwardConfig, _impl_.heartbeat_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_StoreForwardConfig, _impl_.heartbeat_)}},
    // uint32 records = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_StoreForwardConfig, _impl_.records_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_StoreForwardConfig, _impl_.records_)}},
    // uint32 history_return_max = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_StoreForwardConfig, _impl_.history_return_max_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_StoreForwardConfig, _impl_.history_return_max_)}},
    // uint32 history_return_window = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_StoreForwardConfig, _impl_.history_return_window_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_StoreForwardConfig, _impl_.history_return_window_)}},
    // bool is_server = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_StoreForwardConfig, _impl_.is_server_), 3>(),
     {48, 3, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_StoreForwardConfig, _impl_.is_server_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool enabled = 1;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_StoreForwardConfig, _impl_.enabled_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool heartbeat = 2;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_StoreForwardConfig, _impl_.heartbeat_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // uint32 records = 3;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_StoreForwardConfig, _impl_.records_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 history_return_max = 4;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_StoreForwardConfig, _impl_.history_return_max_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 history_return_window = 5;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_StoreForwardConfig, _impl_.history_return_window_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bool is_server = 6;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_StoreForwardConfig, _impl_.is_server_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ModuleConfig_StoreForwardConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.ModuleConfig.StoreForwardConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    ::memset(&_impl_.records_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.history_return_window_) -
        reinterpret_cast<char*>(&_impl_.records_)) + sizeof(_impl_.history_return_window_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModuleConfig_StoreForwardConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModuleConfig_StoreForwardConfig& this_ = static_cast<const ModuleConfig_StoreForwardConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModuleConfig_StoreForwardConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModuleConfig_StoreForwardConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.ModuleConfig.StoreForwardConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool enabled = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_enabled(), target);
    }
  }

  // bool heartbeat = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_heartbeat() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_heartbeat(), target);
    }
  }

  // uint32 records = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_records() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_records(), target);
    }
  }

  // uint32 history_return_max = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_history_return_max() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          4, this_._internal_history_return_max(), target);
    }
  }

  // uint32 history_return_window = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_history_return_window() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          5, this_._internal_history_return_window(), target);
    }
  }

  // bool is_server = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_is_server() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_is_server(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.ModuleConfig.StoreForwardConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModuleConfig_StoreForwardConfig::ByteSizeLong(const MessageLite& base) {
  const ModuleConfig_StoreForwardConfig& this_ = static_cast<const ModuleConfig_StoreForwardConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModuleConfig_StoreForwardConfig::ByteSizeLong() const {
  const ModuleConfig_StoreForwardConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.ModuleConfig.StoreForwardConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // uint32 records = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_records() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_records());
      }
    }
    // bool enabled = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_enabled() != 0) {
        total_size += 2;
      }
    }
    // bool heartbeat = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_heartbeat() != 0) {
        total_size += 2;
      }
    }
    // bool is_server = 6;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_is_server() != 0) {
        total_size += 2;
      }
    }
    // uint32 history_return_max = 4;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_history_return_max() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_history_return_max());
      }
    }
    // uint32 history_return_window = 5;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_history_return_window() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_history_return_window());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ModuleConfig_StoreForwardConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleConfig_StoreForwardConfig*>(&to_msg);
  auto& from = static_cast<const ModuleConfig_StoreForwardConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.ModuleConfig.StoreForwardConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_records() != 0) {
        _this->_impl_.records_ = from._impl_.records_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_enabled() != 0) {
        _this->_impl_.enabled_ = from._impl_.enabled_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_heartbeat() != 0) {
        _this->_impl_.heartbeat_ = from._impl_.heartbeat_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_is_server() != 0) {
        _this->_impl_.is_server_ = from._impl_.is_server_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_history_return_max() != 0) {
        _this->_impl_.history_return_max_ = from._impl_.history_return_max_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_history_return_window() != 0) {
        _this->_impl_.history_return_window_ = from._impl_.history_return_window_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleConfig_StoreForwardConfig::CopyFrom(const ModuleConfig_StoreForwardConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.ModuleConfig.StoreForwardConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleConfig_StoreForwardConfig::InternalSwap(ModuleConfig_StoreForwardConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleConfig_StoreForwardConfig, _impl_.history_return_window_)
      + sizeof(ModuleConfig_StoreForwardConfig::_impl_.history_return_window_)
      - PROTOBUF_FIELD_OFFSET(ModuleConfig_StoreForwardConfig, _impl_.records_)>(
          reinterpret_cast<char*>(&_impl_.records_),
          reinterpret_cast<char*>(&other->_impl_.records_));
}

::google::protobuf::Metadata ModuleConfig_StoreForwardConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModuleConfig_RangeTestConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ModuleConfig_RangeTestConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModuleConfig_RangeTestConfig, _impl_._has_bits_);
};

ModuleConfig_RangeTestConfig::ModuleConfig_RangeTestConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_RangeTestConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.ModuleConfig.RangeTestConfig)
}
ModuleConfig_RangeTestConfig::ModuleConfig_RangeTestConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_RangeTestConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_RangeTestConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ModuleConfig_RangeTestConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ModuleConfig_RangeTestConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sender_),
           0,
           offsetof(Impl_, save_) -
               offsetof(Impl_, sender_) +
               sizeof(Impl_::save_));
}
ModuleConfig_RangeTestConfig::~ModuleConfig_RangeTestConfig() {
  // @@protoc_insertion_point(destructor:meshtastic.ModuleConfig.RangeTestConfig)
  SharedDtor(*this);
}
inline void ModuleConfig_RangeTestConfig::SharedDtor(MessageLite& self) {
  ModuleConfig_RangeTestConfig& this_ = static_cast<ModuleConfig_RangeTestConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ModuleConfig_RangeTestConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModuleConfig_RangeTestConfig(arena);
}
constexpr auto ModuleConfig_RangeTestConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ModuleConfig_RangeTestConfig),
                                            alignof(ModuleConfig_RangeTestConfig));
}
constexpr auto ModuleConfig_RangeTestConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModuleConfig_RangeTestConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModuleConfig_RangeTestConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModuleConfig_RangeTestConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModuleConfig_RangeTestConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModuleConfig_RangeTestConfig>(), &ModuleConfig_RangeTestConfig::ByteSizeLong,
              &ModuleConfig_RangeTestConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModuleConfig_RangeTestConfig, _impl_._cached_size_),
          false,
      },
      &ModuleConfig_RangeTestConfig::kDescriptorMethods,
      &descriptor_table_meshtastic_2fmodule_5fconfig_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ModuleConfig_RangeTestConfig_class_data_ =
        ModuleConfig_RangeTestConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ModuleConfig_RangeTestConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModuleConfig_RangeTestConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModuleConfig_RangeTestConfig_class_data_.tc_table);
  return ModuleConfig_RangeTestConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
ModuleConfig_RangeTestConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModuleConfig_RangeTestConfig, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ModuleConfig_RangeTestConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_RangeTestConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool enabled = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_RangeTestConfig, _impl_.enabled_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_RangeTestConfig, _impl_.enabled_)}},
    // uint32 sender = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_RangeTestConfig, _impl_.sender_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_RangeTestConfig, _impl_.sender_)}},
    // bool save = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_RangeTestConfig, _impl_.save_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_RangeTestConfig, _impl_.save_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool enabled = 1;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_RangeTestConfig, _impl_.enabled_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // uint32 sender = 2;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_RangeTestConfig, _impl_.sender_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bool save = 3;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_RangeTestConfig, _impl_.save_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ModuleConfig_RangeTestConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.ModuleConfig.RangeTestConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.sender_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.save_) -
        reinterpret_cast<char*>(&_impl_.sender_)) + sizeof(_impl_.save_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModuleConfig_RangeTestConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModuleConfig_RangeTestConfig& this_ = static_cast<const ModuleConfig_RangeTestConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModuleConfig_RangeTestConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModuleConfig_RangeTestConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.ModuleConfig.RangeTestConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool enabled = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_enabled(), target);
    }
  }

  // uint32 sender = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_sender() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_sender(), target);
    }
  }

  // bool save = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_save() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_save(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.ModuleConfig.RangeTestConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModuleConfig_RangeTestConfig::ByteSizeLong(const MessageLite& base) {
  const ModuleConfig_RangeTestConfig& this_ = static_cast<const ModuleConfig_RangeTestConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModuleConfig_RangeTestConfig::ByteSizeLong() const {
  const ModuleConfig_RangeTestConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.ModuleConfig.RangeTestConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // uint32 sender = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_sender() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_sender());
      }
    }
    // bool enabled = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_enabled() != 0) {
        total_size += 2;
      }
    }
    // bool save = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_save() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ModuleConfig_RangeTestConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleConfig_RangeTestConfig*>(&to_msg);
  auto& from = static_cast<const ModuleConfig_RangeTestConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.ModuleConfig.RangeTestConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_sender() != 0) {
        _this->_impl_.sender_ = from._impl_.sender_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_enabled() != 0) {
        _this->_impl_.enabled_ = from._impl_.enabled_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_save() != 0) {
        _this->_impl_.save_ = from._impl_.save_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleConfig_RangeTestConfig::CopyFrom(const ModuleConfig_RangeTestConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.ModuleConfig.RangeTestConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleConfig_RangeTestConfig::InternalSwap(ModuleConfig_RangeTestConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleConfig_RangeTestConfig, _impl_.save_)
      + sizeof(ModuleConfig_RangeTestConfig::_impl_.save_)
      - PROTOBUF_FIELD_OFFSET(ModuleConfig_RangeTestConfig, _impl_.sender_)>(
          reinterpret_cast<char*>(&_impl_.sender_),
          reinterpret_cast<char*>(&other->_impl_.sender_));
}

::google::protobuf::Metadata ModuleConfig_RangeTestConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModuleConfig_TelemetryConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ModuleConfig_TelemetryConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_._has_bits_);
};

ModuleConfig_TelemetryConfig::ModuleConfig_TelemetryConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_TelemetryConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.ModuleConfig.TelemetryConfig)
}
ModuleConfig_TelemetryConfig::ModuleConfig_TelemetryConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_TelemetryConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_TelemetryConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ModuleConfig_TelemetryConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ModuleConfig_TelemetryConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, device_update_interval_),
           0,
           offsetof(Impl_, health_update_interval_) -
               offsetof(Impl_, device_update_interval_) +
               sizeof(Impl_::health_update_interval_));
}
ModuleConfig_TelemetryConfig::~ModuleConfig_TelemetryConfig() {
  // @@protoc_insertion_point(destructor:meshtastic.ModuleConfig.TelemetryConfig)
  SharedDtor(*this);
}
inline void ModuleConfig_TelemetryConfig::SharedDtor(MessageLite& self) {
  ModuleConfig_TelemetryConfig& this_ = static_cast<ModuleConfig_TelemetryConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ModuleConfig_TelemetryConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModuleConfig_TelemetryConfig(arena);
}
constexpr auto ModuleConfig_TelemetryConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ModuleConfig_TelemetryConfig),
                                            alignof(ModuleConfig_TelemetryConfig));
}
constexpr auto ModuleConfig_TelemetryConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModuleConfig_TelemetryConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModuleConfig_TelemetryConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModuleConfig_TelemetryConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModuleConfig_TelemetryConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModuleConfig_TelemetryConfig>(), &ModuleConfig_TelemetryConfig::ByteSizeLong,
              &ModuleConfig_TelemetryConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_._cached_size_),
          false,
      },
      &ModuleConfig_TelemetryConfig::kDescriptorMethods,
      &descriptor_table_meshtastic_2fmodule_5fconfig_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ModuleConfig_TelemetryConfig_class_data_ =
        ModuleConfig_TelemetryConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ModuleConfig_TelemetryConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModuleConfig_TelemetryConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModuleConfig_TelemetryConfig_class_data_.tc_table);
  return ModuleConfig_TelemetryConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 0, 0, 2>
ModuleConfig_TelemetryConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ModuleConfig_TelemetryConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_TelemetryConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 device_update_interval = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_TelemetryConfig, _impl_.device_update_interval_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.device_update_interval_)}},
    // uint32 environment_update_interval = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_TelemetryConfig, _impl_.environment_update_interval_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.environment_update_interval_)}},
    // bool environment_measurement_enabled = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_TelemetryConfig, _impl_.environment_measurement_enabled_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.environment_measurement_enabled_)}},
    // bool environment_screen_enabled = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_TelemetryConfig, _impl_.environment_screen_enabled_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.environment_screen_enabled_)}},
    // bool environment_display_fahrenheit = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_TelemetryConfig, _impl_.environment_display_fahrenheit_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.environment_display_fahrenheit_)}},
    // bool air_quality_enabled = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_TelemetryConfig, _impl_.air_quality_enabled_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.air_quality_enabled_)}},
    // uint32 air_quality_interval = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_TelemetryConfig, _impl_.air_quality_interval_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.air_quality_interval_)}},
    // bool power_measurement_enabled = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_TelemetryConfig, _impl_.power_measurement_enabled_), 8>(),
     {64, 8, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.power_measurement_enabled_)}},
    // uint32 power_update_interval = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_TelemetryConfig, _impl_.power_update_interval_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.power_update_interval_)}},
    // bool power_screen_enabled = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_TelemetryConfig, _impl_.power_screen_enabled_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.power_screen_enabled_)}},
    // bool health_measurement_enabled = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_TelemetryConfig, _impl_.health_measurement_enabled_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.health_measurement_enabled_)}},
    // uint32 health_update_interval = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_TelemetryConfig, _impl_.health_update_interval_), 12>(),
     {96, 12, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.health_update_interval_)}},
    // bool health_screen_enabled = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_TelemetryConfig, _impl_.health_screen_enabled_), 11>(),
     {104, 11, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.health_screen_enabled_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 device_update_interval = 1;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.device_update_interval_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 environment_update_interval = 2;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.environment_update_interval_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bool environment_measurement_enabled = 3;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.environment_measurement_enabled_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool environment_screen_enabled = 4;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.environment_screen_enabled_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool environment_display_fahrenheit = 5;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.environment_display_fahrenheit_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool air_quality_enabled = 6;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.air_quality_enabled_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // uint32 air_quality_interval = 7;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.air_quality_interval_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bool power_measurement_enabled = 8;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.power_measurement_enabled_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // uint32 power_update_interval = 9;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.power_update_interval_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bool power_screen_enabled = 10;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.power_screen_enabled_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool health_measurement_enabled = 11;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.health_measurement_enabled_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // uint32 health_update_interval = 12;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.health_update_interval_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bool health_screen_enabled = 13;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.health_screen_enabled_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ModuleConfig_TelemetryConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.ModuleConfig.TelemetryConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    ::memset(&_impl_.device_update_interval_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.power_update_interval_) -
        reinterpret_cast<char*>(&_impl_.device_update_interval_)) + sizeof(_impl_.power_update_interval_));
  }
  if ((cached_has_bits & 0x00001f00u) != 0) {
    ::memset(&_impl_.power_measurement_enabled_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.health_update_interval_) -
        reinterpret_cast<char*>(&_impl_.power_measurement_enabled_)) + sizeof(_impl_.health_update_interval_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModuleConfig_TelemetryConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModuleConfig_TelemetryConfig& this_ = static_cast<const ModuleConfig_TelemetryConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModuleConfig_TelemetryConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModuleConfig_TelemetryConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.ModuleConfig.TelemetryConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 device_update_interval = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_device_update_interval() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_device_update_interval(), target);
    }
  }

  // uint32 environment_update_interval = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_environment_update_interval() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_environment_update_interval(), target);
    }
  }

  // bool environment_measurement_enabled = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_environment_measurement_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_environment_measurement_enabled(), target);
    }
  }

  // bool environment_screen_enabled = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_environment_screen_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_environment_screen_enabled(), target);
    }
  }

  // bool environment_display_fahrenheit = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_environment_display_fahrenheit() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_environment_display_fahrenheit(), target);
    }
  }

  // bool air_quality_enabled = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_air_quality_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_air_quality_enabled(), target);
    }
  }

  // uint32 air_quality_interval = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_air_quality_interval() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          7, this_._internal_air_quality_interval(), target);
    }
  }

  // bool power_measurement_enabled = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (this_._internal_power_measurement_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          8, this_._internal_power_measurement_enabled(), target);
    }
  }

  // uint32 power_update_interval = 9;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_power_update_interval() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          9, this_._internal_power_update_interval(), target);
    }
  }

  // bool power_screen_enabled = 10;
  if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
    if (this_._internal_power_screen_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          10, this_._internal_power_screen_enabled(), target);
    }
  }

  // bool health_measurement_enabled = 11;
  if ((this_._impl_._has_bits_[0] & 0x00000400u) != 0) {
    if (this_._internal_health_measurement_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          11, this_._internal_health_measurement_enabled(), target);
    }
  }

  // uint32 health_update_interval = 12;
  if ((this_._impl_._has_bits_[0] & 0x00001000u) != 0) {
    if (this_._internal_health_update_interval() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          12, this_._internal_health_update_interval(), target);
    }
  }

  // bool health_screen_enabled = 13;
  if ((this_._impl_._has_bits_[0] & 0x00000800u) != 0) {
    if (this_._internal_health_screen_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          13, this_._internal_health_screen_enabled(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.ModuleConfig.TelemetryConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModuleConfig_TelemetryConfig::ByteSizeLong(const MessageLite& base) {
  const ModuleConfig_TelemetryConfig& this_ = static_cast<const ModuleConfig_TelemetryConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModuleConfig_TelemetryConfig::ByteSizeLong() const {
  const ModuleConfig_TelemetryConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.ModuleConfig.TelemetryConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // uint32 device_update_interval = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_device_update_interval() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_device_update_interval());
      }
    }
    // uint32 environment_update_interval = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_environment_update_interval() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_environment_update_interval());
      }
    }
    // bool environment_measurement_enabled = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_environment_measurement_enabled() != 0) {
        total_size += 2;
      }
    }
    // bool environment_screen_enabled = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_environment_screen_enabled() != 0) {
        total_size += 2;
      }
    }
    // bool environment_display_fahrenheit = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_environment_display_fahrenheit() != 0) {
        total_size += 2;
      }
    }
    // bool air_quality_enabled = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_air_quality_enabled() != 0) {
        total_size += 2;
      }
    }
    // uint32 air_quality_interval = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_air_quality_interval() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_air_quality_interval());
      }
    }
    // uint32 power_update_interval = 9;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_power_update_interval() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_power_update_interval());
      }
    }
  }
  if ((cached_has_bits & 0x00001f00u) != 0) {
    // bool power_measurement_enabled = 8;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_power_measurement_enabled() != 0) {
        total_size += 2;
      }
    }
    // bool power_screen_enabled = 10;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_power_screen_enabled() != 0) {
        total_size += 2;
      }
    }
    // bool health_measurement_enabled = 11;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_health_measurement_enabled() != 0) {
        total_size += 2;
      }
    }
    // bool health_screen_enabled = 13;
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (this_._internal_health_screen_enabled() != 0) {
        total_size += 2;
      }
    }
    // uint32 health_update_interval = 12;
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (this_._internal_health_update_interval() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_health_update_interval());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ModuleConfig_TelemetryConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleConfig_TelemetryConfig*>(&to_msg);
  auto& from = static_cast<const ModuleConfig_TelemetryConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.ModuleConfig.TelemetryConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_device_update_interval() != 0) {
        _this->_impl_.device_update_interval_ = from._impl_.device_update_interval_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_environment_update_interval() != 0) {
        _this->_impl_.environment_update_interval_ = from._impl_.environment_update_interval_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_environment_measurement_enabled() != 0) {
        _this->_impl_.environment_measurement_enabled_ = from._impl_.environment_measurement_enabled_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_environment_screen_enabled() != 0) {
        _this->_impl_.environment_screen_enabled_ = from._impl_.environment_screen_enabled_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_environment_display_fahrenheit() != 0) {
        _this->_impl_.environment_display_fahrenheit_ = from._impl_.environment_display_fahrenheit_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_air_quality_enabled() != 0) {
        _this->_impl_.air_quality_enabled_ = from._impl_.air_quality_enabled_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_air_quality_interval() != 0) {
        _this->_impl_.air_quality_interval_ = from._impl_.air_quality_interval_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_power_update_interval() != 0) {
        _this->_impl_.power_update_interval_ = from._impl_.power_update_interval_;
      }
    }
  }
  if ((cached_has_bits & 0x00001f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_power_measurement_enabled() != 0) {
        _this->_impl_.power_measurement_enabled_ = from._impl_.power_measurement_enabled_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_power_screen_enabled() != 0) {
        _this->_impl_.power_screen_enabled_ = from._impl_.power_screen_enabled_;
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_health_measurement_enabled() != 0) {
        _this->_impl_.health_measurement_enabled_ = from._impl_.health_measurement_enabled_;
      }
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (from._internal_health_screen_enabled() != 0) {
        _this->_impl_.health_screen_enabled_ = from._impl_.health_screen_enabled_;
      }
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (from._internal_health_update_interval() != 0) {
        _this->_impl_.health_update_interval_ = from._impl_.health_update_interval_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleConfig_TelemetryConfig::CopyFrom(const ModuleConfig_TelemetryConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.ModuleConfig.TelemetryConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleConfig_TelemetryConfig::InternalSwap(ModuleConfig_TelemetryConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.health_update_interval_)
      + sizeof(ModuleConfig_TelemetryConfig::_impl_.health_update_interval_)
      - PROTOBUF_FIELD_OFFSET(ModuleConfig_TelemetryConfig, _impl_.device_update_interval_)>(
          reinterpret_cast<char*>(&_impl_.device_update_interval_),
          reinterpret_cast<char*>(&other->_impl_.device_update_interval_));
}

::google::protobuf::Metadata ModuleConfig_TelemetryConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModuleConfig_CannedMessageConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ModuleConfig_CannedMessageConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_._has_bits_);
};

ModuleConfig_CannedMessageConfig::ModuleConfig_CannedMessageConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_CannedMessageConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.ModuleConfig.CannedMessageConfig)
}
PROTOBUF_NDEBUG_INLINE ModuleConfig_CannedMessageConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::meshtastic::ModuleConfig_CannedMessageConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        allow_input_source_(arena, from.allow_input_source_) {}

ModuleConfig_CannedMessageConfig::ModuleConfig_CannedMessageConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ModuleConfig_CannedMessageConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_CannedMessageConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModuleConfig_CannedMessageConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, inputbroker_pin_a_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, inputbroker_pin_a_),
           offsetof(Impl_, send_bell_) -
               offsetof(Impl_, inputbroker_pin_a_) +
               sizeof(Impl_::send_bell_));

  // @@protoc_insertion_point(copy_constructor:meshtastic.ModuleConfig.CannedMessageConfig)
}
PROTOBUF_NDEBUG_INLINE ModuleConfig_CannedMessageConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        allow_input_source_(arena) {}

inline void ModuleConfig_CannedMessageConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, inputbroker_pin_a_),
           0,
           offsetof(Impl_, send_bell_) -
               offsetof(Impl_, inputbroker_pin_a_) +
               sizeof(Impl_::send_bell_));
}
ModuleConfig_CannedMessageConfig::~ModuleConfig_CannedMessageConfig() {
  // @@protoc_insertion_point(destructor:meshtastic.ModuleConfig.CannedMessageConfig)
  SharedDtor(*this);
}
inline void ModuleConfig_CannedMessageConfig::SharedDtor(MessageLite& self) {
  ModuleConfig_CannedMessageConfig& this_ = static_cast<ModuleConfig_CannedMessageConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.allow_input_source_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ModuleConfig_CannedMessageConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModuleConfig_CannedMessageConfig(arena);
}
constexpr auto ModuleConfig_CannedMessageConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ModuleConfig_CannedMessageConfig),
                                            alignof(ModuleConfig_CannedMessageConfig));
}
constexpr auto ModuleConfig_CannedMessageConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModuleConfig_CannedMessageConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModuleConfig_CannedMessageConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModuleConfig_CannedMessageConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModuleConfig_CannedMessageConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModuleConfig_CannedMessageConfig>(), &ModuleConfig_CannedMessageConfig::ByteSizeLong,
              &ModuleConfig_CannedMessageConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_._cached_size_),
          false,
      },
      &ModuleConfig_CannedMessageConfig::kDescriptorMethods,
      &descriptor_table_meshtastic_2fmodule_5fconfig_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ModuleConfig_CannedMessageConfig_class_data_ =
        ModuleConfig_CannedMessageConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ModuleConfig_CannedMessageConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModuleConfig_CannedMessageConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModuleConfig_CannedMessageConfig_class_data_.tc_table);
  return ModuleConfig_CannedMessageConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 0, 78, 2>
ModuleConfig_CannedMessageConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ModuleConfig_CannedMessageConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_CannedMessageConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool rotary1_enabled = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_CannedMessageConfig, _impl_.rotary1_enabled_), 7>(),
     {8, 7, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.rotary1_enabled_)}},
    // uint32 inputbroker_pin_a = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_CannedMessageConfig, _impl_.inputbroker_pin_a_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.inputbroker_pin_a_)}},
    // uint32 inputbroker_pin_b = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_CannedMessageConfig, _impl_.inputbroker_pin_b_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.inputbroker_pin_b_)}},
    // uint32 inputbroker_pin_press = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_CannedMessageConfig, _impl_.inputbroker_pin_press_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.inputbroker_pin_press_)}},
    // .meshtastic.ModuleConfig.CannedMessageConfig.InputEventChar inputbroker_event_cw = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_CannedMessageConfig, _impl_.inputbroker_event_cw_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.inputbroker_event_cw_)}},
    // .meshtastic.ModuleConfig.CannedMessageConfig.InputEventChar inputbroker_event_ccw = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_CannedMessageConfig, _impl_.inputbroker_event_ccw_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.inputbroker_event_ccw_)}},
    // .meshtastic.ModuleConfig.CannedMessageConfig.InputEventChar inputbroker_event_press = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_CannedMessageConfig, _impl_.inputbroker_event_press_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.inputbroker_event_press_)}},
    // bool updown1_enabled = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_CannedMessageConfig, _impl_.updown1_enabled_), 8>(),
     {64, 8, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.updown1_enabled_)}},
    // bool enabled = 9 [deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_CannedMessageConfig, _impl_.enabled_), 9>(),
     {72, 9, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.enabled_)}},
    // string allow_input_source = 10 [deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {82, 0, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.allow_input_source_)}},
    // bool send_bell = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_CannedMessageConfig, _impl_.send_bell_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.send_bell_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool rotary1_enabled = 1;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.rotary1_enabled_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // uint32 inputbroker_pin_a = 2;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.inputbroker_pin_a_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 inputbroker_pin_b = 3;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.inputbroker_pin_b_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 inputbroker_pin_press = 4;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.inputbroker_pin_press_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .meshtastic.ModuleConfig.CannedMessageConfig.InputEventChar inputbroker_event_cw = 5;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.inputbroker_event_cw_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .meshtastic.ModuleConfig.CannedMessageConfig.InputEventChar inputbroker_event_ccw = 6;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.inputbroker_event_ccw_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .meshtastic.ModuleConfig.CannedMessageConfig.InputEventChar inputbroker_event_press = 7;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.inputbroker_event_press_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // bool updown1_enabled = 8;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.updown1_enabled_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool enabled = 9 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.enabled_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string allow_input_source = 10 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.allow_input_source_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool send_bell = 11;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.send_bell_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\53\0\0\0\0\0\0\0\0\0\22\0\0\0\0\0"
    "meshtastic.ModuleConfig.CannedMessageConfig"
    "allow_input_source"
  }},
};
PROTOBUF_NOINLINE void ModuleConfig_CannedMessageConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.ModuleConfig.CannedMessageConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.allow_input_source_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x000000feu) != 0) {
    ::memset(&_impl_.inputbroker_pin_a_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.rotary1_enabled_) -
        reinterpret_cast<char*>(&_impl_.inputbroker_pin_a_)) + sizeof(_impl_.rotary1_enabled_));
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    ::memset(&_impl_.updown1_enabled_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.send_bell_) -
        reinterpret_cast<char*>(&_impl_.updown1_enabled_)) + sizeof(_impl_.send_bell_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModuleConfig_CannedMessageConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModuleConfig_CannedMessageConfig& this_ = static_cast<const ModuleConfig_CannedMessageConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModuleConfig_CannedMessageConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModuleConfig_CannedMessageConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.ModuleConfig.CannedMessageConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool rotary1_enabled = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_rotary1_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_rotary1_enabled(), target);
    }
  }

  // uint32 inputbroker_pin_a = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_inputbroker_pin_a() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_inputbroker_pin_a(), target);
    }
  }

  // uint32 inputbroker_pin_b = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_inputbroker_pin_b() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_inputbroker_pin_b(), target);
    }
  }

  // uint32 inputbroker_pin_press = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_inputbroker_pin_press() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          4, this_._internal_inputbroker_pin_press(), target);
    }
  }

  // .meshtastic.ModuleConfig.CannedMessageConfig.InputEventChar inputbroker_event_cw = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_inputbroker_event_cw() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_inputbroker_event_cw(), target);
    }
  }

  // .meshtastic.ModuleConfig.CannedMessageConfig.InputEventChar inputbroker_event_ccw = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_inputbroker_event_ccw() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          6, this_._internal_inputbroker_event_ccw(), target);
    }
  }

  // .meshtastic.ModuleConfig.CannedMessageConfig.InputEventChar inputbroker_event_press = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_inputbroker_event_press() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          7, this_._internal_inputbroker_event_press(), target);
    }
  }

  // bool updown1_enabled = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (this_._internal_updown1_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          8, this_._internal_updown1_enabled(), target);
    }
  }

  // bool enabled = 9 [deprecated = true];
  if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
    if (this_._internal_enabled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          9, this_._internal_enabled(), target);
    }
  }

  // string allow_input_source = 10 [deprecated = true];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_allow_input_source().empty()) {
      const ::std::string& _s = this_._internal_allow_input_source();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.ModuleConfig.CannedMessageConfig.allow_input_source");
      target = stream->WriteStringMaybeAliased(10, _s, target);
    }
  }

  // bool send_bell = 11;
  if ((this_._impl_._has_bits_[0] & 0x00000400u) != 0) {
    if (this_._internal_send_bell() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          11, this_._internal_send_bell(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.ModuleConfig.CannedMessageConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModuleConfig_CannedMessageConfig::ByteSizeLong(const MessageLite& base) {
  const ModuleConfig_CannedMessageConfig& this_ = static_cast<const ModuleConfig_CannedMessageConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModuleConfig_CannedMessageConfig::ByteSizeLong() const {
  const ModuleConfig_CannedMessageConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.ModuleConfig.CannedMessageConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string allow_input_source = 10 [deprecated = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_allow_input_source().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_allow_input_source());
      }
    }
    // uint32 inputbroker_pin_a = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_inputbroker_pin_a() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_inputbroker_pin_a());
      }
    }
    // uint32 inputbroker_pin_b = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_inputbroker_pin_b() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_inputbroker_pin_b());
      }
    }
    // uint32 inputbroker_pin_press = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_inputbroker_pin_press() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_inputbroker_pin_press());
      }
    }
    // .meshtastic.ModuleConfig.CannedMessageConfig.InputEventChar inputbroker_event_cw = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_inputbroker_event_cw() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_inputbroker_event_cw());
      }
    }
    // .meshtastic.ModuleConfig.CannedMessageConfig.InputEventChar inputbroker_event_ccw = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_inputbroker_event_ccw() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_inputbroker_event_ccw());
      }
    }
    // .meshtastic.ModuleConfig.CannedMessageConfig.InputEventChar inputbroker_event_press = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_inputbroker_event_press() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_inputbroker_event_press());
      }
    }
    // bool rotary1_enabled = 1;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_rotary1_enabled() != 0) {
        total_size += 2;
      }
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    // bool updown1_enabled = 8;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_updown1_enabled() != 0) {
        total_size += 2;
      }
    }
    // bool enabled = 9 [deprecated = true];
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_enabled() != 0) {
        total_size += 2;
      }
    }
    // bool send_bell = 11;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_send_bell() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ModuleConfig_CannedMessageConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleConfig_CannedMessageConfig*>(&to_msg);
  auto& from = static_cast<const ModuleConfig_CannedMessageConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.ModuleConfig.CannedMessageConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_allow_input_source().empty()) {
        _this->_internal_set_allow_input_source(from._internal_allow_input_source());
      } else {
        if (_this->_impl_.allow_input_source_.IsDefault()) {
          _this->_internal_set_allow_input_source("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_inputbroker_pin_a() != 0) {
        _this->_impl_.inputbroker_pin_a_ = from._impl_.inputbroker_pin_a_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_inputbroker_pin_b() != 0) {
        _this->_impl_.inputbroker_pin_b_ = from._impl_.inputbroker_pin_b_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_inputbroker_pin_press() != 0) {
        _this->_impl_.inputbroker_pin_press_ = from._impl_.inputbroker_pin_press_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_inputbroker_event_cw() != 0) {
        _this->_impl_.inputbroker_event_cw_ = from._impl_.inputbroker_event_cw_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_inputbroker_event_ccw() != 0) {
        _this->_impl_.inputbroker_event_ccw_ = from._impl_.inputbroker_event_ccw_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_inputbroker_event_press() != 0) {
        _this->_impl_.inputbroker_event_press_ = from._impl_.inputbroker_event_press_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_rotary1_enabled() != 0) {
        _this->_impl_.rotary1_enabled_ = from._impl_.rotary1_enabled_;
      }
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_updown1_enabled() != 0) {
        _this->_impl_.updown1_enabled_ = from._impl_.updown1_enabled_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_enabled() != 0) {
        _this->_impl_.enabled_ = from._impl_.enabled_;
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_send_bell() != 0) {
        _this->_impl_.send_bell_ = from._impl_.send_bell_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleConfig_CannedMessageConfig::CopyFrom(const ModuleConfig_CannedMessageConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.ModuleConfig.CannedMessageConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleConfig_CannedMessageConfig::InternalSwap(ModuleConfig_CannedMessageConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.allow_input_source_, &other->_impl_.allow_input_source_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.send_bell_)
      + sizeof(ModuleConfig_CannedMessageConfig::_impl_.send_bell_)
      - PROTOBUF_FIELD_OFFSET(ModuleConfig_CannedMessageConfig, _impl_.inputbroker_pin_a_)>(
          reinterpret_cast<char*>(&_impl_.inputbroker_pin_a_),
          reinterpret_cast<char*>(&other->_impl_.inputbroker_pin_a_));
}

::google::protobuf::Metadata ModuleConfig_CannedMessageConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModuleConfig_AmbientLightingConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ModuleConfig_AmbientLightingConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModuleConfig_AmbientLightingConfig, _impl_._has_bits_);
};

ModuleConfig_AmbientLightingConfig::ModuleConfig_AmbientLightingConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_AmbientLightingConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.ModuleConfig.AmbientLightingConfig)
}
ModuleConfig_AmbientLightingConfig::ModuleConfig_AmbientLightingConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_AmbientLightingConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_AmbientLightingConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ModuleConfig_AmbientLightingConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ModuleConfig_AmbientLightingConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, led_state_),
           0,
           offsetof(Impl_, blue_) -
               offsetof(Impl_, led_state_) +
               sizeof(Impl_::blue_));
}
ModuleConfig_AmbientLightingConfig::~ModuleConfig_AmbientLightingConfig() {
  // @@protoc_insertion_point(destructor:meshtastic.ModuleConfig.AmbientLightingConfig)
  SharedDtor(*this);
}
inline void ModuleConfig_AmbientLightingConfig::SharedDtor(MessageLite& self) {
  ModuleConfig_AmbientLightingConfig& this_ = static_cast<ModuleConfig_AmbientLightingConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ModuleConfig_AmbientLightingConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModuleConfig_AmbientLightingConfig(arena);
}
constexpr auto ModuleConfig_AmbientLightingConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ModuleConfig_AmbientLightingConfig),
                                            alignof(ModuleConfig_AmbientLightingConfig));
}
constexpr auto ModuleConfig_AmbientLightingConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModuleConfig_AmbientLightingConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModuleConfig_AmbientLightingConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModuleConfig_AmbientLightingConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModuleConfig_AmbientLightingConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModuleConfig_AmbientLightingConfig>(), &ModuleConfig_AmbientLightingConfig::ByteSizeLong,
              &ModuleConfig_AmbientLightingConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModuleConfig_AmbientLightingConfig, _impl_._cached_size_),
          false,
      },
      &ModuleConfig_AmbientLightingConfig::kDescriptorMethods,
      &descriptor_table_meshtastic_2fmodule_5fconfig_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ModuleConfig_AmbientLightingConfig_class_data_ =
        ModuleConfig_AmbientLightingConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ModuleConfig_AmbientLightingConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModuleConfig_AmbientLightingConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModuleConfig_AmbientLightingConfig_class_data_.tc_table);
  return ModuleConfig_AmbientLightingConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2>
ModuleConfig_AmbientLightingConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModuleConfig_AmbientLightingConfig, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ModuleConfig_AmbientLightingConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_AmbientLightingConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool led_state = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModuleConfig_AmbientLightingConfig, _impl_.led_state_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_AmbientLightingConfig, _impl_.led_state_)}},
    // uint32 current = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_AmbientLightingConfig, _impl_.current_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_AmbientLightingConfig, _impl_.current_)}},
    // uint32 red = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_AmbientLightingConfig, _impl_.red_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_AmbientLightingConfig, _impl_.red_)}},
    // uint32 green = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_AmbientLightingConfig, _impl_.green_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_AmbientLightingConfig, _impl_.green_)}},
    // uint32 blue = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModuleConfig_AmbientLightingConfig, _impl_.blue_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig_AmbientLightingConfig, _impl_.blue_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool led_state = 1;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_AmbientLightingConfig, _impl_.led_state_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // uint32 current = 2;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_AmbientLightingConfig, _impl_.current_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 red = 3;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_AmbientLightingConfig, _impl_.red_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 green = 4;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_AmbientLightingConfig, _impl_.green_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 blue = 5;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig_AmbientLightingConfig, _impl_.blue_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ModuleConfig_AmbientLightingConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.ModuleConfig.AmbientLightingConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    ::memset(&_impl_.led_state_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.blue_) -
        reinterpret_cast<char*>(&_impl_.led_state_)) + sizeof(_impl_.blue_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModuleConfig_AmbientLightingConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModuleConfig_AmbientLightingConfig& this_ = static_cast<const ModuleConfig_AmbientLightingConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModuleConfig_AmbientLightingConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModuleConfig_AmbientLightingConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.ModuleConfig.AmbientLightingConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool led_state = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_led_state() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_led_state(), target);
    }
  }

  // uint32 current = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_current() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_current(), target);
    }
  }

  // uint32 red = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_red() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_red(), target);
    }
  }

  // uint32 green = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_green() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          4, this_._internal_green(), target);
    }
  }

  // uint32 blue = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_blue() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          5, this_._internal_blue(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.ModuleConfig.AmbientLightingConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModuleConfig_AmbientLightingConfig::ByteSizeLong(const MessageLite& base) {
  const ModuleConfig_AmbientLightingConfig& this_ = static_cast<const ModuleConfig_AmbientLightingConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModuleConfig_AmbientLightingConfig::ByteSizeLong() const {
  const ModuleConfig_AmbientLightingConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.ModuleConfig.AmbientLightingConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // bool led_state = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_led_state() != 0) {
        total_size += 2;
      }
    }
    // uint32 current = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_current() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_current());
      }
    }
    // uint32 red = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_red() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_red());
      }
    }
    // uint32 green = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_green() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_green());
      }
    }
    // uint32 blue = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_blue() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_blue());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ModuleConfig_AmbientLightingConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleConfig_AmbientLightingConfig*>(&to_msg);
  auto& from = static_cast<const ModuleConfig_AmbientLightingConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.ModuleConfig.AmbientLightingConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_led_state() != 0) {
        _this->_impl_.led_state_ = from._impl_.led_state_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_current() != 0) {
        _this->_impl_.current_ = from._impl_.current_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_red() != 0) {
        _this->_impl_.red_ = from._impl_.red_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_green() != 0) {
        _this->_impl_.green_ = from._impl_.green_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_blue() != 0) {
        _this->_impl_.blue_ = from._impl_.blue_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleConfig_AmbientLightingConfig::CopyFrom(const ModuleConfig_AmbientLightingConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.ModuleConfig.AmbientLightingConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleConfig_AmbientLightingConfig::InternalSwap(ModuleConfig_AmbientLightingConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleConfig_AmbientLightingConfig, _impl_.blue_)
      + sizeof(ModuleConfig_AmbientLightingConfig::_impl_.blue_)
      - PROTOBUF_FIELD_OFFSET(ModuleConfig_AmbientLightingConfig, _impl_.led_state_)>(
          reinterpret_cast<char*>(&_impl_.led_state_),
          reinterpret_cast<char*>(&other->_impl_.led_state_));
}

::google::protobuf::Metadata ModuleConfig_AmbientLightingConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModuleConfig::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::meshtastic::ModuleConfig, _impl_._oneof_case_);
};

void ModuleConfig::set_allocated_mqtt(::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NULLABLE mqtt) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (mqtt) {
    ::google::protobuf::Arena* submessage_arena = mqtt->GetArena();
    if (message_arena != submessage_arena) {
      mqtt = ::google::protobuf::internal::GetOwnedMessage(message_arena, mqtt, submessage_arena);
    }
    set_has_mqtt();
    _impl_.payload_variant_.mqtt_ = mqtt;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.mqtt)
}
void ModuleConfig::set_allocated_serial(::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NULLABLE serial) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (serial) {
    ::google::protobuf::Arena* submessage_arena = serial->GetArena();
    if (message_arena != submessage_arena) {
      serial = ::google::protobuf::internal::GetOwnedMessage(message_arena, serial, submessage_arena);
    }
    set_has_serial();
    _impl_.payload_variant_.serial_ = serial;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.serial)
}
void ModuleConfig::set_allocated_external_notification(::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NULLABLE external_notification) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (external_notification) {
    ::google::protobuf::Arena* submessage_arena = external_notification->GetArena();
    if (message_arena != submessage_arena) {
      external_notification = ::google::protobuf::internal::GetOwnedMessage(message_arena, external_notification, submessage_arena);
    }
    set_has_external_notification();
    _impl_.payload_variant_.external_notification_ = external_notification;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.external_notification)
}
void ModuleConfig::set_allocated_store_forward(::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NULLABLE store_forward) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (store_forward) {
    ::google::protobuf::Arena* submessage_arena = store_forward->GetArena();
    if (message_arena != submessage_arena) {
      store_forward = ::google::protobuf::internal::GetOwnedMessage(message_arena, store_forward, submessage_arena);
    }
    set_has_store_forward();
    _impl_.payload_variant_.store_forward_ = store_forward;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.store_forward)
}
void ModuleConfig::set_allocated_range_test(::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NULLABLE range_test) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (range_test) {
    ::google::protobuf::Arena* submessage_arena = range_test->GetArena();
    if (message_arena != submessage_arena) {
      range_test = ::google::protobuf::internal::GetOwnedMessage(message_arena, range_test, submessage_arena);
    }
    set_has_range_test();
    _impl_.payload_variant_.range_test_ = range_test;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.range_test)
}
void ModuleConfig::set_allocated_telemetry(::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NULLABLE telemetry) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (telemetry) {
    ::google::protobuf::Arena* submessage_arena = telemetry->GetArena();
    if (message_arena != submessage_arena) {
      telemetry = ::google::protobuf::internal::GetOwnedMessage(message_arena, telemetry, submessage_arena);
    }
    set_has_telemetry();
    _impl_.payload_variant_.telemetry_ = telemetry;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.telemetry)
}
void ModuleConfig::set_allocated_canned_message(::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NULLABLE canned_message) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (canned_message) {
    ::google::protobuf::Arena* submessage_arena = canned_message->GetArena();
    if (message_arena != submessage_arena) {
      canned_message = ::google::protobuf::internal::GetOwnedMessage(message_arena, canned_message, submessage_arena);
    }
    set_has_canned_message();
    _impl_.payload_variant_.canned_message_ = canned_message;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.canned_message)
}
void ModuleConfig::set_allocated_audio(::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NULLABLE audio) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (audio) {
    ::google::protobuf::Arena* submessage_arena = audio->GetArena();
    if (message_arena != submessage_arena) {
      audio = ::google::protobuf::internal::GetOwnedMessage(message_arena, audio, submessage_arena);
    }
    set_has_audio();
    _impl_.payload_variant_.audio_ = audio;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.audio)
}
void ModuleConfig::set_allocated_remote_hardware(::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NULLABLE remote_hardware) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (remote_hardware) {
    ::google::protobuf::Arena* submessage_arena = remote_hardware->GetArena();
    if (message_arena != submessage_arena) {
      remote_hardware = ::google::protobuf::internal::GetOwnedMessage(message_arena, remote_hardware, submessage_arena);
    }
    set_has_remote_hardware();
    _impl_.payload_variant_.remote_hardware_ = remote_hardware;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.remote_hardware)
}
void ModuleConfig::set_allocated_neighbor_info(::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NULLABLE neighbor_info) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (neighbor_info) {
    ::google::protobuf::Arena* submessage_arena = neighbor_info->GetArena();
    if (message_arena != submessage_arena) {
      neighbor_info = ::google::protobuf::internal::GetOwnedMessage(message_arena, neighbor_info, submessage_arena);
    }
    set_has_neighbor_info();
    _impl_.payload_variant_.neighbor_info_ = neighbor_info;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.neighbor_info)
}
void ModuleConfig::set_allocated_ambient_lighting(::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NULLABLE ambient_lighting) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (ambient_lighting) {
    ::google::protobuf::Arena* submessage_arena = ambient_lighting->GetArena();
    if (message_arena != submessage_arena) {
      ambient_lighting = ::google::protobuf::internal::GetOwnedMessage(message_arena, ambient_lighting, submessage_arena);
    }
    set_has_ambient_lighting();
    _impl_.payload_variant_.ambient_lighting_ = ambient_lighting;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.ambient_lighting)
}
void ModuleConfig::set_allocated_detection_sensor(::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NULLABLE detection_sensor) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (detection_sensor) {
    ::google::protobuf::Arena* submessage_arena = detection_sensor->GetArena();
    if (message_arena != submessage_arena) {
      detection_sensor = ::google::protobuf::internal::GetOwnedMessage(message_arena, detection_sensor, submessage_arena);
    }
    set_has_detection_sensor();
    _impl_.payload_variant_.detection_sensor_ = detection_sensor;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.detection_sensor)
}
void ModuleConfig::set_allocated_paxcounter(::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NULLABLE paxcounter) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (paxcounter) {
    ::google::protobuf::Arena* submessage_arena = paxcounter->GetArena();
    if (message_arena != submessage_arena) {
      paxcounter = ::google::protobuf::internal::GetOwnedMessage(message_arena, paxcounter, submessage_arena);
    }
    set_has_paxcounter();
    _impl_.payload_variant_.paxcounter_ = paxcounter;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.paxcounter)
}
ModuleConfig::ModuleConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.ModuleConfig)
}
PROTOBUF_NDEBUG_INLINE ModuleConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::meshtastic::ModuleConfig& from_msg)
      : payload_variant_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ModuleConfig::ModuleConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ModuleConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModuleConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (payload_variant_case()) {
    case PAYLOAD_VARIANT_NOT_SET:
      break;
      case kMqtt:
        _impl_.payload_variant_.mqtt_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.mqtt_);
        break;
      case kSerial:
        _impl_.payload_variant_.serial_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.serial_);
        break;
      case kExternalNotification:
        _impl_.payload_variant_.external_notification_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.external_notification_);
        break;
      case kStoreForward:
        _impl_.payload_variant_.store_forward_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.store_forward_);
        break;
      case kRangeTest:
        _impl_.payload_variant_.range_test_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.range_test_);
        break;
      case kTelemetry:
        _impl_.payload_variant_.telemetry_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.telemetry_);
        break;
      case kCannedMessage:
        _impl_.payload_variant_.canned_message_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.canned_message_);
        break;
      case kAudio:
        _impl_.payload_variant_.audio_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.audio_);
        break;
      case kRemoteHardware:
        _impl_.payload_variant_.remote_hardware_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.remote_hardware_);
        break;
      case kNeighborInfo:
        _impl_.payload_variant_.neighbor_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.neighbor_info_);
        break;
      case kAmbientLighting:
        _impl_.payload_variant_.ambient_lighting_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.ambient_lighting_);
        break;
      case kDetectionSensor:
        _impl_.payload_variant_.detection_sensor_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.detection_sensor_);
        break;
      case kPaxcounter:
        _impl_.payload_variant_.paxcounter_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.paxcounter_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:meshtastic.ModuleConfig)
}
PROTOBUF_NDEBUG_INLINE ModuleConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : payload_variant_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ModuleConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ModuleConfig::~ModuleConfig() {
  // @@protoc_insertion_point(destructor:meshtastic.ModuleConfig)
  SharedDtor(*this);
}
inline void ModuleConfig::SharedDtor(MessageLite& self) {
  ModuleConfig& this_ = static_cast<ModuleConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_payload_variant()) {
    this_.clear_payload_variant();
  }
  this_._impl_.~Impl_();
}

void ModuleConfig::clear_payload_variant() {
// @@protoc_insertion_point(one_of_clear_start:meshtastic.ModuleConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_variant_case()) {
    case kMqtt: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.mqtt_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.mqtt_);
      }
      break;
    }
    case kSerial: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.serial_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.serial_);
      }
      break;
    }
    case kExternalNotification: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.external_notification_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.external_notification_);
      }
      break;
    }
    case kStoreForward: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.store_forward_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.store_forward_);
      }
      break;
    }
    case kRangeTest: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.range_test_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.range_test_);
      }
      break;
    }
    case kTelemetry: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.telemetry_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.telemetry_);
      }
      break;
    }
    case kCannedMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.canned_message_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.canned_message_);
      }
      break;
    }
    case kAudio: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.audio_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.audio_);
      }
      break;
    }
    case kRemoteHardware: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.remote_hardware_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.remote_hardware_);
      }
      break;
    }
    case kNeighborInfo: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.neighbor_info_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.neighbor_info_);
      }
      break;
    }
    case kAmbientLighting: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.ambient_lighting_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.ambient_lighting_);
      }
      break;
    }
    case kDetectionSensor: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.detection_sensor_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.detection_sensor_);
      }
      break;
    }
    case kPaxcounter: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.paxcounter_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.paxcounter_);
      }
      break;
    }
    case PAYLOAD_VARIANT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_VARIANT_NOT_SET;
}


inline void* PROTOBUF_NONNULL ModuleConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModuleConfig(arena);
}
constexpr auto ModuleConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ModuleConfig),
                                            alignof(ModuleConfig));
}
constexpr auto ModuleConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModuleConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModuleConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModuleConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModuleConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModuleConfig>(), &ModuleConfig::ByteSizeLong,
              &ModuleConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_._cached_size_),
          false,
      },
      &ModuleConfig::kDescriptorMethods,
      &descriptor_table_meshtastic_2fmodule_5fconfig_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ModuleConfig_class_data_ =
        ModuleConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ModuleConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModuleConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModuleConfig_class_data_.tc_table);
  return ModuleConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 13, 13, 0, 2>
ModuleConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    13, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    13,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ModuleConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .meshtastic.ModuleConfig.MQTTConfig mqtt = 1;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_.payload_variant_.mqtt_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.SerialConfig serial = 2;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_.payload_variant_.serial_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.ExternalNotificationConfig external_notification = 3;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_.payload_variant_.external_notification_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.StoreForwardConfig store_forward = 4;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_.payload_variant_.store_forward_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.RangeTestConfig range_test = 5;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_.payload_variant_.range_test_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.TelemetryConfig telemetry = 6;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_.payload_variant_.telemetry_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.CannedMessageConfig canned_message = 7;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_.payload_variant_.canned_message_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.AudioConfig audio = 8;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_.payload_variant_.audio_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.RemoteHardwareConfig remote_hardware = 9;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_.payload_variant_.remote_hardware_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.NeighborInfoConfig neighbor_info = 10;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_.payload_variant_.neighbor_info_), _Internal::kOneofCaseOffset + 0, 9,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.AmbientLightingConfig ambient_lighting = 11;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_.payload_variant_.ambient_lighting_), _Internal::kOneofCaseOffset + 0, 10,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.DetectionSensorConfig detection_sensor = 12;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_.payload_variant_.detection_sensor_), _Internal::kOneofCaseOffset + 0, 11,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.PaxcounterConfig paxcounter = 13;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_.payload_variant_.paxcounter_), _Internal::kOneofCaseOffset + 0, 12,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_MQTTConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_SerialConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_ExternalNotificationConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_StoreForwardConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_RangeTestConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_TelemetryConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_CannedMessageConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_AudioConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_RemoteHardwareConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_NeighborInfoConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_AmbientLightingConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_DetectionSensorConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_PaxcounterConfig>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ModuleConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.ModuleConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload_variant();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModuleConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModuleConfig& this_ = static_cast<const ModuleConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModuleConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModuleConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.ModuleConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.payload_variant_case()) {
    case kMqtt: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.payload_variant_.mqtt_, this_._impl_.payload_variant_.mqtt_->GetCachedSize(), target,
          stream);
      break;
    }
    case kSerial: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.payload_variant_.serial_, this_._impl_.payload_variant_.serial_->GetCachedSize(), target,
          stream);
      break;
    }
    case kExternalNotification: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.payload_variant_.external_notification_, this_._impl_.payload_variant_.external_notification_->GetCachedSize(), target,
          stream);
      break;
    }
    case kStoreForward: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.payload_variant_.store_forward_, this_._impl_.payload_variant_.store_forward_->GetCachedSize(), target,
          stream);
      break;
    }
    case kRangeTest: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.payload_variant_.range_test_, this_._impl_.payload_variant_.range_test_->GetCachedSize(), target,
          stream);
      break;
    }
    case kTelemetry: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *this_._impl_.payload_variant_.telemetry_, this_._impl_.payload_variant_.telemetry_->GetCachedSize(), target,
          stream);
      break;
    }
    case kCannedMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *this_._impl_.payload_variant_.canned_message_, this_._impl_.payload_variant_.canned_message_->GetCachedSize(), target,
          stream);
      break;
    }
    case kAudio: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, *this_._impl_.payload_variant_.audio_, this_._impl_.payload_variant_.audio_->GetCachedSize(), target,
          stream);
      break;
    }
    case kRemoteHardware: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          9, *this_._impl_.payload_variant_.remote_hardware_, this_._impl_.payload_variant_.remote_hardware_->GetCachedSize(), target,
          stream);
      break;
    }
    case kNeighborInfo: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          10, *this_._impl_.payload_variant_.neighbor_info_, this_._impl_.payload_variant_.neighbor_info_->GetCachedSize(), target,
          stream);
      break;
    }
    case kAmbientLighting: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          11, *this_._impl_.payload_variant_.ambient_lighting_, this_._impl_.payload_variant_.ambient_lighting_->GetCachedSize(), target,
          stream);
      break;
    }
    case kDetectionSensor: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          12, *this_._impl_.payload_variant_.detection_sensor_, this_._impl_.payload_variant_.detection_sensor_->GetCachedSize(), target,
          stream);
      break;
    }
    case kPaxcounter: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          13, *this_._impl_.payload_variant_.paxcounter_, this_._impl_.payload_variant_.paxcounter_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.ModuleConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModuleConfig::ByteSizeLong(const MessageLite& base) {
  const ModuleConfig& this_ = static_cast<const ModuleConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModuleConfig::ByteSizeLong() const {
  const ModuleConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.ModuleConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.payload_variant_case()) {
    // .meshtastic.ModuleConfig.MQTTConfig mqtt = 1;
    case kMqtt: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.mqtt_);
      break;
    }
    // .meshtastic.ModuleConfig.SerialConfig serial = 2;
    case kSerial: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.serial_);
      break;
    }
    // .meshtastic.ModuleConfig.ExternalNotificationConfig external_notification = 3;
    case kExternalNotification: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.external_notification_);
      break;
    }
    // .meshtastic.ModuleConfig.StoreForwardConfig store_forward = 4;
    case kStoreForward: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.store_forward_);
      break;
    }
    // .meshtastic.ModuleConfig.RangeTestConfig range_test = 5;
    case kRangeTest: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.range_test_);
      break;
    }
    // .meshtastic.ModuleConfig.TelemetryConfig telemetry = 6;
    case kTelemetry: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.telemetry_);
      break;
    }
    // .meshtastic.ModuleConfig.CannedMessageConfig canned_message = 7;
    case kCannedMessage: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.canned_message_);
      break;
    }
    // .meshtastic.ModuleConfig.AudioConfig audio = 8;
    case kAudio: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.audio_);
      break;
    }
    // .meshtastic.ModuleConfig.RemoteHardwareConfig remote_hardware = 9;
    case kRemoteHardware: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.remote_hardware_);
      break;
    }
    // .meshtastic.ModuleConfig.NeighborInfoConfig neighbor_info = 10;
    case kNeighborInfo: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.neighbor_info_);
      break;
    }
    // .meshtastic.ModuleConfig.AmbientLightingConfig ambient_lighting = 11;
    case kAmbientLighting: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.ambient_lighting_);
      break;
    }
    // .meshtastic.ModuleConfig.DetectionSensorConfig detection_sensor = 12;
    case kDetectionSensor: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.detection_sensor_);
      break;
    }
    // .meshtastic.ModuleConfig.PaxcounterConfig paxcounter = 13;
    case kPaxcounter: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.paxcounter_);
      break;
    }
    case PAYLOAD_VARIANT_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ModuleConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleConfig*>(&to_msg);
  auto& from = static_cast<const ModuleConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.ModuleConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload_variant();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kMqtt: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.mqtt_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.mqtt_);
        } else {
          _this->_impl_.payload_variant_.mqtt_->MergeFrom(*from._impl_.payload_variant_.mqtt_);
        }
        break;
      }
      case kSerial: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.serial_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.serial_);
        } else {
          _this->_impl_.payload_variant_.serial_->MergeFrom(*from._impl_.payload_variant_.serial_);
        }
        break;
      }
      case kExternalNotification: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.external_notification_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.external_notification_);
        } else {
          _this->_impl_.payload_variant_.external_notification_->MergeFrom(*from._impl_.payload_variant_.external_notification_);
        }
        break;
      }
      case kStoreForward: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.store_forward_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.store_forward_);
        } else {
          _this->_impl_.payload_variant_.store_forward_->MergeFrom(*from._impl_.payload_variant_.store_forward_);
        }
        break;
      }
      case kRangeTest: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.range_test_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.range_test_);
        } else {
          _this->_impl_.payload_variant_.range_test_->MergeFrom(*from._impl_.payload_variant_.range_test_);
        }
        break;
      }
      case kTelemetry: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.telemetry_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.telemetry_);
        } else {
          _this->_impl_.payload_variant_.telemetry_->MergeFrom(*from._impl_.payload_variant_.telemetry_);
        }
        break;
      }
      case kCannedMessage: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.canned_message_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.canned_message_);
        } else {
          _this->_impl_.payload_variant_.canned_message_->MergeFrom(*from._impl_.payload_variant_.canned_message_);
        }
        break;
      }
      case kAudio: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.audio_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.audio_);
        } else {
          _this->_impl_.payload_variant_.audio_->MergeFrom(*from._impl_.payload_variant_.audio_);
        }
        break;
      }
      case kRemoteHardware: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.remote_hardware_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.remote_hardware_);
        } else {
          _this->_impl_.payload_variant_.remote_hardware_->MergeFrom(*from._impl_.payload_variant_.remote_hardware_);
        }
        break;
      }
      case kNeighborInfo: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.neighbor_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.neighbor_info_);
        } else {
          _this->_impl_.payload_variant_.neighbor_info_->MergeFrom(*from._impl_.payload_variant_.neighbor_info_);
        }
        break;
      }
      case kAmbientLighting: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.ambient_lighting_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.ambient_lighting_);
        } else {
          _this->_impl_.payload_variant_.ambient_lighting_->MergeFrom(*from._impl_.payload_variant_.ambient_lighting_);
        }
        break;
      }
      case kDetectionSensor: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.detection_sensor_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.detection_sensor_);
        } else {
          _this->_impl_.payload_variant_.detection_sensor_->MergeFrom(*from._impl_.payload_variant_.detection_sensor_);
        }
        break;
      }
      case kPaxcounter: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.paxcounter_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.paxcounter_);
        } else {
          _this->_impl_.payload_variant_.paxcounter_->MergeFrom(*from._impl_.payload_variant_.paxcounter_);
        }
        break;
      }
      case PAYLOAD_VARIANT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleConfig::CopyFrom(const ModuleConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.ModuleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleConfig::InternalSwap(ModuleConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_variant_, other->_impl_.payload_variant_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ModuleConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RemoteHardwarePin::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RemoteHardwarePin>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RemoteHardwarePin, _impl_._has_bits_);
};

RemoteHardwarePin::RemoteHardwarePin(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RemoteHardwarePin_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.RemoteHardwarePin)
}
PROTOBUF_NDEBUG_INLINE RemoteHardwarePin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::meshtastic::RemoteHardwarePin& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

RemoteHardwarePin::RemoteHardwarePin(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RemoteHardwarePin& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RemoteHardwarePin_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RemoteHardwarePin* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gpio_pin_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gpio_pin_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, gpio_pin_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:meshtastic.RemoteHardwarePin)
}
PROTOBUF_NDEBUG_INLINE RemoteHardwarePin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena) {}

inline void RemoteHardwarePin::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gpio_pin_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, gpio_pin_) +
               sizeof(Impl_::type_));
}
RemoteHardwarePin::~RemoteHardwarePin() {
  // @@protoc_insertion_point(destructor:meshtastic.RemoteHardwarePin)
  SharedDtor(*this);
}
inline void RemoteHardwarePin::SharedDtor(MessageLite& self) {
  RemoteHardwarePin& this_ = static_cast<RemoteHardwarePin&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RemoteHardwarePin::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RemoteHardwarePin(arena);
}
constexpr auto RemoteHardwarePin::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RemoteHardwarePin),
                                            alignof(RemoteHardwarePin));
}
constexpr auto RemoteHardwarePin::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RemoteHardwarePin_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RemoteHardwarePin::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RemoteHardwarePin>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RemoteHardwarePin::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RemoteHardwarePin>(), &RemoteHardwarePin::ByteSizeLong,
              &RemoteHardwarePin::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RemoteHardwarePin, _impl_._cached_size_),
          false,
      },
      &RemoteHardwarePin::kDescriptorMethods,
      &descriptor_table_meshtastic_2fmodule_5fconfig_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RemoteHardwarePin_class_data_ =
        RemoteHardwarePin::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RemoteHardwarePin::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RemoteHardwarePin_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RemoteHardwarePin_class_data_.tc_table);
  return RemoteHardwarePin_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 41, 2>
RemoteHardwarePin::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RemoteHardwarePin, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RemoteHardwarePin_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::RemoteHardwarePin>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 gpio_pin = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RemoteHardwarePin, _impl_.gpio_pin_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(RemoteHardwarePin, _impl_.gpio_pin_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RemoteHardwarePin, _impl_.name_)}},
    // .meshtastic.RemoteHardwarePinType type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RemoteHardwarePin, _impl_.type_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(RemoteHardwarePin, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 gpio_pin = 1;
    {PROTOBUF_FIELD_OFFSET(RemoteHardwarePin, _impl_.gpio_pin_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(RemoteHardwarePin, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .meshtastic.RemoteHardwarePinType type = 3;
    {PROTOBUF_FIELD_OFFSET(RemoteHardwarePin, _impl_.type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\34\0\4\0\0\0\0\0"
    "meshtastic.RemoteHardwarePin"
    "name"
  }},
};
PROTOBUF_NOINLINE void RemoteHardwarePin::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.RemoteHardwarePin)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.gpio_pin_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.type_) -
        reinterpret_cast<char*>(&_impl_.gpio_pin_)) + sizeof(_impl_.type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RemoteHardwarePin::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RemoteHardwarePin& this_ = static_cast<const RemoteHardwarePin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RemoteHardwarePin::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RemoteHardwarePin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.RemoteHardwarePin)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 gpio_pin = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_gpio_pin() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_gpio_pin(), target);
    }
  }

  // string name = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.RemoteHardwarePin.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // .meshtastic.RemoteHardwarePinType type = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_type(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.RemoteHardwarePin)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RemoteHardwarePin::ByteSizeLong(const MessageLite& base) {
  const RemoteHardwarePin& this_ = static_cast<const RemoteHardwarePin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RemoteHardwarePin::ByteSizeLong() const {
  const RemoteHardwarePin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.RemoteHardwarePin)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string name = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // uint32 gpio_pin = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_gpio_pin() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_gpio_pin());
      }
    }
    // .meshtastic.RemoteHardwarePinType type = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RemoteHardwarePin::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RemoteHardwarePin*>(&to_msg);
  auto& from = static_cast<const RemoteHardwarePin&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.RemoteHardwarePin)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_gpio_pin() != 0) {
        _this->_impl_.gpio_pin_ = from._impl_.gpio_pin_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoteHardwarePin::CopyFrom(const RemoteHardwarePin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.RemoteHardwarePin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RemoteHardwarePin::InternalSwap(RemoteHardwarePin* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RemoteHardwarePin, _impl_.type_)
      + sizeof(RemoteHardwarePin::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(RemoteHardwarePin, _impl_.gpio_pin_)>(
          reinterpret_cast<char*>(&_impl_.gpio_pin_),
          reinterpret_cast<char*>(&other->_impl_.gpio_pin_));
}

::google::protobuf::Metadata RemoteHardwarePin::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace meshtastic
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_meshtastic_2fmodule_5fconfig_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
