// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: meshtastic/atak.proto
// Protobuf C++ Version: 6.31.1

#include "meshtastic/atak.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace meshtastic {

inline constexpr Status::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        battery_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Status::Status(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Status_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusDefaultTypeInternal() {}
  union {
    Status _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusDefaultTypeInternal _Status_default_instance_;

inline constexpr PLI::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        latitude_i_{0},
        longitude_i_{0},
        altitude_{0},
        speed_{0u},
        course_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR PLI::PLI(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PLI_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PLIDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PLIDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PLIDefaultTypeInternal() {}
  union {
    PLI _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PLIDefaultTypeInternal _PLI_default_instance_;

inline constexpr Group::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        role_{static_cast< ::meshtastic::MemberRole >(0)},
        team_{static_cast< ::meshtastic::Team >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Group::Group(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Group_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupDefaultTypeInternal() {}
  union {
    Group _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupDefaultTypeInternal _Group_default_instance_;

inline constexpr GeoChat::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        to_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        to_callsign_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GeoChat::GeoChat(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GeoChat_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GeoChatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeoChatDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeoChatDefaultTypeInternal() {}
  union {
    GeoChat _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeoChatDefaultTypeInternal _GeoChat_default_instance_;

inline constexpr Contact::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        callsign_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_callsign_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Contact::Contact(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Contact_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ContactDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContactDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContactDefaultTypeInternal() {}
  union {
    Contact _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContactDefaultTypeInternal _Contact_default_instance_;

inline constexpr TAKPacket::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        contact_{nullptr},
        group_{nullptr},
        status_{nullptr},
        is_compressed_{false},
        payload_variant_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR TAKPacket::TAKPacket(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TAKPacket_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TAKPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TAKPacketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TAKPacketDefaultTypeInternal() {}
  union {
    TAKPacket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TAKPacketDefaultTypeInternal _TAKPacket_default_instance_;
}  // namespace meshtastic
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_meshtastic_2fatak_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_meshtastic_2fatak_2eproto = nullptr;
const ::uint32_t
    TableStruct_meshtastic_2fatak_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::TAKPacket, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::TAKPacket, _impl_._oneof_case_[0]),
        12, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::TAKPacket, _impl_.is_compressed_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::TAKPacket, _impl_.contact_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::TAKPacket, _impl_.group_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::TAKPacket, _impl_.status_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::meshtastic::TAKPacket, _impl_.payload_variant_),
        3,
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::GeoChat, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::GeoChat, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::GeoChat, _impl_.to_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::GeoChat, _impl_.to_callsign_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::Group, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::Group, _impl_.role_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::Group, _impl_.team_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::Status, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::Status, _impl_.battery_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::Contact, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::Contact, _impl_.callsign_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::Contact, _impl_.device_callsign_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::PLI, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::PLI, _impl_.latitude_i_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::PLI, _impl_.longitude_i_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::PLI, _impl_.altitude_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::PLI, _impl_.speed_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::PLI, _impl_.course_),
        0,
        1,
        2,
        3,
        4,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::meshtastic::TAKPacket)},
        {19, sizeof(::meshtastic::GeoChat)},
        {28, sizeof(::meshtastic::Group)},
        {35, sizeof(::meshtastic::Status)},
        {40, sizeof(::meshtastic::Contact)},
        {47, sizeof(::meshtastic::PLI)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::meshtastic::_TAKPacket_default_instance_._instance,
    &::meshtastic::_GeoChat_default_instance_._instance,
    &::meshtastic::_Group_default_instance_._instance,
    &::meshtastic::_Status_default_instance_._instance,
    &::meshtastic::_Contact_default_instance_._instance,
    &::meshtastic::_PLI_default_instance_._instance,
};
const char descriptor_table_protodef_meshtastic_2fatak_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025meshtastic/atak.proto\022\nmeshtastic\"\370\001\n\t"
    "TAKPacket\022\025\n\ris_compressed\030\001 \001(\010\022$\n\007cont"
    "act\030\002 \001(\0132\023.meshtastic.Contact\022 \n\005group\030"
    "\003 \001(\0132\021.meshtastic.Group\022\"\n\006status\030\004 \001(\013"
    "2\022.meshtastic.Status\022\036\n\003pli\030\005 \001(\0132\017.mesh"
    "tastic.PLIH\000\022#\n\004chat\030\006 \001(\0132\023.meshtastic."
    "GeoChatH\000\022\020\n\006detail\030\007 \001(\014H\000B\021\n\017payload_v"
    "ariant\"\\\n\007GeoChat\022\017\n\007message\030\001 \001(\t\022\017\n\002to"
    "\030\002 \001(\tH\000\210\001\001\022\030\n\013to_callsign\030\003 \001(\tH\001\210\001\001B\005\n"
    "\003_toB\016\n\014_to_callsign\"M\n\005Group\022$\n\004role\030\001 "
    "\001(\0162\026.meshtastic.MemberRole\022\036\n\004team\030\002 \001("
    "\0162\020.meshtastic.Team\"\031\n\006Status\022\017\n\007battery"
    "\030\001 \001(\r\"4\n\007Contact\022\020\n\010callsign\030\001 \001(\t\022\027\n\017d"
    "evice_callsign\030\002 \001(\t\"_\n\003PLI\022\022\n\nlatitude_"
    "i\030\001 \001(\017\022\023\n\013longitude_i\030\002 \001(\017\022\020\n\010altitude"
    "\030\003 \001(\005\022\r\n\005speed\030\004 \001(\r\022\016\n\006course\030\005 \001(\r*\300\001"
    "\n\004Team\022\024\n\020Unspecifed_Color\020\000\022\t\n\005White\020\001\022"
    "\n\n\006Yellow\020\002\022\n\n\006Orange\020\003\022\013\n\007Magenta\020\004\022\007\n\003"
    "Red\020\005\022\n\n\006Maroon\020\006\022\n\n\006Purple\020\007\022\r\n\tDark_Bl"
    "ue\020\010\022\010\n\004Blue\020\t\022\010\n\004Cyan\020\n\022\010\n\004Teal\020\013\022\t\n\005Gr"
    "een\020\014\022\016\n\nDark_Green\020\r\022\t\n\005Brown\020\016*\177\n\nMemb"
    "erRole\022\016\n\nUnspecifed\020\000\022\016\n\nTeamMember\020\001\022\014"
    "\n\010TeamLead\020\002\022\006\n\002HQ\020\003\022\n\n\006Sniper\020\004\022\t\n\005Medi"
    "c\020\005\022\023\n\017ForwardObserver\020\006\022\007\n\003RTO\020\007\022\006\n\002K9\020"
    "\010B_\n\023com.geeksville.meshB\nATAKProtosZ\"gi"
    "thub.com/meshtastic/go/generated\252\002\024Mesht"
    "astic.Protobufs\272\002\000b\006proto3"
};
static ::absl::once_flag descriptor_table_meshtastic_2fatak_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_meshtastic_2fatak_2eproto = {
    false,
    false,
    1066,
    descriptor_table_protodef_meshtastic_2fatak_2eproto,
    "meshtastic/atak.proto",
    &descriptor_table_meshtastic_2fatak_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_meshtastic_2fatak_2eproto::offsets,
    file_level_enum_descriptors_meshtastic_2fatak_2eproto,
    file_level_service_descriptors_meshtastic_2fatak_2eproto,
};
namespace meshtastic {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Team_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_meshtastic_2fatak_2eproto);
  return file_level_enum_descriptors_meshtastic_2fatak_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Team_internal_data_[] = {
    983040u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MemberRole_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_meshtastic_2fatak_2eproto);
  return file_level_enum_descriptors_meshtastic_2fatak_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t MemberRole_internal_data_[] = {
    589824u, 0u, };
// ===================================================================

class TAKPacket::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TAKPacket>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TAKPacket, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::meshtastic::TAKPacket, _impl_._oneof_case_);
};

void TAKPacket::set_allocated_pli(::meshtastic::PLI* PROTOBUF_NULLABLE pli) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (pli) {
    ::google::protobuf::Arena* submessage_arena = pli->GetArena();
    if (message_arena != submessage_arena) {
      pli = ::google::protobuf::internal::GetOwnedMessage(message_arena, pli, submessage_arena);
    }
    set_has_pli();
    _impl_.payload_variant_.pli_ = pli;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.TAKPacket.pli)
}
void TAKPacket::set_allocated_chat(::meshtastic::GeoChat* PROTOBUF_NULLABLE chat) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (chat) {
    ::google::protobuf::Arena* submessage_arena = chat->GetArena();
    if (message_arena != submessage_arena) {
      chat = ::google::protobuf::internal::GetOwnedMessage(message_arena, chat, submessage_arena);
    }
    set_has_chat();
    _impl_.payload_variant_.chat_ = chat;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.TAKPacket.chat)
}
TAKPacket::TAKPacket(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TAKPacket_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.TAKPacket)
}
PROTOBUF_NDEBUG_INLINE TAKPacket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::meshtastic::TAKPacket& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        payload_variant_{},
        _oneof_case_{from._oneof_case_[0]} {}

TAKPacket::TAKPacket(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TAKPacket& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TAKPacket_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TAKPacket* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.contact_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.contact_)
                : nullptr;
  _impl_.group_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.group_)
                : nullptr;
  _impl_.status_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.is_compressed_ = from._impl_.is_compressed_;
  switch (payload_variant_case()) {
    case PAYLOAD_VARIANT_NOT_SET:
      break;
      case kPli:
        _impl_.payload_variant_.pli_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.pli_);
        break;
      case kChat:
        _impl_.payload_variant_.chat_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.chat_);
        break;
      case kDetail:
        new (&_impl_.payload_variant_.detail_) decltype(_impl_.payload_variant_.detail_){arena, from._impl_.payload_variant_.detail_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:meshtastic.TAKPacket)
}
PROTOBUF_NDEBUG_INLINE TAKPacket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        payload_variant_{},
        _oneof_case_{} {}

inline void TAKPacket::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, contact_),
           0,
           offsetof(Impl_, is_compressed_) -
               offsetof(Impl_, contact_) +
               sizeof(Impl_::is_compressed_));
}
TAKPacket::~TAKPacket() {
  // @@protoc_insertion_point(destructor:meshtastic.TAKPacket)
  SharedDtor(*this);
}
inline void TAKPacket::SharedDtor(MessageLite& self) {
  TAKPacket& this_ = static_cast<TAKPacket&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.contact_;
  delete this_._impl_.group_;
  delete this_._impl_.status_;
  if (this_.has_payload_variant()) {
    this_.clear_payload_variant();
  }
  this_._impl_.~Impl_();
}

void TAKPacket::clear_payload_variant() {
// @@protoc_insertion_point(one_of_clear_start:meshtastic.TAKPacket)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_variant_case()) {
    case kPli: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.pli_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.pli_);
      }
      break;
    }
    case kChat: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.chat_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.chat_);
      }
      break;
    }
    case kDetail: {
      _impl_.payload_variant_.detail_.Destroy();
      break;
    }
    case PAYLOAD_VARIANT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_VARIANT_NOT_SET;
}


inline void* PROTOBUF_NONNULL TAKPacket::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TAKPacket(arena);
}
constexpr auto TAKPacket::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TAKPacket),
                                            alignof(TAKPacket));
}
constexpr auto TAKPacket::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TAKPacket_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TAKPacket::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TAKPacket>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TAKPacket::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TAKPacket>(), &TAKPacket::ByteSizeLong,
              &TAKPacket::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TAKPacket, _impl_._cached_size_),
          false,
      },
      &TAKPacket::kDescriptorMethods,
      &descriptor_table_meshtastic_2fatak_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TAKPacket_class_data_ =
        TAKPacket::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TAKPacket::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TAKPacket_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TAKPacket_class_data_.tc_table);
  return TAKPacket_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 7, 5, 0, 2>
TAKPacket::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TAKPacket, _impl_._has_bits_),
    0, // no _extensions_
    7, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TAKPacket_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::TAKPacket>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .meshtastic.Status status = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(TAKPacket, _impl_.status_)}},
    // bool is_compressed = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TAKPacket, _impl_.is_compressed_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(TAKPacket, _impl_.is_compressed_)}},
    // .meshtastic.Contact contact = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TAKPacket, _impl_.contact_)}},
    // .meshtastic.Group group = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(TAKPacket, _impl_.group_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_compressed = 1;
    {PROTOBUF_FIELD_OFFSET(TAKPacket, _impl_.is_compressed_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .meshtastic.Contact contact = 2;
    {PROTOBUF_FIELD_OFFSET(TAKPacket, _impl_.contact_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.Group group = 3;
    {PROTOBUF_FIELD_OFFSET(TAKPacket, _impl_.group_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.Status status = 4;
    {PROTOBUF_FIELD_OFFSET(TAKPacket, _impl_.status_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.PLI pli = 5;
    {PROTOBUF_FIELD_OFFSET(TAKPacket, _impl_.payload_variant_.pli_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.GeoChat chat = 6;
    {PROTOBUF_FIELD_OFFSET(TAKPacket, _impl_.payload_variant_.chat_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes detail = 7;
    {PROTOBUF_FIELD_OFFSET(TAKPacket, _impl_.payload_variant_.detail_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::Contact>()},
      {::_pbi::TcParser::GetTable<::meshtastic::Group>()},
      {::_pbi::TcParser::GetTable<::meshtastic::Status>()},
      {::_pbi::TcParser::GetTable<::meshtastic::PLI>()},
      {::_pbi::TcParser::GetTable<::meshtastic::GeoChat>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TAKPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.TAKPacket)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.contact_ != nullptr);
      _impl_.contact_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.group_ != nullptr);
      _impl_.group_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_.is_compressed_ = false;
  clear_payload_variant();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TAKPacket::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TAKPacket& this_ = static_cast<const TAKPacket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TAKPacket::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TAKPacket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.TAKPacket)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool is_compressed = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_is_compressed() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_is_compressed(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .meshtastic.Contact contact = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.contact_, this_._impl_.contact_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.Group group = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.group_, this_._impl_.group_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.Status status = 4;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  switch (this_.payload_variant_case()) {
    case kPli: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.payload_variant_.pli_, this_._impl_.payload_variant_.pli_->GetCachedSize(), target,
          stream);
      break;
    }
    case kChat: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *this_._impl_.payload_variant_.chat_, this_._impl_.payload_variant_.chat_->GetCachedSize(), target,
          stream);
      break;
    }
    case kDetail: {
      const ::std::string& _s = this_._internal_detail();
      target = stream->WriteBytesMaybeAliased(7, _s, target);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.TAKPacket)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TAKPacket::ByteSizeLong(const MessageLite& base) {
  const TAKPacket& this_ = static_cast<const TAKPacket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TAKPacket::ByteSizeLong() const {
  const TAKPacket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.TAKPacket)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // .meshtastic.Contact contact = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.contact_);
    }
    // .meshtastic.Group group = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.group_);
    }
    // .meshtastic.Status status = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // bool is_compressed = 1;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_is_compressed() != 0) {
        total_size += 2;
      }
    }
  }
  switch (this_.payload_variant_case()) {
    // .meshtastic.PLI pli = 5;
    case kPli: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.pli_);
      break;
    }
    // .meshtastic.GeoChat chat = 6;
    case kChat: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.chat_);
      break;
    }
    // bytes detail = 7;
    case kDetail: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_detail());
      break;
    }
    case PAYLOAD_VARIANT_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TAKPacket::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TAKPacket*>(&to_msg);
  auto& from = static_cast<const TAKPacket&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.TAKPacket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.contact_ != nullptr);
      if (_this->_impl_.contact_ == nullptr) {
        _this->_impl_.contact_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.contact_);
      } else {
        _this->_impl_.contact_->MergeFrom(*from._impl_.contact_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.group_ != nullptr);
      if (_this->_impl_.group_ == nullptr) {
        _this->_impl_.group_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.group_);
      } else {
        _this->_impl_.group_->MergeFrom(*from._impl_.group_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_is_compressed() != 0) {
        _this->_impl_.is_compressed_ = from._impl_.is_compressed_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload_variant();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kPli: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.pli_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.pli_);
        } else {
          _this->_impl_.payload_variant_.pli_->MergeFrom(*from._impl_.payload_variant_.pli_);
        }
        break;
      }
      case kChat: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.chat_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.chat_);
        } else {
          _this->_impl_.payload_variant_.chat_->MergeFrom(*from._impl_.payload_variant_.chat_);
        }
        break;
      }
      case kDetail: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.detail_.InitDefault();
        }
        _this->_impl_.payload_variant_.detail_.Set(from._internal_detail(), arena);
        break;
      }
      case PAYLOAD_VARIANT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TAKPacket::CopyFrom(const TAKPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.TAKPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TAKPacket::InternalSwap(TAKPacket* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TAKPacket, _impl_.is_compressed_)
      + sizeof(TAKPacket::_impl_.is_compressed_)
      - PROTOBUF_FIELD_OFFSET(TAKPacket, _impl_.contact_)>(
          reinterpret_cast<char*>(&_impl_.contact_),
          reinterpret_cast<char*>(&other->_impl_.contact_));
  swap(_impl_.payload_variant_, other->_impl_.payload_variant_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata TAKPacket::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GeoChat::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GeoChat>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GeoChat, _impl_._has_bits_);
};

GeoChat::GeoChat(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GeoChat_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.GeoChat)
}
PROTOBUF_NDEBUG_INLINE GeoChat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::meshtastic::GeoChat& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_),
        to_(arena, from.to_),
        to_callsign_(arena, from.to_callsign_) {}

GeoChat::GeoChat(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GeoChat& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GeoChat_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GeoChat* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:meshtastic.GeoChat)
}
PROTOBUF_NDEBUG_INLINE GeoChat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        message_(arena),
        to_(arena),
        to_callsign_(arena) {}

inline void GeoChat::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GeoChat::~GeoChat() {
  // @@protoc_insertion_point(destructor:meshtastic.GeoChat)
  SharedDtor(*this);
}
inline void GeoChat::SharedDtor(MessageLite& self) {
  GeoChat& this_ = static_cast<GeoChat&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.to_.Destroy();
  this_._impl_.to_callsign_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GeoChat::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GeoChat(arena);
}
constexpr auto GeoChat::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GeoChat),
                                            alignof(GeoChat));
}
constexpr auto GeoChat::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GeoChat_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GeoChat::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GeoChat>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GeoChat::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GeoChat>(), &GeoChat::ByteSizeLong,
              &GeoChat::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GeoChat, _impl_._cached_size_),
          false,
      },
      &GeoChat::kDescriptorMethods,
      &descriptor_table_meshtastic_2fatak_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GeoChat_class_data_ =
        GeoChat::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GeoChat::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GeoChat_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GeoChat_class_data_.tc_table);
  return GeoChat_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 47, 2>
GeoChat::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GeoChat, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GeoChat_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::GeoChat>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string message = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GeoChat, _impl_.message_)}},
    // optional string to = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GeoChat, _impl_.to_)}},
    // optional string to_callsign = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(GeoChat, _impl_.to_callsign_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message = 1;
    {PROTOBUF_FIELD_OFFSET(GeoChat, _impl_.message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string to = 2;
    {PROTOBUF_FIELD_OFFSET(GeoChat, _impl_.to_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string to_callsign = 3;
    {PROTOBUF_FIELD_OFFSET(GeoChat, _impl_.to_callsign_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\7\2\13\0\0\0\0"
    "meshtastic.GeoChat"
    "message"
    "to"
    "to_callsign"
  }},
};
PROTOBUF_NOINLINE void GeoChat::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.GeoChat)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.to_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.to_callsign_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GeoChat::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GeoChat& this_ = static_cast<const GeoChat&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GeoChat::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GeoChat& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.GeoChat)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string message = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.GeoChat.message");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string to = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_to();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.GeoChat.to");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string to_callsign = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    const ::std::string& _s = this_._internal_to_callsign();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.GeoChat.to_callsign");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.GeoChat)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GeoChat::ByteSizeLong(const MessageLite& base) {
  const GeoChat& this_ = static_cast<const GeoChat&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GeoChat::ByteSizeLong() const {
  const GeoChat& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.GeoChat)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string message = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
    // optional string to = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_to());
    }
    // optional string to_callsign = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_to_callsign());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GeoChat::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GeoChat*>(&to_msg);
  auto& from = static_cast<const GeoChat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.GeoChat)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_to(from._internal_to());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_internal_set_to_callsign(from._internal_to_callsign());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GeoChat::CopyFrom(const GeoChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.GeoChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GeoChat::InternalSwap(GeoChat* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_, &other->_impl_.to_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_callsign_, &other->_impl_.to_callsign_, arena);
}

::google::protobuf::Metadata GeoChat::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Group::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Group>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Group, _impl_._has_bits_);
};

Group::Group(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Group_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.Group)
}
Group::Group(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Group& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Group_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Group::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Group::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, role_),
           0,
           offsetof(Impl_, team_) -
               offsetof(Impl_, role_) +
               sizeof(Impl_::team_));
}
Group::~Group() {
  // @@protoc_insertion_point(destructor:meshtastic.Group)
  SharedDtor(*this);
}
inline void Group::SharedDtor(MessageLite& self) {
  Group& this_ = static_cast<Group&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Group::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Group(arena);
}
constexpr auto Group::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Group),
                                            alignof(Group));
}
constexpr auto Group::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Group_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Group::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Group>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Group::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Group>(), &Group::ByteSizeLong,
              &Group::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Group, _impl_._cached_size_),
          false,
      },
      &Group::kDescriptorMethods,
      &descriptor_table_meshtastic_2fatak_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Group_class_data_ =
        Group::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Group::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Group_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Group_class_data_.tc_table);
  return Group_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
Group::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Group, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Group_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::Group>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .meshtastic.Team team = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Group, _impl_.team_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Group, _impl_.team_)}},
    // .meshtastic.MemberRole role = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Group, _impl_.role_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Group, _impl_.role_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .meshtastic.MemberRole role = 1;
    {PROTOBUF_FIELD_OFFSET(Group, _impl_.role_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .meshtastic.Team team = 2;
    {PROTOBUF_FIELD_OFFSET(Group, _impl_.team_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Group::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.Group)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.role_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.team_) -
        reinterpret_cast<char*>(&_impl_.role_)) + sizeof(_impl_.team_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Group::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Group& this_ = static_cast<const Group&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Group::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Group& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.Group)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .meshtastic.MemberRole role = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_role() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_role(), target);
    }
  }

  // .meshtastic.Team team = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_team() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_team(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.Group)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Group::ByteSizeLong(const MessageLite& base) {
  const Group& this_ = static_cast<const Group&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Group::ByteSizeLong() const {
  const Group& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.Group)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .meshtastic.MemberRole role = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_role() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_role());
      }
    }
    // .meshtastic.Team team = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_team() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_team());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Group::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Group*>(&to_msg);
  auto& from = static_cast<const Group&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.Group)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_role() != 0) {
        _this->_impl_.role_ = from._impl_.role_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_team() != 0) {
        _this->_impl_.team_ = from._impl_.team_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Group::CopyFrom(const Group& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Group::InternalSwap(Group* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Group, _impl_.team_)
      + sizeof(Group::_impl_.team_)
      - PROTOBUF_FIELD_OFFSET(Group, _impl_.role_)>(
          reinterpret_cast<char*>(&_impl_.role_),
          reinterpret_cast<char*>(&other->_impl_.role_));
}

::google::protobuf::Metadata Group::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Status::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Status>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Status, _impl_._has_bits_);
};

Status::Status(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Status_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.Status)
}
Status::Status(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Status& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Status_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Status::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.battery_ = {};
}
Status::~Status() {
  // @@protoc_insertion_point(destructor:meshtastic.Status)
  SharedDtor(*this);
}
inline void Status::SharedDtor(MessageLite& self) {
  Status& this_ = static_cast<Status&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Status::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Status(arena);
}
constexpr auto Status::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Status),
                                            alignof(Status));
}
constexpr auto Status::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Status_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Status::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Status>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Status::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Status>(), &Status::ByteSizeLong,
              &Status::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Status, _impl_._cached_size_),
          false,
      },
      &Status::kDescriptorMethods,
      &descriptor_table_meshtastic_2fatak_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Status_class_data_ =
        Status::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Status::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Status_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Status_class_data_.tc_table);
  return Status_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
Status::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Status, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Status_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::Status>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 battery = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Status, _impl_.battery_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.battery_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 battery = 1;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.battery_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.Status)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.battery_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Status::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Status& this_ = static_cast<const Status&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Status::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Status& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.Status)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 battery = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_battery() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_battery(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.Status)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Status::ByteSizeLong(const MessageLite& base) {
  const Status& this_ = static_cast<const Status&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Status::ByteSizeLong() const {
  const Status& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.Status)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // uint32 battery = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_battery() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_battery());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Status::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Status*>(&to_msg);
  auto& from = static_cast<const Status&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.Status)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_battery() != 0) {
      _this->_impl_.battery_ = from._impl_.battery_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Status::InternalSwap(Status* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.battery_, other->_impl_.battery_);
}

::google::protobuf::Metadata Status::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Contact::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Contact>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Contact, _impl_._has_bits_);
};

Contact::Contact(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Contact_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.Contact)
}
PROTOBUF_NDEBUG_INLINE Contact::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::meshtastic::Contact& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        callsign_(arena, from.callsign_),
        device_callsign_(arena, from.device_callsign_) {}

Contact::Contact(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Contact& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Contact_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Contact* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:meshtastic.Contact)
}
PROTOBUF_NDEBUG_INLINE Contact::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        callsign_(arena),
        device_callsign_(arena) {}

inline void Contact::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Contact::~Contact() {
  // @@protoc_insertion_point(destructor:meshtastic.Contact)
  SharedDtor(*this);
}
inline void Contact::SharedDtor(MessageLite& self) {
  Contact& this_ = static_cast<Contact&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.callsign_.Destroy();
  this_._impl_.device_callsign_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Contact::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Contact(arena);
}
constexpr auto Contact::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Contact),
                                            alignof(Contact));
}
constexpr auto Contact::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Contact_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Contact::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Contact>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Contact::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Contact>(), &Contact::ByteSizeLong,
              &Contact::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Contact, _impl_._cached_size_),
          false,
      },
      &Contact::kDescriptorMethods,
      &descriptor_table_meshtastic_2fatak_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Contact_class_data_ =
        Contact::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Contact::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Contact_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Contact_class_data_.tc_table);
  return Contact_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 50, 2>
Contact::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Contact, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Contact_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::Contact>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string device_callsign = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Contact, _impl_.device_callsign_)}},
    // string callsign = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Contact, _impl_.callsign_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string callsign = 1;
    {PROTOBUF_FIELD_OFFSET(Contact, _impl_.callsign_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_callsign = 2;
    {PROTOBUF_FIELD_OFFSET(Contact, _impl_.device_callsign_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\10\17\0\0\0\0\0"
    "meshtastic.Contact"
    "callsign"
    "device_callsign"
  }},
};
PROTOBUF_NOINLINE void Contact::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.Contact)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.callsign_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.device_callsign_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Contact::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Contact& this_ = static_cast<const Contact&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Contact::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Contact& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.Contact)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string callsign = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_callsign().empty()) {
      const ::std::string& _s = this_._internal_callsign();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.Contact.callsign");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string device_callsign = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_device_callsign().empty()) {
      const ::std::string& _s = this_._internal_device_callsign();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.Contact.device_callsign");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.Contact)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Contact::ByteSizeLong(const MessageLite& base) {
  const Contact& this_ = static_cast<const Contact&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Contact::ByteSizeLong() const {
  const Contact& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.Contact)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string callsign = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_callsign().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_callsign());
      }
    }
    // string device_callsign = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_device_callsign().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_callsign());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Contact::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Contact*>(&to_msg);
  auto& from = static_cast<const Contact&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.Contact)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_callsign().empty()) {
        _this->_internal_set_callsign(from._internal_callsign());
      } else {
        if (_this->_impl_.callsign_.IsDefault()) {
          _this->_internal_set_callsign("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_device_callsign().empty()) {
        _this->_internal_set_device_callsign(from._internal_device_callsign());
      } else {
        if (_this->_impl_.device_callsign_.IsDefault()) {
          _this->_internal_set_device_callsign("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Contact::CopyFrom(const Contact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.Contact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Contact::InternalSwap(Contact* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.callsign_, &other->_impl_.callsign_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_callsign_, &other->_impl_.device_callsign_, arena);
}

::google::protobuf::Metadata Contact::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PLI::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PLI>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PLI, _impl_._has_bits_);
};

PLI::PLI(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PLI_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.PLI)
}
PLI::PLI(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PLI& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PLI_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE PLI::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void PLI::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_i_),
           0,
           offsetof(Impl_, course_) -
               offsetof(Impl_, latitude_i_) +
               sizeof(Impl_::course_));
}
PLI::~PLI() {
  // @@protoc_insertion_point(destructor:meshtastic.PLI)
  SharedDtor(*this);
}
inline void PLI::SharedDtor(MessageLite& self) {
  PLI& this_ = static_cast<PLI&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PLI::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PLI(arena);
}
constexpr auto PLI::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PLI),
                                            alignof(PLI));
}
constexpr auto PLI::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PLI_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PLI::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PLI>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PLI::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PLI>(), &PLI::ByteSizeLong,
              &PLI::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PLI, _impl_._cached_size_),
          false,
      },
      &PLI::kDescriptorMethods,
      &descriptor_table_meshtastic_2fatak_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PLI_class_data_ =
        PLI::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PLI::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PLI_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PLI_class_data_.tc_table);
  return PLI_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2>
PLI::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PLI, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PLI_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::PLI>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // sfixed32 latitude_i = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(PLI, _impl_.latitude_i_)}},
    // sfixed32 longitude_i = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(PLI, _impl_.longitude_i_)}},
    // int32 altitude = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PLI, _impl_.altitude_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(PLI, _impl_.altitude_)}},
    // uint32 speed = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PLI, _impl_.speed_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(PLI, _impl_.speed_)}},
    // uint32 course = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PLI, _impl_.course_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(PLI, _impl_.course_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // sfixed32 latitude_i = 1;
    {PROTOBUF_FIELD_OFFSET(PLI, _impl_.latitude_i_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSFixed32)},
    // sfixed32 longitude_i = 2;
    {PROTOBUF_FIELD_OFFSET(PLI, _impl_.longitude_i_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSFixed32)},
    // int32 altitude = 3;
    {PROTOBUF_FIELD_OFFSET(PLI, _impl_.altitude_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // uint32 speed = 4;
    {PROTOBUF_FIELD_OFFSET(PLI, _impl_.speed_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 course = 5;
    {PROTOBUF_FIELD_OFFSET(PLI, _impl_.course_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void PLI::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.PLI)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    ::memset(&_impl_.latitude_i_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.course_) -
        reinterpret_cast<char*>(&_impl_.latitude_i_)) + sizeof(_impl_.course_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PLI::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PLI& this_ = static_cast<const PLI&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PLI::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PLI& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.PLI)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // sfixed32 latitude_i = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_latitude_i() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteSFixed32ToArray(
          1, this_._internal_latitude_i(), target);
    }
  }

  // sfixed32 longitude_i = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_longitude_i() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteSFixed32ToArray(
          2, this_._internal_longitude_i(), target);
    }
  }

  // int32 altitude = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_altitude() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_altitude(), target);
    }
  }

  // uint32 speed = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_speed() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          4, this_._internal_speed(), target);
    }
  }

  // uint32 course = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_course() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          5, this_._internal_course(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.PLI)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PLI::ByteSizeLong(const MessageLite& base) {
  const PLI& this_ = static_cast<const PLI&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PLI::ByteSizeLong() const {
  const PLI& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.PLI)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // sfixed32 latitude_i = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_latitude_i() != 0) {
        total_size += 5;
      }
    }
    // sfixed32 longitude_i = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_longitude_i() != 0) {
        total_size += 5;
      }
    }
    // int32 altitude = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_altitude() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_altitude());
      }
    }
    // uint32 speed = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_speed() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_speed());
      }
    }
    // uint32 course = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_course() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_course());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PLI::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PLI*>(&to_msg);
  auto& from = static_cast<const PLI&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.PLI)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_latitude_i() != 0) {
        _this->_impl_.latitude_i_ = from._impl_.latitude_i_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_longitude_i() != 0) {
        _this->_impl_.longitude_i_ = from._impl_.longitude_i_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_altitude() != 0) {
        _this->_impl_.altitude_ = from._impl_.altitude_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_speed() != 0) {
        _this->_impl_.speed_ = from._impl_.speed_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_course() != 0) {
        _this->_impl_.course_ = from._impl_.course_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PLI::CopyFrom(const PLI& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.PLI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PLI::InternalSwap(PLI* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PLI, _impl_.course_)
      + sizeof(PLI::_impl_.course_)
      - PROTOBUF_FIELD_OFFSET(PLI, _impl_.latitude_i_)>(
          reinterpret_cast<char*>(&_impl_.latitude_i_),
          reinterpret_cast<char*>(&other->_impl_.latitude_i_));
}

::google::protobuf::Metadata PLI::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace meshtastic
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_meshtastic_2fatak_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
