// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: meshtastic/connection_status.proto
// Protobuf C++ Version: 6.32.0

#ifndef meshtastic_2fconnection_5fstatus_2eproto_2epb_2eh
#define meshtastic_2fconnection_5fstatus_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_meshtastic_2fconnection_5fstatus_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_meshtastic_2fconnection_5fstatus_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_meshtastic_2fconnection_5fstatus_2eproto;
}  // extern "C"
namespace meshtastic {
class BluetoothConnectionStatus;
struct BluetoothConnectionStatusDefaultTypeInternal;
extern BluetoothConnectionStatusDefaultTypeInternal _BluetoothConnectionStatus_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BluetoothConnectionStatus_class_data_;
class DeviceConnectionStatus;
struct DeviceConnectionStatusDefaultTypeInternal;
extern DeviceConnectionStatusDefaultTypeInternal _DeviceConnectionStatus_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DeviceConnectionStatus_class_data_;
class EthernetConnectionStatus;
struct EthernetConnectionStatusDefaultTypeInternal;
extern EthernetConnectionStatusDefaultTypeInternal _EthernetConnectionStatus_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull EthernetConnectionStatus_class_data_;
class NetworkConnectionStatus;
struct NetworkConnectionStatusDefaultTypeInternal;
extern NetworkConnectionStatusDefaultTypeInternal _NetworkConnectionStatus_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull NetworkConnectionStatus_class_data_;
class SerialConnectionStatus;
struct SerialConnectionStatusDefaultTypeInternal;
extern SerialConnectionStatusDefaultTypeInternal _SerialConnectionStatus_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SerialConnectionStatus_class_data_;
class WifiConnectionStatus;
struct WifiConnectionStatusDefaultTypeInternal;
extern WifiConnectionStatusDefaultTypeInternal _WifiConnectionStatus_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull WifiConnectionStatus_class_data_;
}  // namespace meshtastic
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace meshtastic {

// ===================================================================


// -------------------------------------------------------------------

class SerialConnectionStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.SerialConnectionStatus) */ {
 public:
  inline SerialConnectionStatus() : SerialConnectionStatus(nullptr) {}
  ~SerialConnectionStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SerialConnectionStatus* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SerialConnectionStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SerialConnectionStatus(::google::protobuf::internal::ConstantInitialized);

  inline SerialConnectionStatus(const SerialConnectionStatus& from) : SerialConnectionStatus(nullptr, from) {}
  inline SerialConnectionStatus(SerialConnectionStatus&& from) noexcept
      : SerialConnectionStatus(nullptr, ::std::move(from)) {}
  inline SerialConnectionStatus& operator=(const SerialConnectionStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline SerialConnectionStatus& operator=(SerialConnectionStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SerialConnectionStatus& default_instance() {
    return *reinterpret_cast<const SerialConnectionStatus*>(
        &_SerialConnectionStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SerialConnectionStatus& a, SerialConnectionStatus& b) { a.Swap(&b); }
  inline void Swap(SerialConnectionStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SerialConnectionStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SerialConnectionStatus* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SerialConnectionStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SerialConnectionStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SerialConnectionStatus& from) { SerialConnectionStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SerialConnectionStatus* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.SerialConnectionStatus"; }

 protected:
  explicit SerialConnectionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SerialConnectionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SerialConnectionStatus& from);
  SerialConnectionStatus(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SerialConnectionStatus&& from) noexcept
      : SerialConnectionStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBaudFieldNumber = 1,
    kIsConnectedFieldNumber = 2,
  };
  // uint32 baud = 1;
  void clear_baud() ;
  ::uint32_t baud() const;
  void set_baud(::uint32_t value);

  private:
  ::uint32_t _internal_baud() const;
  void _internal_set_baud(::uint32_t value);

  public:
  // bool is_connected = 2;
  void clear_is_connected() ;
  bool is_connected() const;
  void set_is_connected(bool value);

  private:
  bool _internal_is_connected() const;
  void _internal_set_is_connected(bool value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.SerialConnectionStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SerialConnectionStatus& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t baud_;
    bool is_connected_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fconnection_5fstatus_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SerialConnectionStatus_class_data_;
// -------------------------------------------------------------------

class NetworkConnectionStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.NetworkConnectionStatus) */ {
 public:
  inline NetworkConnectionStatus() : NetworkConnectionStatus(nullptr) {}
  ~NetworkConnectionStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NetworkConnectionStatus* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NetworkConnectionStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetworkConnectionStatus(::google::protobuf::internal::ConstantInitialized);

  inline NetworkConnectionStatus(const NetworkConnectionStatus& from) : NetworkConnectionStatus(nullptr, from) {}
  inline NetworkConnectionStatus(NetworkConnectionStatus&& from) noexcept
      : NetworkConnectionStatus(nullptr, ::std::move(from)) {}
  inline NetworkConnectionStatus& operator=(const NetworkConnectionStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkConnectionStatus& operator=(NetworkConnectionStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetworkConnectionStatus& default_instance() {
    return *reinterpret_cast<const NetworkConnectionStatus*>(
        &_NetworkConnectionStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(NetworkConnectionStatus& a, NetworkConnectionStatus& b) { a.Swap(&b); }
  inline void Swap(NetworkConnectionStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetworkConnectionStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetworkConnectionStatus* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NetworkConnectionStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NetworkConnectionStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NetworkConnectionStatus& from) { NetworkConnectionStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NetworkConnectionStatus* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.NetworkConnectionStatus"; }

 protected:
  explicit NetworkConnectionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  NetworkConnectionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const NetworkConnectionStatus& from);
  NetworkConnectionStatus(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, NetworkConnectionStatus&& from) noexcept
      : NetworkConnectionStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIpAddressFieldNumber = 1,
    kIsConnectedFieldNumber = 2,
    kIsMqttConnectedFieldNumber = 3,
    kIsSyslogConnectedFieldNumber = 4,
  };
  // fixed32 ip_address = 1;
  void clear_ip_address() ;
  ::uint32_t ip_address() const;
  void set_ip_address(::uint32_t value);

  private:
  ::uint32_t _internal_ip_address() const;
  void _internal_set_ip_address(::uint32_t value);

  public:
  // bool is_connected = 2;
  void clear_is_connected() ;
  bool is_connected() const;
  void set_is_connected(bool value);

  private:
  bool _internal_is_connected() const;
  void _internal_set_is_connected(bool value);

  public:
  // bool is_mqtt_connected = 3;
  void clear_is_mqtt_connected() ;
  bool is_mqtt_connected() const;
  void set_is_mqtt_connected(bool value);

  private:
  bool _internal_is_mqtt_connected() const;
  void _internal_set_is_mqtt_connected(bool value);

  public:
  // bool is_syslog_connected = 4;
  void clear_is_syslog_connected() ;
  bool is_syslog_connected() const;
  void set_is_syslog_connected(bool value);

  private:
  bool _internal_is_syslog_connected() const;
  void _internal_set_is_syslog_connected(bool value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.NetworkConnectionStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const NetworkConnectionStatus& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t ip_address_;
    bool is_connected_;
    bool is_mqtt_connected_;
    bool is_syslog_connected_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fconnection_5fstatus_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull NetworkConnectionStatus_class_data_;
// -------------------------------------------------------------------

class BluetoothConnectionStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.BluetoothConnectionStatus) */ {
 public:
  inline BluetoothConnectionStatus() : BluetoothConnectionStatus(nullptr) {}
  ~BluetoothConnectionStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BluetoothConnectionStatus* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BluetoothConnectionStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BluetoothConnectionStatus(::google::protobuf::internal::ConstantInitialized);

  inline BluetoothConnectionStatus(const BluetoothConnectionStatus& from) : BluetoothConnectionStatus(nullptr, from) {}
  inline BluetoothConnectionStatus(BluetoothConnectionStatus&& from) noexcept
      : BluetoothConnectionStatus(nullptr, ::std::move(from)) {}
  inline BluetoothConnectionStatus& operator=(const BluetoothConnectionStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline BluetoothConnectionStatus& operator=(BluetoothConnectionStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BluetoothConnectionStatus& default_instance() {
    return *reinterpret_cast<const BluetoothConnectionStatus*>(
        &_BluetoothConnectionStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(BluetoothConnectionStatus& a, BluetoothConnectionStatus& b) { a.Swap(&b); }
  inline void Swap(BluetoothConnectionStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BluetoothConnectionStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BluetoothConnectionStatus* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BluetoothConnectionStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BluetoothConnectionStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BluetoothConnectionStatus& from) { BluetoothConnectionStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BluetoothConnectionStatus* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.BluetoothConnectionStatus"; }

 protected:
  explicit BluetoothConnectionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BluetoothConnectionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BluetoothConnectionStatus& from);
  BluetoothConnectionStatus(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BluetoothConnectionStatus&& from) noexcept
      : BluetoothConnectionStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPinFieldNumber = 1,
    kRssiFieldNumber = 2,
    kIsConnectedFieldNumber = 3,
  };
  // uint32 pin = 1;
  void clear_pin() ;
  ::uint32_t pin() const;
  void set_pin(::uint32_t value);

  private:
  ::uint32_t _internal_pin() const;
  void _internal_set_pin(::uint32_t value);

  public:
  // int32 rssi = 2;
  void clear_rssi() ;
  ::int32_t rssi() const;
  void set_rssi(::int32_t value);

  private:
  ::int32_t _internal_rssi() const;
  void _internal_set_rssi(::int32_t value);

  public:
  // bool is_connected = 3;
  void clear_is_connected() ;
  bool is_connected() const;
  void set_is_connected(bool value);

  private:
  bool _internal_is_connected() const;
  void _internal_set_is_connected(bool value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.BluetoothConnectionStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BluetoothConnectionStatus& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t pin_;
    ::int32_t rssi_;
    bool is_connected_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fconnection_5fstatus_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BluetoothConnectionStatus_class_data_;
// -------------------------------------------------------------------

class WifiConnectionStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.WifiConnectionStatus) */ {
 public:
  inline WifiConnectionStatus() : WifiConnectionStatus(nullptr) {}
  ~WifiConnectionStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WifiConnectionStatus* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WifiConnectionStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WifiConnectionStatus(::google::protobuf::internal::ConstantInitialized);

  inline WifiConnectionStatus(const WifiConnectionStatus& from) : WifiConnectionStatus(nullptr, from) {}
  inline WifiConnectionStatus(WifiConnectionStatus&& from) noexcept
      : WifiConnectionStatus(nullptr, ::std::move(from)) {}
  inline WifiConnectionStatus& operator=(const WifiConnectionStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline WifiConnectionStatus& operator=(WifiConnectionStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WifiConnectionStatus& default_instance() {
    return *reinterpret_cast<const WifiConnectionStatus*>(
        &_WifiConnectionStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(WifiConnectionStatus& a, WifiConnectionStatus& b) { a.Swap(&b); }
  inline void Swap(WifiConnectionStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WifiConnectionStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WifiConnectionStatus* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<WifiConnectionStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WifiConnectionStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WifiConnectionStatus& from) { WifiConnectionStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(WifiConnectionStatus* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.WifiConnectionStatus"; }

 protected:
  explicit WifiConnectionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  WifiConnectionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const WifiConnectionStatus& from);
  WifiConnectionStatus(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, WifiConnectionStatus&& from) noexcept
      : WifiConnectionStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSsidFieldNumber = 2,
    kStatusFieldNumber = 1,
    kRssiFieldNumber = 3,
  };
  // string ssid = 2;
  void clear_ssid() ;
  const ::std::string& ssid() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_ssid(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_ssid();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_ssid();
  void set_allocated_ssid(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_ssid() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_ssid(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_ssid();

  public:
  // .meshtastic.NetworkConnectionStatus status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::meshtastic::NetworkConnectionStatus& status() const;
  [[nodiscard]] ::meshtastic::NetworkConnectionStatus* PROTOBUF_NULLABLE release_status();
  ::meshtastic::NetworkConnectionStatus* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::meshtastic::NetworkConnectionStatus* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::meshtastic::NetworkConnectionStatus* PROTOBUF_NULLABLE value);
  ::meshtastic::NetworkConnectionStatus* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::meshtastic::NetworkConnectionStatus& _internal_status() const;
  ::meshtastic::NetworkConnectionStatus* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // int32 rssi = 3;
  void clear_rssi() ;
  ::int32_t rssi() const;
  void set_rssi(::int32_t value);

  private:
  ::int32_t _internal_rssi() const;
  void _internal_set_rssi(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.WifiConnectionStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 44,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const WifiConnectionStatus& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr ssid_;
    ::meshtastic::NetworkConnectionStatus* PROTOBUF_NULLABLE status_;
    ::int32_t rssi_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fconnection_5fstatus_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull WifiConnectionStatus_class_data_;
// -------------------------------------------------------------------

class EthernetConnectionStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.EthernetConnectionStatus) */ {
 public:
  inline EthernetConnectionStatus() : EthernetConnectionStatus(nullptr) {}
  ~EthernetConnectionStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EthernetConnectionStatus* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EthernetConnectionStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EthernetConnectionStatus(::google::protobuf::internal::ConstantInitialized);

  inline EthernetConnectionStatus(const EthernetConnectionStatus& from) : EthernetConnectionStatus(nullptr, from) {}
  inline EthernetConnectionStatus(EthernetConnectionStatus&& from) noexcept
      : EthernetConnectionStatus(nullptr, ::std::move(from)) {}
  inline EthernetConnectionStatus& operator=(const EthernetConnectionStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline EthernetConnectionStatus& operator=(EthernetConnectionStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EthernetConnectionStatus& default_instance() {
    return *reinterpret_cast<const EthernetConnectionStatus*>(
        &_EthernetConnectionStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(EthernetConnectionStatus& a, EthernetConnectionStatus& b) { a.Swap(&b); }
  inline void Swap(EthernetConnectionStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EthernetConnectionStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EthernetConnectionStatus* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EthernetConnectionStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EthernetConnectionStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EthernetConnectionStatus& from) { EthernetConnectionStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EthernetConnectionStatus* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.EthernetConnectionStatus"; }

 protected:
  explicit EthernetConnectionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  EthernetConnectionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const EthernetConnectionStatus& from);
  EthernetConnectionStatus(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, EthernetConnectionStatus&& from) noexcept
      : EthernetConnectionStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 1,
  };
  // .meshtastic.NetworkConnectionStatus status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::meshtastic::NetworkConnectionStatus& status() const;
  [[nodiscard]] ::meshtastic::NetworkConnectionStatus* PROTOBUF_NULLABLE release_status();
  ::meshtastic::NetworkConnectionStatus* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::meshtastic::NetworkConnectionStatus* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::meshtastic::NetworkConnectionStatus* PROTOBUF_NULLABLE value);
  ::meshtastic::NetworkConnectionStatus* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::meshtastic::NetworkConnectionStatus& _internal_status() const;
  ::meshtastic::NetworkConnectionStatus* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.EthernetConnectionStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const EthernetConnectionStatus& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::meshtastic::NetworkConnectionStatus* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fconnection_5fstatus_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull EthernetConnectionStatus_class_data_;
// -------------------------------------------------------------------

class DeviceConnectionStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.DeviceConnectionStatus) */ {
 public:
  inline DeviceConnectionStatus() : DeviceConnectionStatus(nullptr) {}
  ~DeviceConnectionStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeviceConnectionStatus* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeviceConnectionStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceConnectionStatus(::google::protobuf::internal::ConstantInitialized);

  inline DeviceConnectionStatus(const DeviceConnectionStatus& from) : DeviceConnectionStatus(nullptr, from) {}
  inline DeviceConnectionStatus(DeviceConnectionStatus&& from) noexcept
      : DeviceConnectionStatus(nullptr, ::std::move(from)) {}
  inline DeviceConnectionStatus& operator=(const DeviceConnectionStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceConnectionStatus& operator=(DeviceConnectionStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceConnectionStatus& default_instance() {
    return *reinterpret_cast<const DeviceConnectionStatus*>(
        &_DeviceConnectionStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(DeviceConnectionStatus& a, DeviceConnectionStatus& b) { a.Swap(&b); }
  inline void Swap(DeviceConnectionStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceConnectionStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceConnectionStatus* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeviceConnectionStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeviceConnectionStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeviceConnectionStatus& from) { DeviceConnectionStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeviceConnectionStatus* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.DeviceConnectionStatus"; }

 protected:
  explicit DeviceConnectionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DeviceConnectionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DeviceConnectionStatus& from);
  DeviceConnectionStatus(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DeviceConnectionStatus&& from) noexcept
      : DeviceConnectionStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWifiFieldNumber = 1,
    kEthernetFieldNumber = 2,
    kBluetoothFieldNumber = 3,
    kSerialFieldNumber = 4,
  };
  // optional .meshtastic.WifiConnectionStatus wifi = 1;
  bool has_wifi() const;
  void clear_wifi() ;
  const ::meshtastic::WifiConnectionStatus& wifi() const;
  [[nodiscard]] ::meshtastic::WifiConnectionStatus* PROTOBUF_NULLABLE release_wifi();
  ::meshtastic::WifiConnectionStatus* PROTOBUF_NONNULL mutable_wifi();
  void set_allocated_wifi(::meshtastic::WifiConnectionStatus* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_wifi(::meshtastic::WifiConnectionStatus* PROTOBUF_NULLABLE value);
  ::meshtastic::WifiConnectionStatus* PROTOBUF_NULLABLE unsafe_arena_release_wifi();

  private:
  const ::meshtastic::WifiConnectionStatus& _internal_wifi() const;
  ::meshtastic::WifiConnectionStatus* PROTOBUF_NONNULL _internal_mutable_wifi();

  public:
  // optional .meshtastic.EthernetConnectionStatus ethernet = 2;
  bool has_ethernet() const;
  void clear_ethernet() ;
  const ::meshtastic::EthernetConnectionStatus& ethernet() const;
  [[nodiscard]] ::meshtastic::EthernetConnectionStatus* PROTOBUF_NULLABLE release_ethernet();
  ::meshtastic::EthernetConnectionStatus* PROTOBUF_NONNULL mutable_ethernet();
  void set_allocated_ethernet(::meshtastic::EthernetConnectionStatus* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_ethernet(::meshtastic::EthernetConnectionStatus* PROTOBUF_NULLABLE value);
  ::meshtastic::EthernetConnectionStatus* PROTOBUF_NULLABLE unsafe_arena_release_ethernet();

  private:
  const ::meshtastic::EthernetConnectionStatus& _internal_ethernet() const;
  ::meshtastic::EthernetConnectionStatus* PROTOBUF_NONNULL _internal_mutable_ethernet();

  public:
  // optional .meshtastic.BluetoothConnectionStatus bluetooth = 3;
  bool has_bluetooth() const;
  void clear_bluetooth() ;
  const ::meshtastic::BluetoothConnectionStatus& bluetooth() const;
  [[nodiscard]] ::meshtastic::BluetoothConnectionStatus* PROTOBUF_NULLABLE release_bluetooth();
  ::meshtastic::BluetoothConnectionStatus* PROTOBUF_NONNULL mutable_bluetooth();
  void set_allocated_bluetooth(::meshtastic::BluetoothConnectionStatus* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_bluetooth(::meshtastic::BluetoothConnectionStatus* PROTOBUF_NULLABLE value);
  ::meshtastic::BluetoothConnectionStatus* PROTOBUF_NULLABLE unsafe_arena_release_bluetooth();

  private:
  const ::meshtastic::BluetoothConnectionStatus& _internal_bluetooth() const;
  ::meshtastic::BluetoothConnectionStatus* PROTOBUF_NONNULL _internal_mutable_bluetooth();

  public:
  // optional .meshtastic.SerialConnectionStatus serial = 4;
  bool has_serial() const;
  void clear_serial() ;
  const ::meshtastic::SerialConnectionStatus& serial() const;
  [[nodiscard]] ::meshtastic::SerialConnectionStatus* PROTOBUF_NULLABLE release_serial();
  ::meshtastic::SerialConnectionStatus* PROTOBUF_NONNULL mutable_serial();
  void set_allocated_serial(::meshtastic::SerialConnectionStatus* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_serial(::meshtastic::SerialConnectionStatus* PROTOBUF_NULLABLE value);
  ::meshtastic::SerialConnectionStatus* PROTOBUF_NULLABLE unsafe_arena_release_serial();

  private:
  const ::meshtastic::SerialConnectionStatus& _internal_serial() const;
  ::meshtastic::SerialConnectionStatus* PROTOBUF_NONNULL _internal_mutable_serial();

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.DeviceConnectionStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   4, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DeviceConnectionStatus& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::meshtastic::WifiConnectionStatus* PROTOBUF_NULLABLE wifi_;
    ::meshtastic::EthernetConnectionStatus* PROTOBUF_NULLABLE ethernet_;
    ::meshtastic::BluetoothConnectionStatus* PROTOBUF_NULLABLE bluetooth_;
    ::meshtastic::SerialConnectionStatus* PROTOBUF_NULLABLE serial_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fconnection_5fstatus_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DeviceConnectionStatus_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DeviceConnectionStatus

// optional .meshtastic.WifiConnectionStatus wifi = 1;
inline bool DeviceConnectionStatus::has_wifi() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.wifi_ != nullptr);
  return value;
}
inline void DeviceConnectionStatus::clear_wifi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.wifi_ != nullptr) _impl_.wifi_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::meshtastic::WifiConnectionStatus& DeviceConnectionStatus::_internal_wifi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::WifiConnectionStatus* p = _impl_.wifi_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::WifiConnectionStatus&>(::meshtastic::_WifiConnectionStatus_default_instance_);
}
inline const ::meshtastic::WifiConnectionStatus& DeviceConnectionStatus::wifi() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.DeviceConnectionStatus.wifi)
  return _internal_wifi();
}
inline void DeviceConnectionStatus::unsafe_arena_set_allocated_wifi(
    ::meshtastic::WifiConnectionStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.wifi_);
  }
  _impl_.wifi_ = reinterpret_cast<::meshtastic::WifiConnectionStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.DeviceConnectionStatus.wifi)
}
inline ::meshtastic::WifiConnectionStatus* PROTOBUF_NULLABLE DeviceConnectionStatus::release_wifi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001U;
  ::meshtastic::WifiConnectionStatus* released = _impl_.wifi_;
  _impl_.wifi_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::WifiConnectionStatus* PROTOBUF_NULLABLE DeviceConnectionStatus::unsafe_arena_release_wifi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.DeviceConnectionStatus.wifi)

  _impl_._has_bits_[0] &= ~0x00000001U;
  ::meshtastic::WifiConnectionStatus* temp = _impl_.wifi_;
  _impl_.wifi_ = nullptr;
  return temp;
}
inline ::meshtastic::WifiConnectionStatus* PROTOBUF_NONNULL DeviceConnectionStatus::_internal_mutable_wifi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.wifi_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::WifiConnectionStatus>(GetArena());
    _impl_.wifi_ = reinterpret_cast<::meshtastic::WifiConnectionStatus*>(p);
  }
  return _impl_.wifi_;
}
inline ::meshtastic::WifiConnectionStatus* PROTOBUF_NONNULL DeviceConnectionStatus::mutable_wifi()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001U;
  ::meshtastic::WifiConnectionStatus* _msg = _internal_mutable_wifi();
  // @@protoc_insertion_point(field_mutable:meshtastic.DeviceConnectionStatus.wifi)
  return _msg;
}
inline void DeviceConnectionStatus::set_allocated_wifi(::meshtastic::WifiConnectionStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.wifi_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }

  _impl_.wifi_ = reinterpret_cast<::meshtastic::WifiConnectionStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.DeviceConnectionStatus.wifi)
}

// optional .meshtastic.EthernetConnectionStatus ethernet = 2;
inline bool DeviceConnectionStatus::has_ethernet() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ethernet_ != nullptr);
  return value;
}
inline void DeviceConnectionStatus::clear_ethernet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ethernet_ != nullptr) _impl_.ethernet_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::meshtastic::EthernetConnectionStatus& DeviceConnectionStatus::_internal_ethernet() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::EthernetConnectionStatus* p = _impl_.ethernet_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::EthernetConnectionStatus&>(::meshtastic::_EthernetConnectionStatus_default_instance_);
}
inline const ::meshtastic::EthernetConnectionStatus& DeviceConnectionStatus::ethernet() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.DeviceConnectionStatus.ethernet)
  return _internal_ethernet();
}
inline void DeviceConnectionStatus::unsafe_arena_set_allocated_ethernet(
    ::meshtastic::EthernetConnectionStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ethernet_);
  }
  _impl_.ethernet_ = reinterpret_cast<::meshtastic::EthernetConnectionStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.DeviceConnectionStatus.ethernet)
}
inline ::meshtastic::EthernetConnectionStatus* PROTOBUF_NULLABLE DeviceConnectionStatus::release_ethernet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::meshtastic::EthernetConnectionStatus* released = _impl_.ethernet_;
  _impl_.ethernet_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::EthernetConnectionStatus* PROTOBUF_NULLABLE DeviceConnectionStatus::unsafe_arena_release_ethernet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.DeviceConnectionStatus.ethernet)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::meshtastic::EthernetConnectionStatus* temp = _impl_.ethernet_;
  _impl_.ethernet_ = nullptr;
  return temp;
}
inline ::meshtastic::EthernetConnectionStatus* PROTOBUF_NONNULL DeviceConnectionStatus::_internal_mutable_ethernet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ethernet_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::EthernetConnectionStatus>(GetArena());
    _impl_.ethernet_ = reinterpret_cast<::meshtastic::EthernetConnectionStatus*>(p);
  }
  return _impl_.ethernet_;
}
inline ::meshtastic::EthernetConnectionStatus* PROTOBUF_NONNULL DeviceConnectionStatus::mutable_ethernet()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::meshtastic::EthernetConnectionStatus* _msg = _internal_mutable_ethernet();
  // @@protoc_insertion_point(field_mutable:meshtastic.DeviceConnectionStatus.ethernet)
  return _msg;
}
inline void DeviceConnectionStatus::set_allocated_ethernet(::meshtastic::EthernetConnectionStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ethernet_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.ethernet_ = reinterpret_cast<::meshtastic::EthernetConnectionStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.DeviceConnectionStatus.ethernet)
}

// optional .meshtastic.BluetoothConnectionStatus bluetooth = 3;
inline bool DeviceConnectionStatus::has_bluetooth() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bluetooth_ != nullptr);
  return value;
}
inline void DeviceConnectionStatus::clear_bluetooth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bluetooth_ != nullptr) _impl_.bluetooth_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::meshtastic::BluetoothConnectionStatus& DeviceConnectionStatus::_internal_bluetooth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::BluetoothConnectionStatus* p = _impl_.bluetooth_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::BluetoothConnectionStatus&>(::meshtastic::_BluetoothConnectionStatus_default_instance_);
}
inline const ::meshtastic::BluetoothConnectionStatus& DeviceConnectionStatus::bluetooth() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.DeviceConnectionStatus.bluetooth)
  return _internal_bluetooth();
}
inline void DeviceConnectionStatus::unsafe_arena_set_allocated_bluetooth(
    ::meshtastic::BluetoothConnectionStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bluetooth_);
  }
  _impl_.bluetooth_ = reinterpret_cast<::meshtastic::BluetoothConnectionStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.DeviceConnectionStatus.bluetooth)
}
inline ::meshtastic::BluetoothConnectionStatus* PROTOBUF_NULLABLE DeviceConnectionStatus::release_bluetooth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::meshtastic::BluetoothConnectionStatus* released = _impl_.bluetooth_;
  _impl_.bluetooth_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::BluetoothConnectionStatus* PROTOBUF_NULLABLE DeviceConnectionStatus::unsafe_arena_release_bluetooth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.DeviceConnectionStatus.bluetooth)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::meshtastic::BluetoothConnectionStatus* temp = _impl_.bluetooth_;
  _impl_.bluetooth_ = nullptr;
  return temp;
}
inline ::meshtastic::BluetoothConnectionStatus* PROTOBUF_NONNULL DeviceConnectionStatus::_internal_mutable_bluetooth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bluetooth_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::BluetoothConnectionStatus>(GetArena());
    _impl_.bluetooth_ = reinterpret_cast<::meshtastic::BluetoothConnectionStatus*>(p);
  }
  return _impl_.bluetooth_;
}
inline ::meshtastic::BluetoothConnectionStatus* PROTOBUF_NONNULL DeviceConnectionStatus::mutable_bluetooth()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::meshtastic::BluetoothConnectionStatus* _msg = _internal_mutable_bluetooth();
  // @@protoc_insertion_point(field_mutable:meshtastic.DeviceConnectionStatus.bluetooth)
  return _msg;
}
inline void DeviceConnectionStatus::set_allocated_bluetooth(::meshtastic::BluetoothConnectionStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bluetooth_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.bluetooth_ = reinterpret_cast<::meshtastic::BluetoothConnectionStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.DeviceConnectionStatus.bluetooth)
}

// optional .meshtastic.SerialConnectionStatus serial = 4;
inline bool DeviceConnectionStatus::has_serial() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.serial_ != nullptr);
  return value;
}
inline void DeviceConnectionStatus::clear_serial() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.serial_ != nullptr) _impl_.serial_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::meshtastic::SerialConnectionStatus& DeviceConnectionStatus::_internal_serial() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::SerialConnectionStatus* p = _impl_.serial_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::SerialConnectionStatus&>(::meshtastic::_SerialConnectionStatus_default_instance_);
}
inline const ::meshtastic::SerialConnectionStatus& DeviceConnectionStatus::serial() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.DeviceConnectionStatus.serial)
  return _internal_serial();
}
inline void DeviceConnectionStatus::unsafe_arena_set_allocated_serial(
    ::meshtastic::SerialConnectionStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.serial_);
  }
  _impl_.serial_ = reinterpret_cast<::meshtastic::SerialConnectionStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.DeviceConnectionStatus.serial)
}
inline ::meshtastic::SerialConnectionStatus* PROTOBUF_NULLABLE DeviceConnectionStatus::release_serial() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::meshtastic::SerialConnectionStatus* released = _impl_.serial_;
  _impl_.serial_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::SerialConnectionStatus* PROTOBUF_NULLABLE DeviceConnectionStatus::unsafe_arena_release_serial() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.DeviceConnectionStatus.serial)

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::meshtastic::SerialConnectionStatus* temp = _impl_.serial_;
  _impl_.serial_ = nullptr;
  return temp;
}
inline ::meshtastic::SerialConnectionStatus* PROTOBUF_NONNULL DeviceConnectionStatus::_internal_mutable_serial() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.serial_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::SerialConnectionStatus>(GetArena());
    _impl_.serial_ = reinterpret_cast<::meshtastic::SerialConnectionStatus*>(p);
  }
  return _impl_.serial_;
}
inline ::meshtastic::SerialConnectionStatus* PROTOBUF_NONNULL DeviceConnectionStatus::mutable_serial()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008U;
  ::meshtastic::SerialConnectionStatus* _msg = _internal_mutable_serial();
  // @@protoc_insertion_point(field_mutable:meshtastic.DeviceConnectionStatus.serial)
  return _msg;
}
inline void DeviceConnectionStatus::set_allocated_serial(::meshtastic::SerialConnectionStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.serial_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }

  _impl_.serial_ = reinterpret_cast<::meshtastic::SerialConnectionStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.DeviceConnectionStatus.serial)
}

// -------------------------------------------------------------------

// WifiConnectionStatus

// .meshtastic.NetworkConnectionStatus status = 1;
inline bool WifiConnectionStatus::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline void WifiConnectionStatus::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::meshtastic::NetworkConnectionStatus& WifiConnectionStatus::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::NetworkConnectionStatus* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::NetworkConnectionStatus&>(::meshtastic::_NetworkConnectionStatus_default_instance_);
}
inline const ::meshtastic::NetworkConnectionStatus& WifiConnectionStatus::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.WifiConnectionStatus.status)
  return _internal_status();
}
inline void WifiConnectionStatus::unsafe_arena_set_allocated_status(
    ::meshtastic::NetworkConnectionStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::meshtastic::NetworkConnectionStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.WifiConnectionStatus.status)
}
inline ::meshtastic::NetworkConnectionStatus* PROTOBUF_NULLABLE WifiConnectionStatus::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::meshtastic::NetworkConnectionStatus* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::NetworkConnectionStatus* PROTOBUF_NULLABLE WifiConnectionStatus::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.WifiConnectionStatus.status)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::meshtastic::NetworkConnectionStatus* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::meshtastic::NetworkConnectionStatus* PROTOBUF_NONNULL WifiConnectionStatus::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::NetworkConnectionStatus>(GetArena());
    _impl_.status_ = reinterpret_cast<::meshtastic::NetworkConnectionStatus*>(p);
  }
  return _impl_.status_;
}
inline ::meshtastic::NetworkConnectionStatus* PROTOBUF_NONNULL WifiConnectionStatus::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::meshtastic::NetworkConnectionStatus* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:meshtastic.WifiConnectionStatus.status)
  return _msg;
}
inline void WifiConnectionStatus::set_allocated_status(::meshtastic::NetworkConnectionStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.status_ = reinterpret_cast<::meshtastic::NetworkConnectionStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.WifiConnectionStatus.status)
}

// string ssid = 2;
inline void WifiConnectionStatus::clear_ssid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ssid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& WifiConnectionStatus::ssid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.WifiConnectionStatus.ssid)
  return _internal_ssid();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void WifiConnectionStatus::set_ssid(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.ssid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.WifiConnectionStatus.ssid)
}
inline ::std::string* PROTOBUF_NONNULL WifiConnectionStatus::mutable_ssid()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_ssid();
  // @@protoc_insertion_point(field_mutable:meshtastic.WifiConnectionStatus.ssid)
  return _s;
}
inline const ::std::string& WifiConnectionStatus::_internal_ssid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ssid_.Get();
}
inline void WifiConnectionStatus::_internal_set_ssid(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.ssid_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL WifiConnectionStatus::_internal_mutable_ssid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.ssid_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE WifiConnectionStatus::release_ssid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.WifiConnectionStatus.ssid)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.ssid_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.ssid_.Set("", GetArena());
  }
  return released;
}
inline void WifiConnectionStatus::set_allocated_ssid(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.ssid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ssid_.IsDefault()) {
    _impl_.ssid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.WifiConnectionStatus.ssid)
}

// int32 rssi = 3;
inline void WifiConnectionStatus::clear_rssi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rssi_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int32_t WifiConnectionStatus::rssi() const {
  // @@protoc_insertion_point(field_get:meshtastic.WifiConnectionStatus.rssi)
  return _internal_rssi();
}
inline void WifiConnectionStatus::set_rssi(::int32_t value) {
  _internal_set_rssi(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:meshtastic.WifiConnectionStatus.rssi)
}
inline ::int32_t WifiConnectionStatus::_internal_rssi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rssi_;
}
inline void WifiConnectionStatus::_internal_set_rssi(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rssi_ = value;
}

// -------------------------------------------------------------------

// EthernetConnectionStatus

// .meshtastic.NetworkConnectionStatus status = 1;
inline bool EthernetConnectionStatus::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline void EthernetConnectionStatus::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::meshtastic::NetworkConnectionStatus& EthernetConnectionStatus::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::NetworkConnectionStatus* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::NetworkConnectionStatus&>(::meshtastic::_NetworkConnectionStatus_default_instance_);
}
inline const ::meshtastic::NetworkConnectionStatus& EthernetConnectionStatus::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.EthernetConnectionStatus.status)
  return _internal_status();
}
inline void EthernetConnectionStatus::unsafe_arena_set_allocated_status(
    ::meshtastic::NetworkConnectionStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::meshtastic::NetworkConnectionStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.EthernetConnectionStatus.status)
}
inline ::meshtastic::NetworkConnectionStatus* PROTOBUF_NULLABLE EthernetConnectionStatus::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001U;
  ::meshtastic::NetworkConnectionStatus* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::NetworkConnectionStatus* PROTOBUF_NULLABLE EthernetConnectionStatus::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.EthernetConnectionStatus.status)

  _impl_._has_bits_[0] &= ~0x00000001U;
  ::meshtastic::NetworkConnectionStatus* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::meshtastic::NetworkConnectionStatus* PROTOBUF_NONNULL EthernetConnectionStatus::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::NetworkConnectionStatus>(GetArena());
    _impl_.status_ = reinterpret_cast<::meshtastic::NetworkConnectionStatus*>(p);
  }
  return _impl_.status_;
}
inline ::meshtastic::NetworkConnectionStatus* PROTOBUF_NONNULL EthernetConnectionStatus::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001U;
  ::meshtastic::NetworkConnectionStatus* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:meshtastic.EthernetConnectionStatus.status)
  return _msg;
}
inline void EthernetConnectionStatus::set_allocated_status(::meshtastic::NetworkConnectionStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }

  _impl_.status_ = reinterpret_cast<::meshtastic::NetworkConnectionStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.EthernetConnectionStatus.status)
}

// -------------------------------------------------------------------

// NetworkConnectionStatus

// fixed32 ip_address = 1;
inline void NetworkConnectionStatus::clear_ip_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_address_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::uint32_t NetworkConnectionStatus::ip_address() const {
  // @@protoc_insertion_point(field_get:meshtastic.NetworkConnectionStatus.ip_address)
  return _internal_ip_address();
}
inline void NetworkConnectionStatus::set_ip_address(::uint32_t value) {
  _internal_set_ip_address(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:meshtastic.NetworkConnectionStatus.ip_address)
}
inline ::uint32_t NetworkConnectionStatus::_internal_ip_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ip_address_;
}
inline void NetworkConnectionStatus::_internal_set_ip_address(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_address_ = value;
}

// bool is_connected = 2;
inline void NetworkConnectionStatus::clear_is_connected() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_connected_ = false;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline bool NetworkConnectionStatus::is_connected() const {
  // @@protoc_insertion_point(field_get:meshtastic.NetworkConnectionStatus.is_connected)
  return _internal_is_connected();
}
inline void NetworkConnectionStatus::set_is_connected(bool value) {
  _internal_set_is_connected(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.NetworkConnectionStatus.is_connected)
}
inline bool NetworkConnectionStatus::_internal_is_connected() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_connected_;
}
inline void NetworkConnectionStatus::_internal_set_is_connected(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_connected_ = value;
}

// bool is_mqtt_connected = 3;
inline void NetworkConnectionStatus::clear_is_mqtt_connected() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_mqtt_connected_ = false;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline bool NetworkConnectionStatus::is_mqtt_connected() const {
  // @@protoc_insertion_point(field_get:meshtastic.NetworkConnectionStatus.is_mqtt_connected)
  return _internal_is_mqtt_connected();
}
inline void NetworkConnectionStatus::set_is_mqtt_connected(bool value) {
  _internal_set_is_mqtt_connected(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:meshtastic.NetworkConnectionStatus.is_mqtt_connected)
}
inline bool NetworkConnectionStatus::_internal_is_mqtt_connected() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_mqtt_connected_;
}
inline void NetworkConnectionStatus::_internal_set_is_mqtt_connected(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_mqtt_connected_ = value;
}

// bool is_syslog_connected = 4;
inline void NetworkConnectionStatus::clear_is_syslog_connected() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_syslog_connected_ = false;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline bool NetworkConnectionStatus::is_syslog_connected() const {
  // @@protoc_insertion_point(field_get:meshtastic.NetworkConnectionStatus.is_syslog_connected)
  return _internal_is_syslog_connected();
}
inline void NetworkConnectionStatus::set_is_syslog_connected(bool value) {
  _internal_set_is_syslog_connected(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:meshtastic.NetworkConnectionStatus.is_syslog_connected)
}
inline bool NetworkConnectionStatus::_internal_is_syslog_connected() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_syslog_connected_;
}
inline void NetworkConnectionStatus::_internal_set_is_syslog_connected(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_syslog_connected_ = value;
}

// -------------------------------------------------------------------

// BluetoothConnectionStatus

// uint32 pin = 1;
inline void BluetoothConnectionStatus::clear_pin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pin_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::uint32_t BluetoothConnectionStatus::pin() const {
  // @@protoc_insertion_point(field_get:meshtastic.BluetoothConnectionStatus.pin)
  return _internal_pin();
}
inline void BluetoothConnectionStatus::set_pin(::uint32_t value) {
  _internal_set_pin(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:meshtastic.BluetoothConnectionStatus.pin)
}
inline ::uint32_t BluetoothConnectionStatus::_internal_pin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pin_;
}
inline void BluetoothConnectionStatus::_internal_set_pin(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pin_ = value;
}

// int32 rssi = 2;
inline void BluetoothConnectionStatus::clear_rssi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rssi_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int32_t BluetoothConnectionStatus::rssi() const {
  // @@protoc_insertion_point(field_get:meshtastic.BluetoothConnectionStatus.rssi)
  return _internal_rssi();
}
inline void BluetoothConnectionStatus::set_rssi(::int32_t value) {
  _internal_set_rssi(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.BluetoothConnectionStatus.rssi)
}
inline ::int32_t BluetoothConnectionStatus::_internal_rssi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rssi_;
}
inline void BluetoothConnectionStatus::_internal_set_rssi(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rssi_ = value;
}

// bool is_connected = 3;
inline void BluetoothConnectionStatus::clear_is_connected() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_connected_ = false;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline bool BluetoothConnectionStatus::is_connected() const {
  // @@protoc_insertion_point(field_get:meshtastic.BluetoothConnectionStatus.is_connected)
  return _internal_is_connected();
}
inline void BluetoothConnectionStatus::set_is_connected(bool value) {
  _internal_set_is_connected(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:meshtastic.BluetoothConnectionStatus.is_connected)
}
inline bool BluetoothConnectionStatus::_internal_is_connected() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_connected_;
}
inline void BluetoothConnectionStatus::_internal_set_is_connected(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_connected_ = value;
}

// -------------------------------------------------------------------

// SerialConnectionStatus

// uint32 baud = 1;
inline void SerialConnectionStatus::clear_baud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.baud_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::uint32_t SerialConnectionStatus::baud() const {
  // @@protoc_insertion_point(field_get:meshtastic.SerialConnectionStatus.baud)
  return _internal_baud();
}
inline void SerialConnectionStatus::set_baud(::uint32_t value) {
  _internal_set_baud(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:meshtastic.SerialConnectionStatus.baud)
}
inline ::uint32_t SerialConnectionStatus::_internal_baud() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.baud_;
}
inline void SerialConnectionStatus::_internal_set_baud(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.baud_ = value;
}

// bool is_connected = 2;
inline void SerialConnectionStatus::clear_is_connected() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_connected_ = false;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline bool SerialConnectionStatus::is_connected() const {
  // @@protoc_insertion_point(field_get:meshtastic.SerialConnectionStatus.is_connected)
  return _internal_is_connected();
}
inline void SerialConnectionStatus::set_is_connected(bool value) {
  _internal_set_is_connected(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.SerialConnectionStatus.is_connected)
}
inline bool SerialConnectionStatus::_internal_is_connected() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_connected_;
}
inline void SerialConnectionStatus::_internal_set_is_connected(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_connected_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace meshtastic


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // meshtastic_2fconnection_5fstatus_2eproto_2epb_2eh
