// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: meshtastic/deviceonly.proto
// Protobuf C++ Version: 6.32.0

#include "meshtastic/deviceonly.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace meshtastic {

inline constexpr UserLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        macaddr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        long_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        short_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        public_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hw_model_{static_cast< ::meshtastic::HardwareModel >(0)},
        role_{static_cast< ::meshtastic::Config_DeviceConfig_Role >(0)},
        is_licensed_{false},
        is_unmessagable_{false} {}

template <typename>
PROTOBUF_CONSTEXPR UserLite::UserLite(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UserLite_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UserLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserLiteDefaultTypeInternal() {}
  union {
    UserLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserLiteDefaultTypeInternal _UserLite_default_instance_;

inline constexpr PositionLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        latitude_i_{0},
        longitude_i_{0},
        altitude_{0},
        time_{0u},
        location_source_{static_cast< ::meshtastic::Position_LocSource >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR PositionLite::PositionLite(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PositionLite_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionLiteDefaultTypeInternal() {}
  union {
    PositionLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionLiteDefaultTypeInternal _PositionLite_default_instance_;

inline constexpr NodeInfoLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        user_{nullptr},
        position_{nullptr},
        device_metrics_{nullptr},
        num_{0u},
        snr_{0},
        last_heard_{0u},
        channel_{0u},
        hops_away_{0u},
        via_mqtt_{false},
        is_favorite_{false},
        is_ignored_{false},
        next_hop_{0u},
        bitfield_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR NodeInfoLite::NodeInfoLite(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NodeInfoLite_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeInfoLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeInfoLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeInfoLiteDefaultTypeInternal() {}
  union {
    NodeInfoLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeInfoLiteDefaultTypeInternal _NodeInfoLite_default_instance_;

inline constexpr NodeDatabase::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        nodes_{},
        version_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR NodeDatabase::NodeDatabase(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NodeDatabase_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeDatabaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeDatabaseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeDatabaseDefaultTypeInternal() {}
  union {
    NodeDatabase _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeDatabaseDefaultTypeInternal _NodeDatabase_default_instance_;

inline constexpr DeviceState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        receive_queue_{},
        node_remote_hardware_pins_{},
        my_node_{nullptr},
        owner_{nullptr},
        rx_text_message_{nullptr},
        rx_waypoint_{nullptr},
        version_{0u},
        no_save_{false},
        did_gps_reset_{false} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceState::DeviceState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DeviceState_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeviceStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceStateDefaultTypeInternal() {}
  union {
    DeviceState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceStateDefaultTypeInternal _DeviceState_default_instance_;

inline constexpr ChannelFile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        channels_{},
        version_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelFile::ChannelFile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ChannelFile_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChannelFileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelFileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelFileDefaultTypeInternal() {}
  union {
    ChannelFile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelFileDefaultTypeInternal _ChannelFile_default_instance_;

inline constexpr BackupPreferences::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        config_{nullptr},
        module_config_{nullptr},
        channels_{nullptr},
        owner_{nullptr},
        version_{0u},
        timestamp_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR BackupPreferences::BackupPreferences(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BackupPreferences_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BackupPreferencesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BackupPreferencesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BackupPreferencesDefaultTypeInternal() {}
  union {
    BackupPreferences _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BackupPreferencesDefaultTypeInternal _BackupPreferences_default_instance_;
}  // namespace meshtastic
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_meshtastic_2fdeviceonly_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_meshtastic_2fdeviceonly_2eproto = nullptr;
const ::uint32_t
    TableStruct_meshtastic_2fdeviceonly_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::PositionLite, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::PositionLite, _impl_.latitude_i_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::PositionLite, _impl_.longitude_i_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::PositionLite, _impl_.altitude_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::PositionLite, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::PositionLite, _impl_.location_source_),
        0,
        1,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::UserLite, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::UserLite, _impl_.macaddr_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::UserLite, _impl_.long_name_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::UserLite, _impl_.short_name_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::UserLite, _impl_.hw_model_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::UserLite, _impl_.is_licensed_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::UserLite, _impl_.role_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::UserLite, _impl_.public_key_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::UserLite, _impl_.is_unmessagable_),
        0,
        1,
        2,
        4,
        6,
        5,
        3,
        7,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::NodeInfoLite, _impl_._has_bits_),
        16, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::NodeInfoLite, _impl_.num_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::NodeInfoLite, _impl_.user_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::NodeInfoLite, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::NodeInfoLite, _impl_.snr_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::NodeInfoLite, _impl_.last_heard_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::NodeInfoLite, _impl_.device_metrics_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::NodeInfoLite, _impl_.channel_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::NodeInfoLite, _impl_.via_mqtt_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::NodeInfoLite, _impl_.hops_away_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::NodeInfoLite, _impl_.is_favorite_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::NodeInfoLite, _impl_.is_ignored_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::NodeInfoLite, _impl_.next_hop_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::NodeInfoLite, _impl_.bitfield_),
        3,
        0,
        1,
        4,
        5,
        2,
        6,
        8,
        7,
        9,
        10,
        11,
        12,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceState, _impl_._has_bits_),
        12, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceState, _impl_.my_node_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceState, _impl_.owner_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceState, _impl_.receive_queue_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceState, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceState, _impl_.rx_text_message_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceState, _impl_.no_save_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceState, _impl_.did_gps_reset_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceState, _impl_.rx_waypoint_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceState, _impl_.node_remote_hardware_pins_),
        0,
        1,
        ~0u,
        4,
        2,
        5,
        6,
        3,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::NodeDatabase, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::NodeDatabase, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::NodeDatabase, _impl_.nodes_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::ChannelFile, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::ChannelFile, _impl_.channels_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::ChannelFile, _impl_.version_),
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::BackupPreferences, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::BackupPreferences, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::BackupPreferences, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::BackupPreferences, _impl_.config_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::BackupPreferences, _impl_.module_config_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::BackupPreferences, _impl_.channels_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::BackupPreferences, _impl_.owner_),
        4,
        5,
        0,
        1,
        2,
        3,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::meshtastic::PositionLite)},
        {13, sizeof(::meshtastic::UserLite)},
        {32, sizeof(::meshtastic::NodeInfoLite)},
        {61, sizeof(::meshtastic::DeviceState)},
        {82, sizeof(::meshtastic::NodeDatabase)},
        {89, sizeof(::meshtastic::ChannelFile)},
        {96, sizeof(::meshtastic::BackupPreferences)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::meshtastic::_PositionLite_default_instance_._instance,
    &::meshtastic::_UserLite_default_instance_._instance,
    &::meshtastic::_NodeInfoLite_default_instance_._instance,
    &::meshtastic::_DeviceState_default_instance_._instance,
    &::meshtastic::_NodeDatabase_default_instance_._instance,
    &::meshtastic::_ChannelFile_default_instance_._instance,
    &::meshtastic::_BackupPreferences_default_instance_._instance,
};
const char descriptor_table_protodef_meshtastic_2fdeviceonly_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\033meshtastic/deviceonly.proto\022\nmeshtasti"
    "c\032\030meshtastic/channel.proto\032\027meshtastic/"
    "config.proto\032\032meshtastic/localonly.proto"
    "\032\025meshtastic/mesh.proto\032\032meshtastic/tele"
    "metry.proto\032\014nanopb.proto\"\220\001\n\014PositionLi"
    "te\022\022\n\nlatitude_i\030\001 \001(\017\022\023\n\013longitude_i\030\002 "
    "\001(\017\022\020\n\010altitude\030\003 \001(\005\022\014\n\004time\030\004 \001(\007\0227\n\017l"
    "ocation_source\030\005 \001(\0162\036.meshtastic.Positi"
    "on.LocSource\"\202\002\n\010UserLite\022\023\n\007macaddr\030\001 \001"
    "(\014B\002\030\001\022\021\n\tlong_name\030\002 \001(\t\022\022\n\nshort_name\030"
    "\003 \001(\t\022+\n\010hw_model\030\004 \001(\0162\031.meshtastic.Har"
    "dwareModel\022\023\n\013is_licensed\030\005 \001(\010\0222\n\004role\030"
    "\006 \001(\0162$.meshtastic.Config.DeviceConfig.R"
    "ole\022\022\n\npublic_key\030\007 \001(\014\022\034\n\017is_unmessagab"
    "le\030\t \001(\010H\000\210\001\001B\022\n\020_is_unmessagable\"\325\002\n\014No"
    "deInfoLite\022\013\n\003num\030\001 \001(\r\022\"\n\004user\030\002 \001(\0132\024."
    "meshtastic.UserLite\022*\n\010position\030\003 \001(\0132\030."
    "meshtastic.PositionLite\022\013\n\003snr\030\004 \001(\002\022\022\n\n"
    "last_heard\030\005 \001(\007\0221\n\016device_metrics\030\006 \001(\013"
    "2\031.meshtastic.DeviceMetrics\022\017\n\007channel\030\007"
    " \001(\r\022\020\n\010via_mqtt\030\010 \001(\010\022\026\n\thops_away\030\t \001("
    "\rH\000\210\001\001\022\023\n\013is_favorite\030\n \001(\010\022\022\n\nis_ignore"
    "d\030\013 \001(\010\022\020\n\010next_hop\030\014 \001(\r\022\020\n\010bitfield\030\r "
    "\001(\rB\014\n\n_hops_away\"\353\002\n\013DeviceState\022\'\n\007my_"
    "node\030\002 \001(\0132\026.meshtastic.MyNodeInfo\022\037\n\005ow"
    "ner\030\003 \001(\0132\020.meshtastic.User\022-\n\rreceive_q"
    "ueue\030\005 \003(\0132\026.meshtastic.MeshPacket\022\017\n\007ve"
    "rsion\030\010 \001(\r\022/\n\017rx_text_message\030\007 \001(\0132\026.m"
    "eshtastic.MeshPacket\022\023\n\007no_save\030\t \001(\010B\002\030"
    "\001\022\031\n\rdid_gps_reset\030\013 \001(\010B\002\030\001\022+\n\013rx_waypo"
    "int\030\014 \001(\0132\026.meshtastic.MeshPacket\022D\n\031nod"
    "e_remote_hardware_pins\030\r \003(\0132!.meshtasti"
    "c.NodeRemoteHardwarePin\"t\n\014NodeDatabase\022"
    "\017\n\007version\030\001 \001(\r\022S\n\005nodes\030\002 \003(\0132\030.meshta"
    "stic.NodeInfoLiteB*\222\?\'\222\001$std::vector<mes"
    "htastic_NodeInfoLite>\"E\n\013ChannelFile\022%\n\010"
    "channels\030\001 \003(\0132\023.meshtastic.Channel\022\017\n\007v"
    "ersion\030\002 \001(\r\"\342\001\n\021BackupPreferences\022\017\n\007ve"
    "rsion\030\001 \001(\r\022\021\n\ttimestamp\030\002 \001(\007\022\'\n\006config"
    "\030\003 \001(\0132\027.meshtastic.LocalConfig\0224\n\rmodul"
    "e_config\030\004 \001(\0132\035.meshtastic.LocalModuleC"
    "onfig\022)\n\010channels\030\005 \001(\0132\027.meshtastic.Cha"
    "nnelFile\022\037\n\005owner\030\006 \001(\0132\020.meshtastic.Use"
    "rBm\n\023com.geeksville.meshB\nDeviceOnlyZ\"gi"
    "thub.com/meshtastic/go/generated\252\002\024Mesht"
    "astic.Protobufs\272\002\000\222\?\013\302\001\010<vector>b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_meshtastic_2fdeviceonly_2eproto_deps[6] = {
        &::descriptor_table_meshtastic_2fchannel_2eproto,
        &::descriptor_table_meshtastic_2fconfig_2eproto,
        &::descriptor_table_meshtastic_2flocalonly_2eproto,
        &::descriptor_table_meshtastic_2fmesh_2eproto,
        &::descriptor_table_meshtastic_2ftelemetry_2eproto,
        &::descriptor_table_nanopb_2eproto,
};
static ::absl::once_flag descriptor_table_meshtastic_2fdeviceonly_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_meshtastic_2fdeviceonly_2eproto = {
    false,
    false,
    1840,
    descriptor_table_protodef_meshtastic_2fdeviceonly_2eproto,
    "meshtastic/deviceonly.proto",
    &descriptor_table_meshtastic_2fdeviceonly_2eproto_once,
    descriptor_table_meshtastic_2fdeviceonly_2eproto_deps,
    6,
    7,
    schemas,
    file_default_instances,
    TableStruct_meshtastic_2fdeviceonly_2eproto::offsets,
    file_level_enum_descriptors_meshtastic_2fdeviceonly_2eproto,
    file_level_service_descriptors_meshtastic_2fdeviceonly_2eproto,
};
namespace meshtastic {
// ===================================================================

class PositionLite::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PositionLite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PositionLite, _impl_._has_bits_);
};

PositionLite::PositionLite(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PositionLite_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.PositionLite)
}
PositionLite::PositionLite(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PositionLite& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PositionLite_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE PositionLite::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void PositionLite::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_i_),
           0,
           offsetof(Impl_, location_source_) -
               offsetof(Impl_, latitude_i_) +
               sizeof(Impl_::location_source_));
}
PositionLite::~PositionLite() {
  // @@protoc_insertion_point(destructor:meshtastic.PositionLite)
  SharedDtor(*this);
}
inline void PositionLite::SharedDtor(MessageLite& self) {
  PositionLite& this_ = static_cast<PositionLite&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PositionLite::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PositionLite(arena);
}
constexpr auto PositionLite::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PositionLite),
                                            alignof(PositionLite));
}
constexpr auto PositionLite::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PositionLite_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PositionLite::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PositionLite>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PositionLite::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PositionLite>(), &PositionLite::ByteSizeLong,
              &PositionLite::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PositionLite, _impl_._cached_size_),
          false,
      },
      &PositionLite::kDescriptorMethods,
      &descriptor_table_meshtastic_2fdeviceonly_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PositionLite_class_data_ =
        PositionLite::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PositionLite::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PositionLite_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PositionLite_class_data_.tc_table);
  return PositionLite_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2>
PositionLite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PositionLite, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PositionLite_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::PositionLite>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // sfixed32 latitude_i = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(PositionLite, _impl_.latitude_i_)}},
    // sfixed32 longitude_i = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(PositionLite, _impl_.longitude_i_)}},
    // int32 altitude = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PositionLite, _impl_.altitude_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(PositionLite, _impl_.altitude_)}},
    // fixed32 time = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(PositionLite, _impl_.time_)}},
    // .meshtastic.Position.LocSource location_source = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PositionLite, _impl_.location_source_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(PositionLite, _impl_.location_source_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // sfixed32 latitude_i = 1;
    {PROTOBUF_FIELD_OFFSET(PositionLite, _impl_.latitude_i_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kSFixed32)},
    // sfixed32 longitude_i = 2;
    {PROTOBUF_FIELD_OFFSET(PositionLite, _impl_.longitude_i_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kSFixed32)},
    // int32 altitude = 3;
    {PROTOBUF_FIELD_OFFSET(PositionLite, _impl_.altitude_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // fixed32 time = 4;
    {PROTOBUF_FIELD_OFFSET(PositionLite, _impl_.time_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // .meshtastic.Position.LocSource location_source = 5;
    {PROTOBUF_FIELD_OFFSET(PositionLite, _impl_.location_source_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void PositionLite::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.PositionLite)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    ::memset(&_impl_.latitude_i_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.location_source_) -
        reinterpret_cast<char*>(&_impl_.latitude_i_)) + sizeof(_impl_.location_source_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PositionLite::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PositionLite& this_ = static_cast<const PositionLite&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PositionLite::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PositionLite& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.PositionLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // sfixed32 latitude_i = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_latitude_i() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteSFixed32ToArray(
          1, this_._internal_latitude_i(), target);
    }
  }

  // sfixed32 longitude_i = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_longitude_i() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteSFixed32ToArray(
          2, this_._internal_longitude_i(), target);
    }
  }

  // int32 altitude = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_altitude() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_altitude(), target);
    }
  }

  // fixed32 time = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_time() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
          4, this_._internal_time(), target);
    }
  }

  // .meshtastic.Position.LocSource location_source = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_location_source() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_location_source(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.PositionLite)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PositionLite::ByteSizeLong(const MessageLite& base) {
  const PositionLite& this_ = static_cast<const PositionLite&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PositionLite::ByteSizeLong() const {
  const PositionLite& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.PositionLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // sfixed32 latitude_i = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_latitude_i() != 0) {
        total_size += 5;
      }
    }
    // sfixed32 longitude_i = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_longitude_i() != 0) {
        total_size += 5;
      }
    }
    // int32 altitude = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_altitude() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_altitude());
      }
    }
    // fixed32 time = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_time() != 0) {
        total_size += 5;
      }
    }
    // .meshtastic.Position.LocSource location_source = 5;
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_location_source() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_location_source());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PositionLite::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionLite*>(&to_msg);
  auto& from = static_cast<const PositionLite&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.PositionLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_latitude_i() != 0) {
        _this->_impl_.latitude_i_ = from._impl_.latitude_i_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_longitude_i() != 0) {
        _this->_impl_.longitude_i_ = from._impl_.longitude_i_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_altitude() != 0) {
        _this->_impl_.altitude_ = from._impl_.altitude_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_time() != 0) {
        _this->_impl_.time_ = from._impl_.time_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_location_source() != 0) {
        _this->_impl_.location_source_ = from._impl_.location_source_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionLite::CopyFrom(const PositionLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.PositionLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionLite::InternalSwap(PositionLite* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionLite, _impl_.location_source_)
      + sizeof(PositionLite::_impl_.location_source_)
      - PROTOBUF_FIELD_OFFSET(PositionLite, _impl_.latitude_i_)>(
          reinterpret_cast<char*>(&_impl_.latitude_i_),
          reinterpret_cast<char*>(&other->_impl_.latitude_i_));
}

::google::protobuf::Metadata PositionLite::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UserLite::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UserLite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UserLite, _impl_._has_bits_);
};

UserLite::UserLite(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UserLite_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.UserLite)
}
PROTOBUF_NDEBUG_INLINE UserLite::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::meshtastic::UserLite& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        macaddr_(arena, from.macaddr_),
        long_name_(arena, from.long_name_),
        short_name_(arena, from.short_name_),
        public_key_(arena, from.public_key_) {}

UserLite::UserLite(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UserLite& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UserLite_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UserLite* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hw_model_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, hw_model_),
           offsetof(Impl_, is_unmessagable_) -
               offsetof(Impl_, hw_model_) +
               sizeof(Impl_::is_unmessagable_));

  // @@protoc_insertion_point(copy_constructor:meshtastic.UserLite)
}
PROTOBUF_NDEBUG_INLINE UserLite::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        macaddr_(arena),
        long_name_(arena),
        short_name_(arena),
        public_key_(arena) {}

inline void UserLite::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hw_model_),
           0,
           offsetof(Impl_, is_unmessagable_) -
               offsetof(Impl_, hw_model_) +
               sizeof(Impl_::is_unmessagable_));
}
UserLite::~UserLite() {
  // @@protoc_insertion_point(destructor:meshtastic.UserLite)
  SharedDtor(*this);
}
inline void UserLite::SharedDtor(MessageLite& self) {
  UserLite& this_ = static_cast<UserLite&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.macaddr_.Destroy();
  this_._impl_.long_name_.Destroy();
  this_._impl_.short_name_.Destroy();
  this_._impl_.public_key_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UserLite::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UserLite(arena);
}
constexpr auto UserLite::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UserLite),
                                            alignof(UserLite));
}
constexpr auto UserLite::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UserLite_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UserLite::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UserLite>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UserLite::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UserLite>(), &UserLite::ByteSizeLong,
              &UserLite::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UserLite, _impl_._cached_size_),
          false,
      },
      &UserLite::kDescriptorMethods,
      &descriptor_table_meshtastic_2fdeviceonly_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UserLite_class_data_ =
        UserLite::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UserLite::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UserLite_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UserLite_class_data_.tc_table);
  return UserLite_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 0, 55, 2>
UserLite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserLite, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    UserLite_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::UserLite>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes macaddr = 1 [deprecated = true];
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UserLite, _impl_.macaddr_)}},
    // string long_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(UserLite, _impl_.long_name_)}},
    // string short_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(UserLite, _impl_.short_name_)}},
    // .meshtastic.HardwareModel hw_model = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserLite, _impl_.hw_model_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(UserLite, _impl_.hw_model_)}},
    // bool is_licensed = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(UserLite, _impl_.is_licensed_), 6>(),
     {40, 6, 0, PROTOBUF_FIELD_OFFSET(UserLite, _impl_.is_licensed_)}},
    // .meshtastic.Config.DeviceConfig.Role role = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserLite, _impl_.role_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(UserLite, _impl_.role_)}},
    // bytes public_key = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 3, 0, PROTOBUF_FIELD_OFFSET(UserLite, _impl_.public_key_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool is_unmessagable = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(UserLite, _impl_.is_unmessagable_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(UserLite, _impl_.is_unmessagable_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes macaddr = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(UserLite, _impl_.macaddr_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // string long_name = 2;
    {PROTOBUF_FIELD_OFFSET(UserLite, _impl_.long_name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string short_name = 3;
    {PROTOBUF_FIELD_OFFSET(UserLite, _impl_.short_name_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .meshtastic.HardwareModel hw_model = 4;
    {PROTOBUF_FIELD_OFFSET(UserLite, _impl_.hw_model_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // bool is_licensed = 5;
    {PROTOBUF_FIELD_OFFSET(UserLite, _impl_.is_licensed_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .meshtastic.Config.DeviceConfig.Role role = 6;
    {PROTOBUF_FIELD_OFFSET(UserLite, _impl_.role_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // bytes public_key = 7;
    {PROTOBUF_FIELD_OFFSET(UserLite, _impl_.public_key_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bool is_unmessagable = 9;
    {PROTOBUF_FIELD_OFFSET(UserLite, _impl_.is_unmessagable_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\23\0\11\12\0\0\0\0\0\0\0\0\0\0\0\0"
    "meshtastic.UserLite"
    "long_name"
    "short_name"
  }},
};
PROTOBUF_NOINLINE void UserLite::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.UserLite)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.macaddr_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.long_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.short_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.public_key_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000f0U) != 0) {
    ::memset(&_impl_.hw_model_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_unmessagable_) -
        reinterpret_cast<char*>(&_impl_.hw_model_)) + sizeof(_impl_.is_unmessagable_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UserLite::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UserLite& this_ = static_cast<const UserLite&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UserLite::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UserLite& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.UserLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes macaddr = 1 [deprecated = true];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_macaddr().empty()) {
      const ::std::string& _s = this_._internal_macaddr();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // string long_name = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_long_name().empty()) {
      const ::std::string& _s = this_._internal_long_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.UserLite.long_name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string short_name = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_short_name().empty()) {
      const ::std::string& _s = this_._internal_short_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.UserLite.short_name");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // .meshtastic.HardwareModel hw_model = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_hw_model() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_hw_model(), target);
    }
  }

  // bool is_licensed = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (this_._internal_is_licensed() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_is_licensed(), target);
    }
  }

  // .meshtastic.Config.DeviceConfig.Role role = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_role() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          6, this_._internal_role(), target);
    }
  }

  // bytes public_key = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_public_key().empty()) {
      const ::std::string& _s = this_._internal_public_key();
      target = stream->WriteBytesMaybeAliased(7, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional bool is_unmessagable = 9;
  if ((cached_has_bits & 0x00000080U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        9, this_._internal_is_unmessagable(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.UserLite)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UserLite::ByteSizeLong(const MessageLite& base) {
  const UserLite& this_ = static_cast<const UserLite&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UserLite::ByteSizeLong() const {
  const UserLite& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.UserLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000080U & cached_has_bits) * 2;
  if ((cached_has_bits & 0x0000007fU) != 0) {
    // bytes macaddr = 1 [deprecated = true];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_macaddr().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_macaddr());
      }
    }
    // string long_name = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_long_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_long_name());
      }
    }
    // string short_name = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_short_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_short_name());
      }
    }
    // bytes public_key = 7;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_public_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_public_key());
      }
    }
    // .meshtastic.HardwareModel hw_model = 4;
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_hw_model() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_hw_model());
      }
    }
    // .meshtastic.Config.DeviceConfig.Role role = 6;
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_role() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_role());
      }
    }
    // bool is_licensed = 5;
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_is_licensed() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UserLite::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserLite*>(&to_msg);
  auto& from = static_cast<const UserLite&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.UserLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_macaddr().empty()) {
        _this->_internal_set_macaddr(from._internal_macaddr());
      } else {
        if (_this->_impl_.macaddr_.IsDefault()) {
          _this->_internal_set_macaddr("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_long_name().empty()) {
        _this->_internal_set_long_name(from._internal_long_name());
      } else {
        if (_this->_impl_.long_name_.IsDefault()) {
          _this->_internal_set_long_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_short_name().empty()) {
        _this->_internal_set_short_name(from._internal_short_name());
      } else {
        if (_this->_impl_.short_name_.IsDefault()) {
          _this->_internal_set_short_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_public_key().empty()) {
        _this->_internal_set_public_key(from._internal_public_key());
      } else {
        if (_this->_impl_.public_key_.IsDefault()) {
          _this->_internal_set_public_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_hw_model() != 0) {
        _this->_impl_.hw_model_ = from._impl_.hw_model_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_role() != 0) {
        _this->_impl_.role_ = from._impl_.role_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_is_licensed() != 0) {
        _this->_impl_.is_licensed_ = from._impl_.is_licensed_;
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      _this->_impl_.is_unmessagable_ = from._impl_.is_unmessagable_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserLite::CopyFrom(const UserLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.UserLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UserLite::InternalSwap(UserLite* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.macaddr_, &other->_impl_.macaddr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.long_name_, &other->_impl_.long_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.short_name_, &other->_impl_.short_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.public_key_, &other->_impl_.public_key_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserLite, _impl_.is_unmessagable_)
      + sizeof(UserLite::_impl_.is_unmessagable_)
      - PROTOBUF_FIELD_OFFSET(UserLite, _impl_.hw_model_)>(
          reinterpret_cast<char*>(&_impl_.hw_model_),
          reinterpret_cast<char*>(&other->_impl_.hw_model_));
}

::google::protobuf::Metadata UserLite::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeInfoLite::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NodeInfoLite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_._has_bits_);
};

void NodeInfoLite::clear_device_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_metrics_ != nullptr) _impl_.device_metrics_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
NodeInfoLite::NodeInfoLite(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NodeInfoLite_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.NodeInfoLite)
}
PROTOBUF_NDEBUG_INLINE NodeInfoLite::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::meshtastic::NodeInfoLite& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NodeInfoLite::NodeInfoLite(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const NodeInfoLite& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NodeInfoLite_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeInfoLite* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.user_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.user_)
                : nullptr;
  _impl_.position_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_)
                : nullptr;
  _impl_.device_metrics_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.device_metrics_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, num_),
           offsetof(Impl_, bitfield_) -
               offsetof(Impl_, num_) +
               sizeof(Impl_::bitfield_));

  // @@protoc_insertion_point(copy_constructor:meshtastic.NodeInfoLite)
}
PROTOBUF_NDEBUG_INLINE NodeInfoLite::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void NodeInfoLite::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, user_),
           0,
           offsetof(Impl_, bitfield_) -
               offsetof(Impl_, user_) +
               sizeof(Impl_::bitfield_));
}
NodeInfoLite::~NodeInfoLite() {
  // @@protoc_insertion_point(destructor:meshtastic.NodeInfoLite)
  SharedDtor(*this);
}
inline void NodeInfoLite::SharedDtor(MessageLite& self) {
  NodeInfoLite& this_ = static_cast<NodeInfoLite&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.user_;
  delete this_._impl_.position_;
  delete this_._impl_.device_metrics_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NodeInfoLite::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NodeInfoLite(arena);
}
constexpr auto NodeInfoLite::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(NodeInfoLite),
                                            alignof(NodeInfoLite));
}
constexpr auto NodeInfoLite::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NodeInfoLite_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NodeInfoLite::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NodeInfoLite>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NodeInfoLite::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NodeInfoLite>(), &NodeInfoLite::ByteSizeLong,
              &NodeInfoLite::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_._cached_size_),
          false,
      },
      &NodeInfoLite::kDescriptorMethods,
      &descriptor_table_meshtastic_2fdeviceonly_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NodeInfoLite_class_data_ =
        NodeInfoLite::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NodeInfoLite::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NodeInfoLite_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NodeInfoLite_class_data_.tc_table);
  return NodeInfoLite_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 3, 0, 2>
NodeInfoLite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    NodeInfoLite_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::NodeInfoLite>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 num = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeInfoLite, _impl_.num_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.num_)}},
    // .meshtastic.UserLite user = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.user_)}},
    // .meshtastic.PositionLite position = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.position_)}},
    // float snr = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 4, 0, PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.snr_)}},
    // fixed32 last_heard = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 5, 0, PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.last_heard_)}},
    // .meshtastic.DeviceMetrics device_metrics = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 2, 2, PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.device_metrics_)}},
    // uint32 channel = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeInfoLite, _impl_.channel_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.channel_)}},
    // bool via_mqtt = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NodeInfoLite, _impl_.via_mqtt_), 8>(),
     {64, 8, 0, PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.via_mqtt_)}},
    // optional uint32 hops_away = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeInfoLite, _impl_.hops_away_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.hops_away_)}},
    // bool is_favorite = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NodeInfoLite, _impl_.is_favorite_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.is_favorite_)}},
    // bool is_ignored = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NodeInfoLite, _impl_.is_ignored_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.is_ignored_)}},
    // uint32 next_hop = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeInfoLite, _impl_.next_hop_), 11>(),
     {96, 11, 0, PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.next_hop_)}},
    // uint32 bitfield = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeInfoLite, _impl_.bitfield_), 12>(),
     {104, 12, 0, PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.bitfield_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 num = 1;
    {PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.num_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .meshtastic.UserLite user = 2;
    {PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.user_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.PositionLite position = 3;
    {PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.position_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float snr = 4;
    {PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.snr_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // fixed32 last_heard = 5;
    {PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.last_heard_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // .meshtastic.DeviceMetrics device_metrics = 6;
    {PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.device_metrics_), _Internal::kHasBitsOffset + 2, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 channel = 7;
    {PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.channel_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bool via_mqtt = 8;
    {PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.via_mqtt_), _Internal::kHasBitsOffset + 8, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 hops_away = 9;
    {PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.hops_away_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bool is_favorite = 10;
    {PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.is_favorite_), _Internal::kHasBitsOffset + 9, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool is_ignored = 11;
    {PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.is_ignored_), _Internal::kHasBitsOffset + 10, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // uint32 next_hop = 12;
    {PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.next_hop_), _Internal::kHasBitsOffset + 11, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 bitfield = 13;
    {PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.bitfield_), _Internal::kHasBitsOffset + 12, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::UserLite>()},
      {::_pbi::TcParser::GetTable<::meshtastic::PositionLite>()},
      {::_pbi::TcParser::GetTable<::meshtastic::DeviceMetrics>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void NodeInfoLite::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.NodeInfoLite)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.user_ != nullptr);
      _impl_.user_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.device_metrics_ != nullptr);
      _impl_.device_metrics_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000f8U) != 0) {
    ::memset(&_impl_.num_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.hops_away_) -
        reinterpret_cast<char*>(&_impl_.num_)) + sizeof(_impl_.hops_away_));
  }
  if ((cached_has_bits & 0x00001f00U) != 0) {
    ::memset(&_impl_.via_mqtt_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.bitfield_) -
        reinterpret_cast<char*>(&_impl_.via_mqtt_)) + sizeof(_impl_.bitfield_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NodeInfoLite::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NodeInfoLite& this_ = static_cast<const NodeInfoLite&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NodeInfoLite::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NodeInfoLite& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.NodeInfoLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 num = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_num() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_num(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .meshtastic.UserLite user = 2;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.user_, this_._impl_.user_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.PositionLite position = 3;
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
        stream);
  }

  // float snr = 4;
  if ((cached_has_bits & 0x00000010U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_snr()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          4, this_._internal_snr(), target);
    }
  }

  // fixed32 last_heard = 5;
  if ((cached_has_bits & 0x00000020U) != 0) {
    if (this_._internal_last_heard() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
          5, this_._internal_last_heard(), target);
    }
  }

  // .meshtastic.DeviceMetrics device_metrics = 6;
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.device_metrics_, this_._impl_.device_metrics_->GetCachedSize(), target,
        stream);
  }

  // uint32 channel = 7;
  if ((cached_has_bits & 0x00000040U) != 0) {
    if (this_._internal_channel() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          7, this_._internal_channel(), target);
    }
  }

  // bool via_mqtt = 8;
  if ((cached_has_bits & 0x00000100U) != 0) {
    if (this_._internal_via_mqtt() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          8, this_._internal_via_mqtt(), target);
    }
  }

  // optional uint32 hops_away = 9;
  if ((cached_has_bits & 0x00000080U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this_._internal_hops_away(), target);
  }

  // bool is_favorite = 10;
  if ((cached_has_bits & 0x00000200U) != 0) {
    if (this_._internal_is_favorite() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          10, this_._internal_is_favorite(), target);
    }
  }

  // bool is_ignored = 11;
  if ((cached_has_bits & 0x00000400U) != 0) {
    if (this_._internal_is_ignored() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          11, this_._internal_is_ignored(), target);
    }
  }

  // uint32 next_hop = 12;
  if ((cached_has_bits & 0x00000800U) != 0) {
    if (this_._internal_next_hop() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          12, this_._internal_next_hop(), target);
    }
  }

  // uint32 bitfield = 13;
  if ((cached_has_bits & 0x00001000U) != 0) {
    if (this_._internal_bitfield() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          13, this_._internal_bitfield(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.NodeInfoLite)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NodeInfoLite::ByteSizeLong(const MessageLite& base) {
  const NodeInfoLite& this_ = static_cast<const NodeInfoLite&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NodeInfoLite::ByteSizeLong() const {
  const NodeInfoLite& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.NodeInfoLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // .meshtastic.UserLite user = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.user_);
    }
    // .meshtastic.PositionLite position = 3;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
    }
    // .meshtastic.DeviceMetrics device_metrics = 6;
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.device_metrics_);
    }
    // uint32 num = 1;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_num() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_num());
      }
    }
    // float snr = 4;
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_snr()) != 0) {
        total_size += 5;
      }
    }
    // fixed32 last_heard = 5;
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_last_heard() != 0) {
        total_size += 5;
      }
    }
    // uint32 channel = 7;
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_channel() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_channel());
      }
    }
    // optional uint32 hops_away = 9;
    if ((cached_has_bits & 0x00000080U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_hops_away());
    }
  }
  if ((cached_has_bits & 0x00001f00U) != 0) {
    // bool via_mqtt = 8;
    if ((cached_has_bits & 0x00000100U) != 0) {
      if (this_._internal_via_mqtt() != 0) {
        total_size += 2;
      }
    }
    // bool is_favorite = 10;
    if ((cached_has_bits & 0x00000200U) != 0) {
      if (this_._internal_is_favorite() != 0) {
        total_size += 2;
      }
    }
    // bool is_ignored = 11;
    if ((cached_has_bits & 0x00000400U) != 0) {
      if (this_._internal_is_ignored() != 0) {
        total_size += 2;
      }
    }
    // uint32 next_hop = 12;
    if ((cached_has_bits & 0x00000800U) != 0) {
      if (this_._internal_next_hop() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_next_hop());
      }
    }
    // uint32 bitfield = 13;
    if ((cached_has_bits & 0x00001000U) != 0) {
      if (this_._internal_bitfield() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_bitfield());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NodeInfoLite::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeInfoLite*>(&to_msg);
  auto& from = static_cast<const NodeInfoLite&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.NodeInfoLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.user_ != nullptr);
      if (_this->_impl_.user_ == nullptr) {
        _this->_impl_.user_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.user_);
      } else {
        _this->_impl_.user_->MergeFrom(*from._impl_.user_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.device_metrics_ != nullptr);
      if (_this->_impl_.device_metrics_ == nullptr) {
        _this->_impl_.device_metrics_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.device_metrics_);
      } else {
        _this->_impl_.device_metrics_->MergeFrom(*from._impl_.device_metrics_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_num() != 0) {
        _this->_impl_.num_ = from._impl_.num_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_snr()) != 0) {
        _this->_impl_.snr_ = from._impl_.snr_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_last_heard() != 0) {
        _this->_impl_.last_heard_ = from._impl_.last_heard_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_channel() != 0) {
        _this->_impl_.channel_ = from._impl_.channel_;
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      _this->_impl_.hops_away_ = from._impl_.hops_away_;
    }
  }
  if ((cached_has_bits & 0x00001f00U) != 0) {
    if ((cached_has_bits & 0x00000100U) != 0) {
      if (from._internal_via_mqtt() != 0) {
        _this->_impl_.via_mqtt_ = from._impl_.via_mqtt_;
      }
    }
    if ((cached_has_bits & 0x00000200U) != 0) {
      if (from._internal_is_favorite() != 0) {
        _this->_impl_.is_favorite_ = from._impl_.is_favorite_;
      }
    }
    if ((cached_has_bits & 0x00000400U) != 0) {
      if (from._internal_is_ignored() != 0) {
        _this->_impl_.is_ignored_ = from._impl_.is_ignored_;
      }
    }
    if ((cached_has_bits & 0x00000800U) != 0) {
      if (from._internal_next_hop() != 0) {
        _this->_impl_.next_hop_ = from._impl_.next_hop_;
      }
    }
    if ((cached_has_bits & 0x00001000U) != 0) {
      if (from._internal_bitfield() != 0) {
        _this->_impl_.bitfield_ = from._impl_.bitfield_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeInfoLite::CopyFrom(const NodeInfoLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.NodeInfoLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeInfoLite::InternalSwap(NodeInfoLite* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.bitfield_)
      + sizeof(NodeInfoLite::_impl_.bitfield_)
      - PROTOBUF_FIELD_OFFSET(NodeInfoLite, _impl_.user_)>(
          reinterpret_cast<char*>(&_impl_.user_),
          reinterpret_cast<char*>(&other->_impl_.user_));
}

::google::protobuf::Metadata NodeInfoLite::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeviceState::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DeviceState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeviceState, _impl_._has_bits_);
};

void DeviceState::clear_my_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.my_node_ != nullptr) _impl_.my_node_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
void DeviceState::clear_owner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.owner_ != nullptr) _impl_.owner_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
void DeviceState::clear_receive_queue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.receive_queue_.Clear();
}
void DeviceState::clear_rx_text_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rx_text_message_ != nullptr) _impl_.rx_text_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
void DeviceState::clear_rx_waypoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rx_waypoint_ != nullptr) _impl_.rx_waypoint_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
void DeviceState::clear_node_remote_hardware_pins() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_remote_hardware_pins_.Clear();
}
DeviceState::DeviceState(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeviceState_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.DeviceState)
}
PROTOBUF_NDEBUG_INLINE DeviceState::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::meshtastic::DeviceState& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        receive_queue_{visibility, arena, from.receive_queue_},
        node_remote_hardware_pins_{visibility, arena, from.node_remote_hardware_pins_} {}

DeviceState::DeviceState(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DeviceState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeviceState_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeviceState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.my_node_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.my_node_)
                : nullptr;
  _impl_.owner_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.owner_)
                : nullptr;
  _impl_.rx_text_message_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.rx_text_message_)
                : nullptr;
  _impl_.rx_waypoint_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.rx_waypoint_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, version_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, version_),
           offsetof(Impl_, did_gps_reset_) -
               offsetof(Impl_, version_) +
               sizeof(Impl_::did_gps_reset_));

  // @@protoc_insertion_point(copy_constructor:meshtastic.DeviceState)
}
PROTOBUF_NDEBUG_INLINE DeviceState::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        receive_queue_{visibility, arena},
        node_remote_hardware_pins_{visibility, arena} {}

inline void DeviceState::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, my_node_),
           0,
           offsetof(Impl_, did_gps_reset_) -
               offsetof(Impl_, my_node_) +
               sizeof(Impl_::did_gps_reset_));
}
DeviceState::~DeviceState() {
  // @@protoc_insertion_point(destructor:meshtastic.DeviceState)
  SharedDtor(*this);
}
inline void DeviceState::SharedDtor(MessageLite& self) {
  DeviceState& this_ = static_cast<DeviceState&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.my_node_;
  delete this_._impl_.owner_;
  delete this_._impl_.rx_text_message_;
  delete this_._impl_.rx_waypoint_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DeviceState::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DeviceState(arena);
}
constexpr auto DeviceState::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.receive_queue_) +
          decltype(DeviceState::_impl_.receive_queue_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.node_remote_hardware_pins_) +
          decltype(DeviceState::_impl_.node_remote_hardware_pins_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(DeviceState), alignof(DeviceState), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DeviceState::PlacementNew_,
                                 sizeof(DeviceState),
                                 alignof(DeviceState));
  }
}
constexpr auto DeviceState::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DeviceState_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DeviceState::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DeviceState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DeviceState::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DeviceState>(), &DeviceState::ByteSizeLong,
              &DeviceState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DeviceState, _impl_._cached_size_),
          false,
      },
      &DeviceState::kDescriptorMethods,
      &descriptor_table_meshtastic_2fdeviceonly_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DeviceState_class_data_ =
        DeviceState::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DeviceState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DeviceState_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DeviceState_class_data_.tc_table);
  return DeviceState_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 6, 0, 2>
DeviceState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceState, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959657,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    DeviceState_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::DeviceState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .meshtastic.MyNodeInfo my_node = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.my_node_)}},
    // .meshtastic.User owner = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.owner_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .meshtastic.MeshPacket receive_queue = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 2, PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.receive_queue_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .meshtastic.MeshPacket rx_text_message = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 3, PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.rx_text_message_)}},
    // uint32 version = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceState, _impl_.version_), 4>(),
     {64, 4, 0, PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.version_)}},
    // bool no_save = 9 [deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DeviceState, _impl_.no_save_), 5>(),
     {72, 5, 0, PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.no_save_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool did_gps_reset = 11 [deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DeviceState, _impl_.did_gps_reset_), 6>(),
     {88, 6, 0, PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.did_gps_reset_)}},
    // .meshtastic.MeshPacket rx_waypoint = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 3, 4, PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.rx_waypoint_)}},
    // repeated .meshtastic.NodeRemoteHardwarePin node_remote_hardware_pins = 13;
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 5, PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.node_remote_hardware_pins_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .meshtastic.MyNodeInfo my_node = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.my_node_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.User owner = 3;
    {PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.owner_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .meshtastic.MeshPacket receive_queue = 5;
    {PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.receive_queue_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.MeshPacket rx_text_message = 7;
    {PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.rx_text_message_), _Internal::kHasBitsOffset + 2, 3, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 version = 8;
    {PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.version_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bool no_save = 9 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.no_save_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool did_gps_reset = 11 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.did_gps_reset_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .meshtastic.MeshPacket rx_waypoint = 12;
    {PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.rx_waypoint_), _Internal::kHasBitsOffset + 3, 4, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .meshtastic.NodeRemoteHardwarePin node_remote_hardware_pins = 13;
    {PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.node_remote_hardware_pins_), -1, 5, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::MyNodeInfo>()},
      {::_pbi::TcParser::GetTable<::meshtastic::User>()},
      {::_pbi::TcParser::GetTable<::meshtastic::MeshPacket>()},
      {::_pbi::TcParser::GetTable<::meshtastic::MeshPacket>()},
      {::_pbi::TcParser::GetTable<::meshtastic::MeshPacket>()},
      {::_pbi::TcParser::GetTable<::meshtastic::NodeRemoteHardwarePin>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void DeviceState::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.DeviceState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.receive_queue_.Clear();
  _impl_.node_remote_hardware_pins_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.my_node_ != nullptr);
      _impl_.my_node_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.owner_ != nullptr);
      _impl_.owner_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.rx_text_message_ != nullptr);
      _impl_.rx_text_message_->Clear();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.rx_waypoint_ != nullptr);
      _impl_.rx_waypoint_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000070U) != 0) {
    ::memset(&_impl_.version_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.did_gps_reset_) -
        reinterpret_cast<char*>(&_impl_.version_)) + sizeof(_impl_.did_gps_reset_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DeviceState::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DeviceState& this_ = static_cast<const DeviceState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DeviceState::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DeviceState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.DeviceState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .meshtastic.MyNodeInfo my_node = 2;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.my_node_, this_._impl_.my_node_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.User owner = 3;
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.owner_, this_._impl_.owner_->GetCachedSize(), target,
        stream);
  }

  // repeated .meshtastic.MeshPacket receive_queue = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_receive_queue_size());
       i < n; i++) {
    const auto& repfield = this_._internal_receive_queue().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .meshtastic.MeshPacket rx_text_message = 7;
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.rx_text_message_, this_._impl_.rx_text_message_->GetCachedSize(), target,
        stream);
  }

  // uint32 version = 8;
  if ((cached_has_bits & 0x00000010U) != 0) {
    if (this_._internal_version() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          8, this_._internal_version(), target);
    }
  }

  // bool no_save = 9 [deprecated = true];
  if ((cached_has_bits & 0x00000020U) != 0) {
    if (this_._internal_no_save() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          9, this_._internal_no_save(), target);
    }
  }

  // bool did_gps_reset = 11 [deprecated = true];
  if ((cached_has_bits & 0x00000040U) != 0) {
    if (this_._internal_did_gps_reset() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          11, this_._internal_did_gps_reset(), target);
    }
  }

  // .meshtastic.MeshPacket rx_waypoint = 12;
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *this_._impl_.rx_waypoint_, this_._impl_.rx_waypoint_->GetCachedSize(), target,
        stream);
  }

  // repeated .meshtastic.NodeRemoteHardwarePin node_remote_hardware_pins = 13;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_node_remote_hardware_pins_size());
       i < n; i++) {
    const auto& repfield = this_._internal_node_remote_hardware_pins().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            13, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.DeviceState)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeviceState::ByteSizeLong(const MessageLite& base) {
  const DeviceState& this_ = static_cast<const DeviceState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeviceState::ByteSizeLong() const {
  const DeviceState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.DeviceState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .meshtastic.MeshPacket receive_queue = 5;
    {
      total_size += 1UL * this_._internal_receive_queue_size();
      for (const auto& msg : this_._internal_receive_queue()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .meshtastic.NodeRemoteHardwarePin node_remote_hardware_pins = 13;
    {
      total_size += 1UL * this_._internal_node_remote_hardware_pins_size();
      for (const auto& msg : this_._internal_node_remote_hardware_pins()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    // .meshtastic.MyNodeInfo my_node = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.my_node_);
    }
    // .meshtastic.User owner = 3;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.owner_);
    }
    // .meshtastic.MeshPacket rx_text_message = 7;
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rx_text_message_);
    }
    // .meshtastic.MeshPacket rx_waypoint = 12;
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rx_waypoint_);
    }
    // uint32 version = 8;
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_version() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_version());
      }
    }
    // bool no_save = 9 [deprecated = true];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_no_save() != 0) {
        total_size += 2;
      }
    }
    // bool did_gps_reset = 11 [deprecated = true];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_did_gps_reset() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DeviceState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceState*>(&to_msg);
  auto& from = static_cast<const DeviceState&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.DeviceState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_receive_queue()->MergeFrom(
      from._internal_receive_queue());
  _this->_internal_mutable_node_remote_hardware_pins()->MergeFrom(
      from._internal_node_remote_hardware_pins());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.my_node_ != nullptr);
      if (_this->_impl_.my_node_ == nullptr) {
        _this->_impl_.my_node_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.my_node_);
      } else {
        _this->_impl_.my_node_->MergeFrom(*from._impl_.my_node_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.owner_ != nullptr);
      if (_this->_impl_.owner_ == nullptr) {
        _this->_impl_.owner_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.owner_);
      } else {
        _this->_impl_.owner_->MergeFrom(*from._impl_.owner_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.rx_text_message_ != nullptr);
      if (_this->_impl_.rx_text_message_ == nullptr) {
        _this->_impl_.rx_text_message_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.rx_text_message_);
      } else {
        _this->_impl_.rx_text_message_->MergeFrom(*from._impl_.rx_text_message_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.rx_waypoint_ != nullptr);
      if (_this->_impl_.rx_waypoint_ == nullptr) {
        _this->_impl_.rx_waypoint_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.rx_waypoint_);
      } else {
        _this->_impl_.rx_waypoint_->MergeFrom(*from._impl_.rx_waypoint_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_version() != 0) {
        _this->_impl_.version_ = from._impl_.version_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_no_save() != 0) {
        _this->_impl_.no_save_ = from._impl_.no_save_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_did_gps_reset() != 0) {
        _this->_impl_.did_gps_reset_ = from._impl_.did_gps_reset_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceState::CopyFrom(const DeviceState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.DeviceState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceState::InternalSwap(DeviceState* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.receive_queue_.InternalSwap(&other->_impl_.receive_queue_);
  _impl_.node_remote_hardware_pins_.InternalSwap(&other->_impl_.node_remote_hardware_pins_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.did_gps_reset_)
      + sizeof(DeviceState::_impl_.did_gps_reset_)
      - PROTOBUF_FIELD_OFFSET(DeviceState, _impl_.my_node_)>(
          reinterpret_cast<char*>(&_impl_.my_node_),
          reinterpret_cast<char*>(&other->_impl_.my_node_));
}

::google::protobuf::Metadata DeviceState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeDatabase::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NodeDatabase>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NodeDatabase, _impl_._has_bits_);
};

NodeDatabase::NodeDatabase(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NodeDatabase_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.NodeDatabase)
}
PROTOBUF_NDEBUG_INLINE NodeDatabase::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::meshtastic::NodeDatabase& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        nodes_{visibility, arena, from.nodes_} {}

NodeDatabase::NodeDatabase(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const NodeDatabase& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NodeDatabase_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeDatabase* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.version_ = from._impl_.version_;

  // @@protoc_insertion_point(copy_constructor:meshtastic.NodeDatabase)
}
PROTOBUF_NDEBUG_INLINE NodeDatabase::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        nodes_{visibility, arena} {}

inline void NodeDatabase::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.version_ = {};
}
NodeDatabase::~NodeDatabase() {
  // @@protoc_insertion_point(destructor:meshtastic.NodeDatabase)
  SharedDtor(*this);
}
inline void NodeDatabase::SharedDtor(MessageLite& self) {
  NodeDatabase& this_ = static_cast<NodeDatabase&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NodeDatabase::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NodeDatabase(arena);
}
constexpr auto NodeDatabase::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NodeDatabase, _impl_.nodes_) +
          decltype(NodeDatabase::_impl_.nodes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(NodeDatabase), alignof(NodeDatabase), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NodeDatabase::PlacementNew_,
                                 sizeof(NodeDatabase),
                                 alignof(NodeDatabase));
  }
}
constexpr auto NodeDatabase::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NodeDatabase_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NodeDatabase::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NodeDatabase>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NodeDatabase::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NodeDatabase>(), &NodeDatabase::ByteSizeLong,
              &NodeDatabase::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NodeDatabase, _impl_._cached_size_),
          false,
      },
      &NodeDatabase::kDescriptorMethods,
      &descriptor_table_meshtastic_2fdeviceonly_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NodeDatabase_class_data_ =
        NodeDatabase::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NodeDatabase::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NodeDatabase_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NodeDatabase_class_data_.tc_table);
  return NodeDatabase_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
NodeDatabase::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeDatabase, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    NodeDatabase_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::NodeDatabase>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .meshtastic.NodeInfoLite nodes = 2 [(.nanopb) = {
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NodeDatabase, _impl_.nodes_)}},
    // uint32 version = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeDatabase, _impl_.version_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(NodeDatabase, _impl_.version_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 version = 1;
    {PROTOBUF_FIELD_OFFSET(NodeDatabase, _impl_.version_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .meshtastic.NodeInfoLite nodes = 2 [(.nanopb) = {
    {PROTOBUF_FIELD_OFFSET(NodeDatabase, _impl_.nodes_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::NodeInfoLite>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void NodeDatabase::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.NodeDatabase)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nodes_.Clear();
  _impl_.version_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NodeDatabase::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NodeDatabase& this_ = static_cast<const NodeDatabase&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NodeDatabase::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NodeDatabase& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.NodeDatabase)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 version = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_version() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_version(), target);
    }
  }

  // repeated .meshtastic.NodeInfoLite nodes = 2 [(.nanopb) = {
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_nodes_size());
       i < n; i++) {
    const auto& repfield = this_._internal_nodes().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.NodeDatabase)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NodeDatabase::ByteSizeLong(const MessageLite& base) {
  const NodeDatabase& this_ = static_cast<const NodeDatabase&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NodeDatabase::ByteSizeLong() const {
  const NodeDatabase& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.NodeDatabase)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .meshtastic.NodeInfoLite nodes = 2 [(.nanopb) = {
    {
      total_size += 1UL * this_._internal_nodes_size();
      for (const auto& msg : this_._internal_nodes()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // uint32 version = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_version() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_version());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NodeDatabase::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeDatabase*>(&to_msg);
  auto& from = static_cast<const NodeDatabase&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.NodeDatabase)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_nodes()->MergeFrom(
      from._internal_nodes());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (from._internal_version() != 0) {
      _this->_impl_.version_ = from._impl_.version_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeDatabase::CopyFrom(const NodeDatabase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.NodeDatabase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeDatabase::InternalSwap(NodeDatabase* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.nodes_.InternalSwap(&other->_impl_.nodes_);
  swap(_impl_.version_, other->_impl_.version_);
}

::google::protobuf::Metadata NodeDatabase::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ChannelFile::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ChannelFile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ChannelFile, _impl_._has_bits_);
};

void ChannelFile::clear_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channels_.Clear();
}
ChannelFile::ChannelFile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChannelFile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.ChannelFile)
}
PROTOBUF_NDEBUG_INLINE ChannelFile::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::meshtastic::ChannelFile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        channels_{visibility, arena, from.channels_} {}

ChannelFile::ChannelFile(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ChannelFile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChannelFile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ChannelFile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.version_ = from._impl_.version_;

  // @@protoc_insertion_point(copy_constructor:meshtastic.ChannelFile)
}
PROTOBUF_NDEBUG_INLINE ChannelFile::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        channels_{visibility, arena} {}

inline void ChannelFile::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.version_ = {};
}
ChannelFile::~ChannelFile() {
  // @@protoc_insertion_point(destructor:meshtastic.ChannelFile)
  SharedDtor(*this);
}
inline void ChannelFile::SharedDtor(MessageLite& self) {
  ChannelFile& this_ = static_cast<ChannelFile&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ChannelFile::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ChannelFile(arena);
}
constexpr auto ChannelFile::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ChannelFile, _impl_.channels_) +
          decltype(ChannelFile::_impl_.channels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ChannelFile), alignof(ChannelFile), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ChannelFile::PlacementNew_,
                                 sizeof(ChannelFile),
                                 alignof(ChannelFile));
  }
}
constexpr auto ChannelFile::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ChannelFile_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ChannelFile::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ChannelFile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ChannelFile::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ChannelFile>(), &ChannelFile::ByteSizeLong,
              &ChannelFile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ChannelFile, _impl_._cached_size_),
          false,
      },
      &ChannelFile::kDescriptorMethods,
      &descriptor_table_meshtastic_2fdeviceonly_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ChannelFile_class_data_ =
        ChannelFile::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ChannelFile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ChannelFile_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ChannelFile_class_data_.tc_table);
  return ChannelFile_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
ChannelFile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelFile, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ChannelFile_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::ChannelFile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 version = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChannelFile, _impl_.version_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(ChannelFile, _impl_.version_)}},
    // repeated .meshtastic.Channel channels = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ChannelFile, _impl_.channels_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .meshtastic.Channel channels = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelFile, _impl_.channels_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 version = 2;
    {PROTOBUF_FIELD_OFFSET(ChannelFile, _impl_.version_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::Channel>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ChannelFile::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.ChannelFile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channels_.Clear();
  _impl_.version_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ChannelFile::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ChannelFile& this_ = static_cast<const ChannelFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ChannelFile::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ChannelFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.ChannelFile)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .meshtastic.Channel channels = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_channels_size());
       i < n; i++) {
    const auto& repfield = this_._internal_channels().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // uint32 version = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_version() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_version(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.ChannelFile)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ChannelFile::ByteSizeLong(const MessageLite& base) {
  const ChannelFile& this_ = static_cast<const ChannelFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ChannelFile::ByteSizeLong() const {
  const ChannelFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.ChannelFile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .meshtastic.Channel channels = 1;
    {
      total_size += 1UL * this_._internal_channels_size();
      for (const auto& msg : this_._internal_channels()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // uint32 version = 2;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_version() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_version());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ChannelFile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChannelFile*>(&to_msg);
  auto& from = static_cast<const ChannelFile&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.ChannelFile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_channels()->MergeFrom(
      from._internal_channels());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (from._internal_version() != 0) {
      _this->_impl_.version_ = from._impl_.version_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelFile::CopyFrom(const ChannelFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.ChannelFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ChannelFile::InternalSwap(ChannelFile* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.channels_.InternalSwap(&other->_impl_.channels_);
  swap(_impl_.version_, other->_impl_.version_);
}

::google::protobuf::Metadata ChannelFile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BackupPreferences::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BackupPreferences>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BackupPreferences, _impl_._has_bits_);
};

void BackupPreferences::clear_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.config_ != nullptr) _impl_.config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
void BackupPreferences::clear_module_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.module_config_ != nullptr) _impl_.module_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
void BackupPreferences::clear_owner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.owner_ != nullptr) _impl_.owner_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
BackupPreferences::BackupPreferences(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BackupPreferences_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.BackupPreferences)
}
PROTOBUF_NDEBUG_INLINE BackupPreferences::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::meshtastic::BackupPreferences& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

BackupPreferences::BackupPreferences(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BackupPreferences& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BackupPreferences_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BackupPreferences* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.config_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.config_)
                : nullptr;
  _impl_.module_config_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.module_config_)
                : nullptr;
  _impl_.channels_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.channels_)
                : nullptr;
  _impl_.owner_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.owner_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, version_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, version_),
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, version_) +
               sizeof(Impl_::timestamp_));

  // @@protoc_insertion_point(copy_constructor:meshtastic.BackupPreferences)
}
PROTOBUF_NDEBUG_INLINE BackupPreferences::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void BackupPreferences::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, config_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, config_) +
               sizeof(Impl_::timestamp_));
}
BackupPreferences::~BackupPreferences() {
  // @@protoc_insertion_point(destructor:meshtastic.BackupPreferences)
  SharedDtor(*this);
}
inline void BackupPreferences::SharedDtor(MessageLite& self) {
  BackupPreferences& this_ = static_cast<BackupPreferences&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.config_;
  delete this_._impl_.module_config_;
  delete this_._impl_.channels_;
  delete this_._impl_.owner_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BackupPreferences::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BackupPreferences(arena);
}
constexpr auto BackupPreferences::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BackupPreferences),
                                            alignof(BackupPreferences));
}
constexpr auto BackupPreferences::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BackupPreferences_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BackupPreferences::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BackupPreferences>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BackupPreferences::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BackupPreferences>(), &BackupPreferences::ByteSizeLong,
              &BackupPreferences::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BackupPreferences, _impl_._cached_size_),
          false,
      },
      &BackupPreferences::kDescriptorMethods,
      &descriptor_table_meshtastic_2fdeviceonly_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BackupPreferences_class_data_ =
        BackupPreferences::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BackupPreferences::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BackupPreferences_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BackupPreferences_class_data_.tc_table);
  return BackupPreferences_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 4, 0, 2>
BackupPreferences::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BackupPreferences, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    BackupPreferences_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::BackupPreferences>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 version = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BackupPreferences, _impl_.version_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(BackupPreferences, _impl_.version_)}},
    // fixed32 timestamp = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 5, 0, PROTOBUF_FIELD_OFFSET(BackupPreferences, _impl_.timestamp_)}},
    // .meshtastic.LocalConfig config = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(BackupPreferences, _impl_.config_)}},
    // .meshtastic.LocalModuleConfig module_config = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(BackupPreferences, _impl_.module_config_)}},
    // .meshtastic.ChannelFile channels = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(BackupPreferences, _impl_.channels_)}},
    // .meshtastic.User owner = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 3, PROTOBUF_FIELD_OFFSET(BackupPreferences, _impl_.owner_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 version = 1;
    {PROTOBUF_FIELD_OFFSET(BackupPreferences, _impl_.version_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // fixed32 timestamp = 2;
    {PROTOBUF_FIELD_OFFSET(BackupPreferences, _impl_.timestamp_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // .meshtastic.LocalConfig config = 3;
    {PROTOBUF_FIELD_OFFSET(BackupPreferences, _impl_.config_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.LocalModuleConfig module_config = 4;
    {PROTOBUF_FIELD_OFFSET(BackupPreferences, _impl_.module_config_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ChannelFile channels = 5;
    {PROTOBUF_FIELD_OFFSET(BackupPreferences, _impl_.channels_), _Internal::kHasBitsOffset + 2, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.User owner = 6;
    {PROTOBUF_FIELD_OFFSET(BackupPreferences, _impl_.owner_), _Internal::kHasBitsOffset + 3, 3, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::LocalConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::LocalModuleConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ChannelFile>()},
      {::_pbi::TcParser::GetTable<::meshtastic::User>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void BackupPreferences::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.BackupPreferences)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.config_ != nullptr);
      _impl_.config_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.module_config_ != nullptr);
      _impl_.module_config_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.channels_ != nullptr);
      _impl_.channels_->Clear();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.owner_ != nullptr);
      _impl_.owner_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000030U) != 0) {
    ::memset(&_impl_.version_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.timestamp_) -
        reinterpret_cast<char*>(&_impl_.version_)) + sizeof(_impl_.timestamp_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BackupPreferences::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BackupPreferences& this_ = static_cast<const BackupPreferences&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BackupPreferences::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BackupPreferences& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.BackupPreferences)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 version = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_version() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_version(), target);
    }
  }

  // fixed32 timestamp = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_timestamp() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
          2, this_._internal_timestamp(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .meshtastic.LocalConfig config = 3;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.config_, this_._impl_.config_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.LocalModuleConfig module_config = 4;
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.module_config_, this_._impl_.module_config_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.ChannelFile channels = 5;
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.channels_, this_._impl_.channels_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.User owner = 6;
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.owner_, this_._impl_.owner_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.BackupPreferences)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BackupPreferences::ByteSizeLong(const MessageLite& base) {
  const BackupPreferences& this_ = static_cast<const BackupPreferences&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BackupPreferences::ByteSizeLong() const {
  const BackupPreferences& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.BackupPreferences)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // .meshtastic.LocalConfig config = 3;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.config_);
    }
    // .meshtastic.LocalModuleConfig module_config = 4;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.module_config_);
    }
    // .meshtastic.ChannelFile channels = 5;
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.channels_);
    }
    // .meshtastic.User owner = 6;
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.owner_);
    }
    // uint32 version = 1;
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_version() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_version());
      }
    }
    // fixed32 timestamp = 2;
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_timestamp() != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BackupPreferences::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BackupPreferences*>(&to_msg);
  auto& from = static_cast<const BackupPreferences&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.BackupPreferences)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.config_ != nullptr);
      if (_this->_impl_.config_ == nullptr) {
        _this->_impl_.config_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.config_);
      } else {
        _this->_impl_.config_->MergeFrom(*from._impl_.config_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.module_config_ != nullptr);
      if (_this->_impl_.module_config_ == nullptr) {
        _this->_impl_.module_config_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.module_config_);
      } else {
        _this->_impl_.module_config_->MergeFrom(*from._impl_.module_config_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.channels_ != nullptr);
      if (_this->_impl_.channels_ == nullptr) {
        _this->_impl_.channels_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.channels_);
      } else {
        _this->_impl_.channels_->MergeFrom(*from._impl_.channels_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.owner_ != nullptr);
      if (_this->_impl_.owner_ == nullptr) {
        _this->_impl_.owner_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.owner_);
      } else {
        _this->_impl_.owner_->MergeFrom(*from._impl_.owner_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_version() != 0) {
        _this->_impl_.version_ = from._impl_.version_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_timestamp() != 0) {
        _this->_impl_.timestamp_ = from._impl_.timestamp_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BackupPreferences::CopyFrom(const BackupPreferences& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.BackupPreferences)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BackupPreferences::InternalSwap(BackupPreferences* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BackupPreferences, _impl_.timestamp_)
      + sizeof(BackupPreferences::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(BackupPreferences, _impl_.config_)>(
          reinterpret_cast<char*>(&_impl_.config_),
          reinterpret_cast<char*>(&other->_impl_.config_));
}

::google::protobuf::Metadata BackupPreferences::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace meshtastic
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_meshtastic_2fdeviceonly_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
