// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: meshtastic/localonly.proto
// Protobuf C++ Version: 6.32.0

#include "meshtastic/localonly.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace meshtastic {

inline constexpr LocalModuleConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mqtt_{nullptr},
        serial_{nullptr},
        external_notification_{nullptr},
        store_forward_{nullptr},
        range_test_{nullptr},
        telemetry_{nullptr},
        canned_message_{nullptr},
        audio_{nullptr},
        remote_hardware_{nullptr},
        neighbor_info_{nullptr},
        ambient_lighting_{nullptr},
        detection_sensor_{nullptr},
        paxcounter_{nullptr},
        version_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR LocalModuleConfig::LocalModuleConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LocalModuleConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LocalModuleConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocalModuleConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocalModuleConfigDefaultTypeInternal() {}
  union {
    LocalModuleConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocalModuleConfigDefaultTypeInternal _LocalModuleConfig_default_instance_;

inline constexpr LocalConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_{nullptr},
        position_{nullptr},
        power_{nullptr},
        network_{nullptr},
        display_{nullptr},
        lora_{nullptr},
        bluetooth_{nullptr},
        security_{nullptr},
        version_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR LocalConfig::LocalConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LocalConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LocalConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocalConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocalConfigDefaultTypeInternal() {}
  union {
    LocalConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocalConfigDefaultTypeInternal _LocalConfig_default_instance_;
}  // namespace meshtastic
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_meshtastic_2flocalonly_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_meshtastic_2flocalonly_2eproto = nullptr;
const ::uint32_t
    TableStruct_meshtastic_2flocalonly_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalConfig, _impl_._has_bits_),
        12, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalConfig, _impl_.device_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalConfig, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalConfig, _impl_.power_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalConfig, _impl_.network_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalConfig, _impl_.display_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalConfig, _impl_.lora_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalConfig, _impl_.bluetooth_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalConfig, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalConfig, _impl_.security_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        7,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalModuleConfig, _impl_._has_bits_),
        17, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalModuleConfig, _impl_.mqtt_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalModuleConfig, _impl_.serial_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalModuleConfig, _impl_.external_notification_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalModuleConfig, _impl_.store_forward_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalModuleConfig, _impl_.range_test_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalModuleConfig, _impl_.telemetry_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalModuleConfig, _impl_.canned_message_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalModuleConfig, _impl_.audio_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalModuleConfig, _impl_.remote_hardware_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalModuleConfig, _impl_.neighbor_info_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalModuleConfig, _impl_.ambient_lighting_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalModuleConfig, _impl_.detection_sensor_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalModuleConfig, _impl_.paxcounter_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::LocalModuleConfig, _impl_.version_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::meshtastic::LocalConfig)},
        {21, sizeof(::meshtastic::LocalModuleConfig)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::meshtastic::_LocalConfig_default_instance_._instance,
    &::meshtastic::_LocalModuleConfig_default_instance_._instance,
};
const char descriptor_table_protodef_meshtastic_2flocalonly_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\032meshtastic/localonly.proto\022\nmeshtastic"
    "\032\027meshtastic/config.proto\032\036meshtastic/mo"
    "dule_config.proto\"\262\003\n\013LocalConfig\022/\n\006dev"
    "ice\030\001 \001(\0132\037.meshtastic.Config.DeviceConf"
    "ig\0223\n\010position\030\002 \001(\0132!.meshtastic.Config"
    ".PositionConfig\022-\n\005power\030\003 \001(\0132\036.meshtas"
    "tic.Config.PowerConfig\0221\n\007network\030\004 \001(\0132"
    " .meshtastic.Config.NetworkConfig\0221\n\007dis"
    "play\030\005 \001(\0132 .meshtastic.Config.DisplayCo"
    "nfig\022+\n\004lora\030\006 \001(\0132\035.meshtastic.Config.L"
    "oRaConfig\0225\n\tbluetooth\030\007 \001(\0132\".meshtasti"
    "c.Config.BluetoothConfig\022\017\n\007version\030\010 \001("
    "\r\0223\n\010security\030\t \001(\0132!.meshtastic.Config."
    "SecurityConfig\"\373\006\n\021LocalModuleConfig\0221\n\004"
    "mqtt\030\001 \001(\0132#.meshtastic.ModuleConfig.MQT"
    "TConfig\0225\n\006serial\030\002 \001(\0132%.meshtastic.Mod"
    "uleConfig.SerialConfig\022R\n\025external_notif"
    "ication\030\003 \001(\01323.meshtastic.ModuleConfig."
    "ExternalNotificationConfig\022B\n\rstore_forw"
    "ard\030\004 \001(\0132+.meshtastic.ModuleConfig.Stor"
    "eForwardConfig\022<\n\nrange_test\030\005 \001(\0132(.mes"
    "htastic.ModuleConfig.RangeTestConfig\022;\n\t"
    "telemetry\030\006 \001(\0132(.meshtastic.ModuleConfi"
    "g.TelemetryConfig\022D\n\016canned_message\030\007 \001("
    "\0132,.meshtastic.ModuleConfig.CannedMessag"
    "eConfig\0223\n\005audio\030\t \001(\0132$.meshtastic.Modu"
    "leConfig.AudioConfig\022F\n\017remote_hardware\030"
    "\n \001(\0132-.meshtastic.ModuleConfig.RemoteHa"
    "rdwareConfig\022B\n\rneighbor_info\030\013 \001(\0132+.me"
    "shtastic.ModuleConfig.NeighborInfoConfig"
    "\022H\n\020ambient_lighting\030\014 \001(\0132..meshtastic."
    "ModuleConfig.AmbientLightingConfig\022H\n\020de"
    "tection_sensor\030\r \001(\0132..meshtastic.Module"
    "Config.DetectionSensorConfig\022=\n\npaxcount"
    "er\030\016 \001(\0132).meshtastic.ModuleConfig.Paxco"
    "unterConfig\022\017\n\007version\030\010 \001(\rBd\n\023com.geek"
    "sville.meshB\017LocalOnlyProtosZ\"github.com"
    "/meshtastic/go/generated\252\002\024Meshtastic.Pr"
    "otobufs\272\002\000b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_meshtastic_2flocalonly_2eproto_deps[2] = {
        &::descriptor_table_meshtastic_2fconfig_2eproto,
        &::descriptor_table_meshtastic_2fmodule_5fconfig_2eproto,
};
static ::absl::once_flag descriptor_table_meshtastic_2flocalonly_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_meshtastic_2flocalonly_2eproto = {
    false,
    false,
    1538,
    descriptor_table_protodef_meshtastic_2flocalonly_2eproto,
    "meshtastic/localonly.proto",
    &descriptor_table_meshtastic_2flocalonly_2eproto_once,
    descriptor_table_meshtastic_2flocalonly_2eproto_deps,
    2,
    2,
    schemas,
    file_default_instances,
    TableStruct_meshtastic_2flocalonly_2eproto::offsets,
    file_level_enum_descriptors_meshtastic_2flocalonly_2eproto,
    file_level_service_descriptors_meshtastic_2flocalonly_2eproto,
};
namespace meshtastic {
// ===================================================================

class LocalConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LocalConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_._has_bits_);
};

void LocalConfig::clear_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_ != nullptr) _impl_.device_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
void LocalConfig::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
void LocalConfig::clear_power() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.power_ != nullptr) _impl_.power_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
void LocalConfig::clear_network() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.network_ != nullptr) _impl_.network_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
void LocalConfig::clear_display() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.display_ != nullptr) _impl_.display_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010U;
}
void LocalConfig::clear_lora() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lora_ != nullptr) _impl_.lora_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020U;
}
void LocalConfig::clear_bluetooth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bluetooth_ != nullptr) _impl_.bluetooth_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040U;
}
void LocalConfig::clear_security() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.security_ != nullptr) _impl_.security_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080U;
}
LocalConfig::LocalConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LocalConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.LocalConfig)
}
PROTOBUF_NDEBUG_INLINE LocalConfig::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::meshtastic::LocalConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LocalConfig::LocalConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LocalConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LocalConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LocalConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.device_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.device_)
                : nullptr;
  _impl_.position_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_)
                : nullptr;
  _impl_.power_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.power_)
                : nullptr;
  _impl_.network_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.network_)
                : nullptr;
  _impl_.display_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.display_)
                : nullptr;
  _impl_.lora_ = ((cached_has_bits & 0x00000020U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.lora_)
                : nullptr;
  _impl_.bluetooth_ = ((cached_has_bits & 0x00000040U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bluetooth_)
                : nullptr;
  _impl_.security_ = ((cached_has_bits & 0x00000080U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.security_)
                : nullptr;
  _impl_.version_ = from._impl_.version_;

  // @@protoc_insertion_point(copy_constructor:meshtastic.LocalConfig)
}
PROTOBUF_NDEBUG_INLINE LocalConfig::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void LocalConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, device_),
           0,
           offsetof(Impl_, version_) -
               offsetof(Impl_, device_) +
               sizeof(Impl_::version_));
}
LocalConfig::~LocalConfig() {
  // @@protoc_insertion_point(destructor:meshtastic.LocalConfig)
  SharedDtor(*this);
}
inline void LocalConfig::SharedDtor(MessageLite& self) {
  LocalConfig& this_ = static_cast<LocalConfig&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.device_;
  delete this_._impl_.position_;
  delete this_._impl_.power_;
  delete this_._impl_.network_;
  delete this_._impl_.display_;
  delete this_._impl_.lora_;
  delete this_._impl_.bluetooth_;
  delete this_._impl_.security_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LocalConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LocalConfig(arena);
}
constexpr auto LocalConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LocalConfig),
                                            alignof(LocalConfig));
}
constexpr auto LocalConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LocalConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LocalConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LocalConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LocalConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LocalConfig>(), &LocalConfig::ByteSizeLong,
              &LocalConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_._cached_size_),
          false,
      },
      &LocalConfig::kDescriptorMethods,
      &descriptor_table_meshtastic_2flocalonly_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LocalConfig_class_data_ =
        LocalConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LocalConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LocalConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LocalConfig_class_data_.tc_table);
  return LocalConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 8, 0, 2>
LocalConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    LocalConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::LocalConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .meshtastic.Config.DeviceConfig device = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.device_)}},
    // .meshtastic.Config.PositionConfig position = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.position_)}},
    // .meshtastic.Config.PowerConfig power = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.power_)}},
    // .meshtastic.Config.NetworkConfig network = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.network_)}},
    // .meshtastic.Config.DisplayConfig display = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.display_)}},
    // .meshtastic.Config.LoRaConfig lora = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 5, PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.lora_)}},
    // .meshtastic.Config.BluetoothConfig bluetooth = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 6, 6, PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.bluetooth_)}},
    // uint32 version = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LocalConfig, _impl_.version_), 8>(),
     {64, 8, 0, PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.version_)}},
    // .meshtastic.Config.SecurityConfig security = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 7, 7, PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.security_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .meshtastic.Config.DeviceConfig device = 1;
    {PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.device_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.Config.PositionConfig position = 2;
    {PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.position_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.Config.PowerConfig power = 3;
    {PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.power_), _Internal::kHasBitsOffset + 2, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.Config.NetworkConfig network = 4;
    {PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.network_), _Internal::kHasBitsOffset + 3, 3, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.Config.DisplayConfig display = 5;
    {PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.display_), _Internal::kHasBitsOffset + 4, 4, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.Config.LoRaConfig lora = 6;
    {PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.lora_), _Internal::kHasBitsOffset + 5, 5, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.Config.BluetoothConfig bluetooth = 7;
    {PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.bluetooth_), _Internal::kHasBitsOffset + 6, 6, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 version = 8;
    {PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.version_), _Internal::kHasBitsOffset + 8, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .meshtastic.Config.SecurityConfig security = 9;
    {PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.security_), _Internal::kHasBitsOffset + 7, 7, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::Config_DeviceConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::Config_PositionConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::Config_PowerConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::Config_NetworkConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::Config_DisplayConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::Config_LoRaConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::Config_BluetoothConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::Config_SecurityConfig>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void LocalConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.LocalConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.device_ != nullptr);
      _impl_.device_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.power_ != nullptr);
      _impl_.power_->Clear();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.network_ != nullptr);
      _impl_.network_->Clear();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.display_ != nullptr);
      _impl_.display_->Clear();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(_impl_.lora_ != nullptr);
      _impl_.lora_->Clear();
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(_impl_.bluetooth_ != nullptr);
      _impl_.bluetooth_->Clear();
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      ABSL_DCHECK(_impl_.security_ != nullptr);
      _impl_.security_->Clear();
    }
  }
  _impl_.version_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LocalConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LocalConfig& this_ = static_cast<const LocalConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LocalConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LocalConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.LocalConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .meshtastic.Config.DeviceConfig device = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.device_, this_._impl_.device_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.Config.PositionConfig position = 2;
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.Config.PowerConfig power = 3;
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.power_, this_._impl_.power_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.Config.NetworkConfig network = 4;
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.network_, this_._impl_.network_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.Config.DisplayConfig display = 5;
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.display_, this_._impl_.display_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.Config.LoRaConfig lora = 6;
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.lora_, this_._impl_.lora_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.Config.BluetoothConfig bluetooth = 7;
  if ((cached_has_bits & 0x00000040U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.bluetooth_, this_._impl_.bluetooth_->GetCachedSize(), target,
        stream);
  }

  // uint32 version = 8;
  if ((cached_has_bits & 0x00000100U) != 0) {
    if (this_._internal_version() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          8, this_._internal_version(), target);
    }
  }

  // .meshtastic.Config.SecurityConfig security = 9;
  if ((cached_has_bits & 0x00000080U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *this_._impl_.security_, this_._impl_.security_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.LocalConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LocalConfig::ByteSizeLong(const MessageLite& base) {
  const LocalConfig& this_ = static_cast<const LocalConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LocalConfig::ByteSizeLong() const {
  const LocalConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.LocalConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // .meshtastic.Config.DeviceConfig device = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.device_);
    }
    // .meshtastic.Config.PositionConfig position = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
    }
    // .meshtastic.Config.PowerConfig power = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.power_);
    }
    // .meshtastic.Config.NetworkConfig network = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.network_);
    }
    // .meshtastic.Config.DisplayConfig display = 5;
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.display_);
    }
    // .meshtastic.Config.LoRaConfig lora = 6;
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.lora_);
    }
    // .meshtastic.Config.BluetoothConfig bluetooth = 7;
    if ((cached_has_bits & 0x00000040U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.bluetooth_);
    }
    // .meshtastic.Config.SecurityConfig security = 9;
    if ((cached_has_bits & 0x00000080U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.security_);
    }
  }
   {
    // uint32 version = 8;
    if ((cached_has_bits & 0x00000100U) != 0) {
      if (this_._internal_version() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_version());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LocalConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LocalConfig*>(&to_msg);
  auto& from = static_cast<const LocalConfig&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.LocalConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.device_ != nullptr);
      if (_this->_impl_.device_ == nullptr) {
        _this->_impl_.device_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.device_);
      } else {
        _this->_impl_.device_->MergeFrom(*from._impl_.device_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.power_ != nullptr);
      if (_this->_impl_.power_ == nullptr) {
        _this->_impl_.power_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.power_);
      } else {
        _this->_impl_.power_->MergeFrom(*from._impl_.power_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.network_ != nullptr);
      if (_this->_impl_.network_ == nullptr) {
        _this->_impl_.network_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.network_);
      } else {
        _this->_impl_.network_->MergeFrom(*from._impl_.network_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.display_ != nullptr);
      if (_this->_impl_.display_ == nullptr) {
        _this->_impl_.display_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.display_);
      } else {
        _this->_impl_.display_->MergeFrom(*from._impl_.display_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(from._impl_.lora_ != nullptr);
      if (_this->_impl_.lora_ == nullptr) {
        _this->_impl_.lora_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.lora_);
      } else {
        _this->_impl_.lora_->MergeFrom(*from._impl_.lora_);
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(from._impl_.bluetooth_ != nullptr);
      if (_this->_impl_.bluetooth_ == nullptr) {
        _this->_impl_.bluetooth_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bluetooth_);
      } else {
        _this->_impl_.bluetooth_->MergeFrom(*from._impl_.bluetooth_);
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      ABSL_DCHECK(from._impl_.security_ != nullptr);
      if (_this->_impl_.security_ == nullptr) {
        _this->_impl_.security_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.security_);
      } else {
        _this->_impl_.security_->MergeFrom(*from._impl_.security_);
      }
    }
  }
  if ((cached_has_bits & 0x00000100U) != 0) {
    if (from._internal_version() != 0) {
      _this->_impl_.version_ = from._impl_.version_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocalConfig::CopyFrom(const LocalConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.LocalConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LocalConfig::InternalSwap(LocalConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.version_)
      + sizeof(LocalConfig::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(LocalConfig, _impl_.device_)>(
          reinterpret_cast<char*>(&_impl_.device_),
          reinterpret_cast<char*>(&other->_impl_.device_));
}

::google::protobuf::Metadata LocalConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LocalModuleConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LocalModuleConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_._has_bits_);
};

void LocalModuleConfig::clear_mqtt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mqtt_ != nullptr) _impl_.mqtt_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
void LocalModuleConfig::clear_serial() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.serial_ != nullptr) _impl_.serial_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
void LocalModuleConfig::clear_external_notification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.external_notification_ != nullptr) _impl_.external_notification_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
void LocalModuleConfig::clear_store_forward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.store_forward_ != nullptr) _impl_.store_forward_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
void LocalModuleConfig::clear_range_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.range_test_ != nullptr) _impl_.range_test_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010U;
}
void LocalModuleConfig::clear_telemetry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.telemetry_ != nullptr) _impl_.telemetry_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020U;
}
void LocalModuleConfig::clear_canned_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.canned_message_ != nullptr) _impl_.canned_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040U;
}
void LocalModuleConfig::clear_audio() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.audio_ != nullptr) _impl_.audio_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080U;
}
void LocalModuleConfig::clear_remote_hardware() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.remote_hardware_ != nullptr) _impl_.remote_hardware_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100U;
}
void LocalModuleConfig::clear_neighbor_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.neighbor_info_ != nullptr) _impl_.neighbor_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200U;
}
void LocalModuleConfig::clear_ambient_lighting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ambient_lighting_ != nullptr) _impl_.ambient_lighting_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400U;
}
void LocalModuleConfig::clear_detection_sensor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.detection_sensor_ != nullptr) _impl_.detection_sensor_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800U;
}
void LocalModuleConfig::clear_paxcounter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.paxcounter_ != nullptr) _impl_.paxcounter_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000U;
}
LocalModuleConfig::LocalModuleConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LocalModuleConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.LocalModuleConfig)
}
PROTOBUF_NDEBUG_INLINE LocalModuleConfig::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::meshtastic::LocalModuleConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LocalModuleConfig::LocalModuleConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LocalModuleConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LocalModuleConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LocalModuleConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mqtt_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.mqtt_)
                : nullptr;
  _impl_.serial_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.serial_)
                : nullptr;
  _impl_.external_notification_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.external_notification_)
                : nullptr;
  _impl_.store_forward_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.store_forward_)
                : nullptr;
  _impl_.range_test_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.range_test_)
                : nullptr;
  _impl_.telemetry_ = ((cached_has_bits & 0x00000020U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.telemetry_)
                : nullptr;
  _impl_.canned_message_ = ((cached_has_bits & 0x00000040U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.canned_message_)
                : nullptr;
  _impl_.audio_ = ((cached_has_bits & 0x00000080U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.audio_)
                : nullptr;
  _impl_.remote_hardware_ = ((cached_has_bits & 0x00000100U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.remote_hardware_)
                : nullptr;
  _impl_.neighbor_info_ = ((cached_has_bits & 0x00000200U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.neighbor_info_)
                : nullptr;
  _impl_.ambient_lighting_ = ((cached_has_bits & 0x00000400U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ambient_lighting_)
                : nullptr;
  _impl_.detection_sensor_ = ((cached_has_bits & 0x00000800U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.detection_sensor_)
                : nullptr;
  _impl_.paxcounter_ = ((cached_has_bits & 0x00001000U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.paxcounter_)
                : nullptr;
  _impl_.version_ = from._impl_.version_;

  // @@protoc_insertion_point(copy_constructor:meshtastic.LocalModuleConfig)
}
PROTOBUF_NDEBUG_INLINE LocalModuleConfig::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void LocalModuleConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mqtt_),
           0,
           offsetof(Impl_, version_) -
               offsetof(Impl_, mqtt_) +
               sizeof(Impl_::version_));
}
LocalModuleConfig::~LocalModuleConfig() {
  // @@protoc_insertion_point(destructor:meshtastic.LocalModuleConfig)
  SharedDtor(*this);
}
inline void LocalModuleConfig::SharedDtor(MessageLite& self) {
  LocalModuleConfig& this_ = static_cast<LocalModuleConfig&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.mqtt_;
  delete this_._impl_.serial_;
  delete this_._impl_.external_notification_;
  delete this_._impl_.store_forward_;
  delete this_._impl_.range_test_;
  delete this_._impl_.telemetry_;
  delete this_._impl_.canned_message_;
  delete this_._impl_.audio_;
  delete this_._impl_.remote_hardware_;
  delete this_._impl_.neighbor_info_;
  delete this_._impl_.ambient_lighting_;
  delete this_._impl_.detection_sensor_;
  delete this_._impl_.paxcounter_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LocalModuleConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LocalModuleConfig(arena);
}
constexpr auto LocalModuleConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LocalModuleConfig),
                                            alignof(LocalModuleConfig));
}
constexpr auto LocalModuleConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LocalModuleConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LocalModuleConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LocalModuleConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LocalModuleConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LocalModuleConfig>(), &LocalModuleConfig::ByteSizeLong,
              &LocalModuleConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_._cached_size_),
          false,
      },
      &LocalModuleConfig::kDescriptorMethods,
      &descriptor_table_meshtastic_2flocalonly_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LocalModuleConfig_class_data_ =
        LocalModuleConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LocalModuleConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LocalModuleConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LocalModuleConfig_class_data_.tc_table);
  return LocalModuleConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 13, 0, 2>
LocalModuleConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_._has_bits_),
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    13,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    LocalModuleConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::LocalModuleConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .meshtastic.ModuleConfig.MQTTConfig mqtt = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.mqtt_)}},
    // .meshtastic.ModuleConfig.SerialConfig serial = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.serial_)}},
    // .meshtastic.ModuleConfig.ExternalNotificationConfig external_notification = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.external_notification_)}},
    // .meshtastic.ModuleConfig.StoreForwardConfig store_forward = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.store_forward_)}},
    // .meshtastic.ModuleConfig.RangeTestConfig range_test = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.range_test_)}},
    // .meshtastic.ModuleConfig.TelemetryConfig telemetry = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 5, PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.telemetry_)}},
    // .meshtastic.ModuleConfig.CannedMessageConfig canned_message = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 6, 6, PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.canned_message_)}},
    // uint32 version = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LocalModuleConfig, _impl_.version_), 13>(),
     {64, 13, 0, PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.version_)}},
    // .meshtastic.ModuleConfig.AudioConfig audio = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 7, 7, PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.audio_)}},
    // .meshtastic.ModuleConfig.RemoteHardwareConfig remote_hardware = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 8, 8, PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.remote_hardware_)}},
    // .meshtastic.ModuleConfig.NeighborInfoConfig neighbor_info = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 9, 9, PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.neighbor_info_)}},
    // .meshtastic.ModuleConfig.AmbientLightingConfig ambient_lighting = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 10, 10, PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.ambient_lighting_)}},
    // .meshtastic.ModuleConfig.DetectionSensorConfig detection_sensor = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 11, 11, PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.detection_sensor_)}},
    // .meshtastic.ModuleConfig.PaxcounterConfig paxcounter = 14;
    {::_pbi::TcParser::FastMtS1,
     {114, 12, 12, PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.paxcounter_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .meshtastic.ModuleConfig.MQTTConfig mqtt = 1;
    {PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.mqtt_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.SerialConfig serial = 2;
    {PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.serial_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.ExternalNotificationConfig external_notification = 3;
    {PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.external_notification_), _Internal::kHasBitsOffset + 2, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.StoreForwardConfig store_forward = 4;
    {PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.store_forward_), _Internal::kHasBitsOffset + 3, 3, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.RangeTestConfig range_test = 5;
    {PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.range_test_), _Internal::kHasBitsOffset + 4, 4, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.TelemetryConfig telemetry = 6;
    {PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.telemetry_), _Internal::kHasBitsOffset + 5, 5, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.CannedMessageConfig canned_message = 7;
    {PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.canned_message_), _Internal::kHasBitsOffset + 6, 6, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 version = 8;
    {PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.version_), _Internal::kHasBitsOffset + 13, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .meshtastic.ModuleConfig.AudioConfig audio = 9;
    {PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.audio_), _Internal::kHasBitsOffset + 7, 7, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.RemoteHardwareConfig remote_hardware = 10;
    {PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.remote_hardware_), _Internal::kHasBitsOffset + 8, 8, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.NeighborInfoConfig neighbor_info = 11;
    {PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.neighbor_info_), _Internal::kHasBitsOffset + 9, 9, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.AmbientLightingConfig ambient_lighting = 12;
    {PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.ambient_lighting_), _Internal::kHasBitsOffset + 10, 10, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.DetectionSensorConfig detection_sensor = 13;
    {PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.detection_sensor_), _Internal::kHasBitsOffset + 11, 11, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig.PaxcounterConfig paxcounter = 14;
    {PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.paxcounter_), _Internal::kHasBitsOffset + 12, 12, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_MQTTConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_SerialConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_ExternalNotificationConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_StoreForwardConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_RangeTestConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_TelemetryConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_CannedMessageConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_AudioConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_RemoteHardwareConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_NeighborInfoConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_AmbientLightingConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_DetectionSensorConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig_PaxcounterConfig>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void LocalModuleConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.LocalModuleConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.mqtt_ != nullptr);
      _impl_.mqtt_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.serial_ != nullptr);
      _impl_.serial_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.external_notification_ != nullptr);
      _impl_.external_notification_->Clear();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.store_forward_ != nullptr);
      _impl_.store_forward_->Clear();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.range_test_ != nullptr);
      _impl_.range_test_->Clear();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(_impl_.telemetry_ != nullptr);
      _impl_.telemetry_->Clear();
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(_impl_.canned_message_ != nullptr);
      _impl_.canned_message_->Clear();
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      ABSL_DCHECK(_impl_.audio_ != nullptr);
      _impl_.audio_->Clear();
    }
  }
  if ((cached_has_bits & 0x00001f00U) != 0) {
    if ((cached_has_bits & 0x00000100U) != 0) {
      ABSL_DCHECK(_impl_.remote_hardware_ != nullptr);
      _impl_.remote_hardware_->Clear();
    }
    if ((cached_has_bits & 0x00000200U) != 0) {
      ABSL_DCHECK(_impl_.neighbor_info_ != nullptr);
      _impl_.neighbor_info_->Clear();
    }
    if ((cached_has_bits & 0x00000400U) != 0) {
      ABSL_DCHECK(_impl_.ambient_lighting_ != nullptr);
      _impl_.ambient_lighting_->Clear();
    }
    if ((cached_has_bits & 0x00000800U) != 0) {
      ABSL_DCHECK(_impl_.detection_sensor_ != nullptr);
      _impl_.detection_sensor_->Clear();
    }
    if ((cached_has_bits & 0x00001000U) != 0) {
      ABSL_DCHECK(_impl_.paxcounter_ != nullptr);
      _impl_.paxcounter_->Clear();
    }
  }
  _impl_.version_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LocalModuleConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LocalModuleConfig& this_ = static_cast<const LocalModuleConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LocalModuleConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LocalModuleConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.LocalModuleConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .meshtastic.ModuleConfig.MQTTConfig mqtt = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.mqtt_, this_._impl_.mqtt_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.ModuleConfig.SerialConfig serial = 2;
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.serial_, this_._impl_.serial_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.ModuleConfig.ExternalNotificationConfig external_notification = 3;
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.external_notification_, this_._impl_.external_notification_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.ModuleConfig.StoreForwardConfig store_forward = 4;
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.store_forward_, this_._impl_.store_forward_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.ModuleConfig.RangeTestConfig range_test = 5;
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.range_test_, this_._impl_.range_test_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.ModuleConfig.TelemetryConfig telemetry = 6;
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.telemetry_, this_._impl_.telemetry_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.ModuleConfig.CannedMessageConfig canned_message = 7;
  if ((cached_has_bits & 0x00000040U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.canned_message_, this_._impl_.canned_message_->GetCachedSize(), target,
        stream);
  }

  // uint32 version = 8;
  if ((cached_has_bits & 0x00002000U) != 0) {
    if (this_._internal_version() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          8, this_._internal_version(), target);
    }
  }

  // .meshtastic.ModuleConfig.AudioConfig audio = 9;
  if ((cached_has_bits & 0x00000080U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *this_._impl_.audio_, this_._impl_.audio_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.ModuleConfig.RemoteHardwareConfig remote_hardware = 10;
  if ((cached_has_bits & 0x00000100U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, *this_._impl_.remote_hardware_, this_._impl_.remote_hardware_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.ModuleConfig.NeighborInfoConfig neighbor_info = 11;
  if ((cached_has_bits & 0x00000200U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, *this_._impl_.neighbor_info_, this_._impl_.neighbor_info_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.ModuleConfig.AmbientLightingConfig ambient_lighting = 12;
  if ((cached_has_bits & 0x00000400U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *this_._impl_.ambient_lighting_, this_._impl_.ambient_lighting_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.ModuleConfig.DetectionSensorConfig detection_sensor = 13;
  if ((cached_has_bits & 0x00000800U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, *this_._impl_.detection_sensor_, this_._impl_.detection_sensor_->GetCachedSize(), target,
        stream);
  }

  // .meshtastic.ModuleConfig.PaxcounterConfig paxcounter = 14;
  if ((cached_has_bits & 0x00001000U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        14, *this_._impl_.paxcounter_, this_._impl_.paxcounter_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.LocalModuleConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LocalModuleConfig::ByteSizeLong(const MessageLite& base) {
  const LocalModuleConfig& this_ = static_cast<const LocalModuleConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LocalModuleConfig::ByteSizeLong() const {
  const LocalModuleConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.LocalModuleConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // .meshtastic.ModuleConfig.MQTTConfig mqtt = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.mqtt_);
    }
    // .meshtastic.ModuleConfig.SerialConfig serial = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.serial_);
    }
    // .meshtastic.ModuleConfig.ExternalNotificationConfig external_notification = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.external_notification_);
    }
    // .meshtastic.ModuleConfig.StoreForwardConfig store_forward = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.store_forward_);
    }
    // .meshtastic.ModuleConfig.RangeTestConfig range_test = 5;
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.range_test_);
    }
    // .meshtastic.ModuleConfig.TelemetryConfig telemetry = 6;
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_);
    }
    // .meshtastic.ModuleConfig.CannedMessageConfig canned_message = 7;
    if ((cached_has_bits & 0x00000040U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.canned_message_);
    }
    // .meshtastic.ModuleConfig.AudioConfig audio = 9;
    if ((cached_has_bits & 0x00000080U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.audio_);
    }
  }
  if ((cached_has_bits & 0x00003f00U) != 0) {
    // .meshtastic.ModuleConfig.RemoteHardwareConfig remote_hardware = 10;
    if ((cached_has_bits & 0x00000100U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.remote_hardware_);
    }
    // .meshtastic.ModuleConfig.NeighborInfoConfig neighbor_info = 11;
    if ((cached_has_bits & 0x00000200U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.neighbor_info_);
    }
    // .meshtastic.ModuleConfig.AmbientLightingConfig ambient_lighting = 12;
    if ((cached_has_bits & 0x00000400U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ambient_lighting_);
    }
    // .meshtastic.ModuleConfig.DetectionSensorConfig detection_sensor = 13;
    if ((cached_has_bits & 0x00000800U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.detection_sensor_);
    }
    // .meshtastic.ModuleConfig.PaxcounterConfig paxcounter = 14;
    if ((cached_has_bits & 0x00001000U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.paxcounter_);
    }
    // uint32 version = 8;
    if ((cached_has_bits & 0x00002000U) != 0) {
      if (this_._internal_version() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_version());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LocalModuleConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LocalModuleConfig*>(&to_msg);
  auto& from = static_cast<const LocalModuleConfig&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.LocalModuleConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.mqtt_ != nullptr);
      if (_this->_impl_.mqtt_ == nullptr) {
        _this->_impl_.mqtt_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.mqtt_);
      } else {
        _this->_impl_.mqtt_->MergeFrom(*from._impl_.mqtt_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.serial_ != nullptr);
      if (_this->_impl_.serial_ == nullptr) {
        _this->_impl_.serial_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.serial_);
      } else {
        _this->_impl_.serial_->MergeFrom(*from._impl_.serial_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.external_notification_ != nullptr);
      if (_this->_impl_.external_notification_ == nullptr) {
        _this->_impl_.external_notification_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.external_notification_);
      } else {
        _this->_impl_.external_notification_->MergeFrom(*from._impl_.external_notification_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.store_forward_ != nullptr);
      if (_this->_impl_.store_forward_ == nullptr) {
        _this->_impl_.store_forward_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.store_forward_);
      } else {
        _this->_impl_.store_forward_->MergeFrom(*from._impl_.store_forward_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.range_test_ != nullptr);
      if (_this->_impl_.range_test_ == nullptr) {
        _this->_impl_.range_test_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.range_test_);
      } else {
        _this->_impl_.range_test_->MergeFrom(*from._impl_.range_test_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(from._impl_.telemetry_ != nullptr);
      if (_this->_impl_.telemetry_ == nullptr) {
        _this->_impl_.telemetry_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.telemetry_);
      } else {
        _this->_impl_.telemetry_->MergeFrom(*from._impl_.telemetry_);
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(from._impl_.canned_message_ != nullptr);
      if (_this->_impl_.canned_message_ == nullptr) {
        _this->_impl_.canned_message_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.canned_message_);
      } else {
        _this->_impl_.canned_message_->MergeFrom(*from._impl_.canned_message_);
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      ABSL_DCHECK(from._impl_.audio_ != nullptr);
      if (_this->_impl_.audio_ == nullptr) {
        _this->_impl_.audio_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.audio_);
      } else {
        _this->_impl_.audio_->MergeFrom(*from._impl_.audio_);
      }
    }
  }
  if ((cached_has_bits & 0x00003f00U) != 0) {
    if ((cached_has_bits & 0x00000100U) != 0) {
      ABSL_DCHECK(from._impl_.remote_hardware_ != nullptr);
      if (_this->_impl_.remote_hardware_ == nullptr) {
        _this->_impl_.remote_hardware_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.remote_hardware_);
      } else {
        _this->_impl_.remote_hardware_->MergeFrom(*from._impl_.remote_hardware_);
      }
    }
    if ((cached_has_bits & 0x00000200U) != 0) {
      ABSL_DCHECK(from._impl_.neighbor_info_ != nullptr);
      if (_this->_impl_.neighbor_info_ == nullptr) {
        _this->_impl_.neighbor_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.neighbor_info_);
      } else {
        _this->_impl_.neighbor_info_->MergeFrom(*from._impl_.neighbor_info_);
      }
    }
    if ((cached_has_bits & 0x00000400U) != 0) {
      ABSL_DCHECK(from._impl_.ambient_lighting_ != nullptr);
      if (_this->_impl_.ambient_lighting_ == nullptr) {
        _this->_impl_.ambient_lighting_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ambient_lighting_);
      } else {
        _this->_impl_.ambient_lighting_->MergeFrom(*from._impl_.ambient_lighting_);
      }
    }
    if ((cached_has_bits & 0x00000800U) != 0) {
      ABSL_DCHECK(from._impl_.detection_sensor_ != nullptr);
      if (_this->_impl_.detection_sensor_ == nullptr) {
        _this->_impl_.detection_sensor_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.detection_sensor_);
      } else {
        _this->_impl_.detection_sensor_->MergeFrom(*from._impl_.detection_sensor_);
      }
    }
    if ((cached_has_bits & 0x00001000U) != 0) {
      ABSL_DCHECK(from._impl_.paxcounter_ != nullptr);
      if (_this->_impl_.paxcounter_ == nullptr) {
        _this->_impl_.paxcounter_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.paxcounter_);
      } else {
        _this->_impl_.paxcounter_->MergeFrom(*from._impl_.paxcounter_);
      }
    }
    if ((cached_has_bits & 0x00002000U) != 0) {
      if (from._internal_version() != 0) {
        _this->_impl_.version_ = from._impl_.version_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocalModuleConfig::CopyFrom(const LocalModuleConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.LocalModuleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LocalModuleConfig::InternalSwap(LocalModuleConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.version_)
      + sizeof(LocalModuleConfig::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(LocalModuleConfig, _impl_.mqtt_)>(
          reinterpret_cast<char*>(&_impl_.mqtt_),
          reinterpret_cast<char*>(&other->_impl_.mqtt_));
}

::google::protobuf::Metadata LocalModuleConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace meshtastic
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_meshtastic_2flocalonly_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
