// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: meshtastic/powermon.proto
// Protobuf C++ Version: 6.31.1

#ifndef meshtastic_2fpowermon_2eproto_2epb_2eh
#define meshtastic_2fpowermon_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_meshtastic_2fpowermon_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_meshtastic_2fpowermon_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_meshtastic_2fpowermon_2eproto;
}  // extern "C"
namespace meshtastic {
enum PowerMon_State : int;
extern const uint32_t PowerMon_State_internal_data_[];
enum PowerStressMessage_Opcode : int;
extern const uint32_t PowerStressMessage_Opcode_internal_data_[];
class PowerMon;
struct PowerMonDefaultTypeInternal;
extern PowerMonDefaultTypeInternal _PowerMon_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PowerMon_class_data_;
class PowerStressMessage;
struct PowerStressMessageDefaultTypeInternal;
extern PowerStressMessageDefaultTypeInternal _PowerStressMessage_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PowerStressMessage_class_data_;
}  // namespace meshtastic
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::meshtastic::PowerMon_State_internal_data_>
    internal::EnumTraitsImpl::value<::meshtastic::PowerMon_State>;
template <>
internal::EnumTraitsT<::meshtastic::PowerStressMessage_Opcode_internal_data_>
    internal::EnumTraitsImpl::value<::meshtastic::PowerStressMessage_Opcode>;
}  // namespace protobuf
}  // namespace google

namespace meshtastic {
enum PowerMon_State : int {
  PowerMon_State_None = 0,
  PowerMon_State_CPU_DeepSleep = 1,
  PowerMon_State_CPU_LightSleep = 2,
  PowerMon_State_Vext1_On = 4,
  PowerMon_State_Lora_RXOn = 8,
  PowerMon_State_Lora_TXOn = 16,
  PowerMon_State_Lora_RXActive = 32,
  PowerMon_State_BT_On = 64,
  PowerMon_State_LED_On = 128,
  PowerMon_State_Screen_On = 256,
  PowerMon_State_Screen_Drawing = 512,
  PowerMon_State_Wifi_On = 1024,
  PowerMon_State_GPS_Active = 2048,
  PowerMon_State_PowerMon_State_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  PowerMon_State_PowerMon_State_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t PowerMon_State_internal_data_[];
inline constexpr PowerMon_State PowerMon_State_State_MIN =
    static_cast<PowerMon_State>(0);
inline constexpr PowerMon_State PowerMon_State_State_MAX =
    static_cast<PowerMon_State>(2048);
inline bool PowerMon_State_IsValid(int value) {
  return ::google::protobuf::internal::ValidateEnum(value, PowerMon_State_internal_data_);
}
inline constexpr int PowerMon_State_State_ARRAYSIZE = 2048 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL PowerMon_State_descriptor();
template <typename T>
const ::std::string& PowerMon_State_Name(T value) {
  static_assert(::std::is_same<T, PowerMon_State>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to State_Name().");
  return ::google::protobuf::internal::NameOfEnum(PowerMon_State_descriptor(), value);
}
inline bool PowerMon_State_Parse(
    ::absl::string_view name, PowerMon_State* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<PowerMon_State>(PowerMon_State_descriptor(), name,
                                           value);
}
enum PowerStressMessage_Opcode : int {
  PowerStressMessage_Opcode_UNSET = 0,
  PowerStressMessage_Opcode_PRINT_INFO = 1,
  PowerStressMessage_Opcode_FORCE_QUIET = 2,
  PowerStressMessage_Opcode_END_QUIET = 3,
  PowerStressMessage_Opcode_SCREEN_ON = 16,
  PowerStressMessage_Opcode_SCREEN_OFF = 17,
  PowerStressMessage_Opcode_CPU_IDLE = 32,
  PowerStressMessage_Opcode_CPU_DEEPSLEEP = 33,
  PowerStressMessage_Opcode_CPU_FULLON = 34,
  PowerStressMessage_Opcode_LED_ON = 48,
  PowerStressMessage_Opcode_LED_OFF = 49,
  PowerStressMessage_Opcode_LORA_OFF = 64,
  PowerStressMessage_Opcode_LORA_TX = 65,
  PowerStressMessage_Opcode_LORA_RX = 66,
  PowerStressMessage_Opcode_BT_OFF = 80,
  PowerStressMessage_Opcode_BT_ON = 81,
  PowerStressMessage_Opcode_WIFI_OFF = 96,
  PowerStressMessage_Opcode_WIFI_ON = 97,
  PowerStressMessage_Opcode_GPS_OFF = 112,
  PowerStressMessage_Opcode_GPS_ON = 113,
  PowerStressMessage_Opcode_PowerStressMessage_Opcode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  PowerStressMessage_Opcode_PowerStressMessage_Opcode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t PowerStressMessage_Opcode_internal_data_[];
inline constexpr PowerStressMessage_Opcode PowerStressMessage_Opcode_Opcode_MIN =
    static_cast<PowerStressMessage_Opcode>(0);
inline constexpr PowerStressMessage_Opcode PowerStressMessage_Opcode_Opcode_MAX =
    static_cast<PowerStressMessage_Opcode>(113);
inline bool PowerStressMessage_Opcode_IsValid(int value) {
  return ::google::protobuf::internal::ValidateEnum(value, PowerStressMessage_Opcode_internal_data_);
}
inline constexpr int PowerStressMessage_Opcode_Opcode_ARRAYSIZE = 113 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL PowerStressMessage_Opcode_descriptor();
template <typename T>
const ::std::string& PowerStressMessage_Opcode_Name(T value) {
  static_assert(::std::is_same<T, PowerStressMessage_Opcode>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to Opcode_Name().");
  return ::google::protobuf::internal::NameOfEnum(PowerStressMessage_Opcode_descriptor(), value);
}
inline bool PowerStressMessage_Opcode_Parse(
    ::absl::string_view name, PowerStressMessage_Opcode* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<PowerStressMessage_Opcode>(PowerStressMessage_Opcode_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class PowerStressMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.PowerStressMessage) */ {
 public:
  inline PowerStressMessage() : PowerStressMessage(nullptr) {}
  ~PowerStressMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PowerStressMessage* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PowerStressMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PowerStressMessage(::google::protobuf::internal::ConstantInitialized);

  inline PowerStressMessage(const PowerStressMessage& from) : PowerStressMessage(nullptr, from) {}
  inline PowerStressMessage(PowerStressMessage&& from) noexcept
      : PowerStressMessage(nullptr, ::std::move(from)) {}
  inline PowerStressMessage& operator=(const PowerStressMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline PowerStressMessage& operator=(PowerStressMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PowerStressMessage& default_instance() {
    return *reinterpret_cast<const PowerStressMessage*>(
        &_PowerStressMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(PowerStressMessage& a, PowerStressMessage& b) { a.Swap(&b); }
  inline void Swap(PowerStressMessage* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PowerStressMessage* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PowerStressMessage* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PowerStressMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PowerStressMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PowerStressMessage& from) { PowerStressMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PowerStressMessage* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.PowerStressMessage"; }

 protected:
  explicit PowerStressMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PowerStressMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PowerStressMessage& from);
  PowerStressMessage(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PowerStressMessage&& from) noexcept
      : PowerStressMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Opcode = PowerStressMessage_Opcode;
  static constexpr Opcode UNSET = PowerStressMessage_Opcode_UNSET;
  static constexpr Opcode PRINT_INFO = PowerStressMessage_Opcode_PRINT_INFO;
  static constexpr Opcode FORCE_QUIET = PowerStressMessage_Opcode_FORCE_QUIET;
  static constexpr Opcode END_QUIET = PowerStressMessage_Opcode_END_QUIET;
  static constexpr Opcode SCREEN_ON = PowerStressMessage_Opcode_SCREEN_ON;
  static constexpr Opcode SCREEN_OFF = PowerStressMessage_Opcode_SCREEN_OFF;
  static constexpr Opcode CPU_IDLE = PowerStressMessage_Opcode_CPU_IDLE;
  static constexpr Opcode CPU_DEEPSLEEP = PowerStressMessage_Opcode_CPU_DEEPSLEEP;
  static constexpr Opcode CPU_FULLON = PowerStressMessage_Opcode_CPU_FULLON;
  static constexpr Opcode LED_ON = PowerStressMessage_Opcode_LED_ON;
  static constexpr Opcode LED_OFF = PowerStressMessage_Opcode_LED_OFF;
  static constexpr Opcode LORA_OFF = PowerStressMessage_Opcode_LORA_OFF;
  static constexpr Opcode LORA_TX = PowerStressMessage_Opcode_LORA_TX;
  static constexpr Opcode LORA_RX = PowerStressMessage_Opcode_LORA_RX;
  static constexpr Opcode BT_OFF = PowerStressMessage_Opcode_BT_OFF;
  static constexpr Opcode BT_ON = PowerStressMessage_Opcode_BT_ON;
  static constexpr Opcode WIFI_OFF = PowerStressMessage_Opcode_WIFI_OFF;
  static constexpr Opcode WIFI_ON = PowerStressMessage_Opcode_WIFI_ON;
  static constexpr Opcode GPS_OFF = PowerStressMessage_Opcode_GPS_OFF;
  static constexpr Opcode GPS_ON = PowerStressMessage_Opcode_GPS_ON;
  static inline bool Opcode_IsValid(int value) {
    return PowerStressMessage_Opcode_IsValid(value);
  }
  static constexpr Opcode Opcode_MIN = PowerStressMessage_Opcode_Opcode_MIN;
  static constexpr Opcode Opcode_MAX = PowerStressMessage_Opcode_Opcode_MAX;
  static constexpr int Opcode_ARRAYSIZE = PowerStressMessage_Opcode_Opcode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Opcode_descriptor() {
    return PowerStressMessage_Opcode_descriptor();
  }
  template <typename T>
  static inline const ::std::string& Opcode_Name(T value) {
    return PowerStressMessage_Opcode_Name(value);
  }
  static inline bool Opcode_Parse(
      ::absl::string_view name, Opcode* PROTOBUF_NONNULL value) {
    return PowerStressMessage_Opcode_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kCmdFieldNumber = 1,
    kNumSecondsFieldNumber = 2,
  };
  // .meshtastic.PowerStressMessage.Opcode cmd = 1;
  void clear_cmd() ;
  ::meshtastic::PowerStressMessage_Opcode cmd() const;
  void set_cmd(::meshtastic::PowerStressMessage_Opcode value);

  private:
  ::meshtastic::PowerStressMessage_Opcode _internal_cmd() const;
  void _internal_set_cmd(::meshtastic::PowerStressMessage_Opcode value);

  public:
  // float num_seconds = 2;
  void clear_num_seconds() ;
  float num_seconds() const;
  void set_num_seconds(float value);

  private:
  float _internal_num_seconds() const;
  void _internal_set_num_seconds(float value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.PowerStressMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PowerStressMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    int cmd_;
    float num_seconds_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fpowermon_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PowerStressMessage_class_data_;
// -------------------------------------------------------------------

class PowerMon final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:meshtastic.PowerMon) */ {
 public:
  inline PowerMon() : PowerMon(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PowerMon* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PowerMon));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PowerMon(::google::protobuf::internal::ConstantInitialized);

  inline PowerMon(const PowerMon& from) : PowerMon(nullptr, from) {}
  inline PowerMon(PowerMon&& from) noexcept
      : PowerMon(nullptr, ::std::move(from)) {}
  inline PowerMon& operator=(const PowerMon& from) {
    CopyFrom(from);
    return *this;
  }
  inline PowerMon& operator=(PowerMon&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PowerMon& default_instance() {
    return *reinterpret_cast<const PowerMon*>(
        &_PowerMon_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PowerMon& a, PowerMon& b) { a.Swap(&b); }
  inline void Swap(PowerMon* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PowerMon* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PowerMon* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<PowerMon>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PowerMon& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PowerMon& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.PowerMon"; }

 protected:
  explicit PowerMon(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PowerMon(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PowerMon& from);
  PowerMon(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PowerMon&& from) noexcept
      : PowerMon(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using State = PowerMon_State;
  static constexpr State None = PowerMon_State_None;
  static constexpr State CPU_DeepSleep = PowerMon_State_CPU_DeepSleep;
  static constexpr State CPU_LightSleep = PowerMon_State_CPU_LightSleep;
  static constexpr State Vext1_On = PowerMon_State_Vext1_On;
  static constexpr State Lora_RXOn = PowerMon_State_Lora_RXOn;
  static constexpr State Lora_TXOn = PowerMon_State_Lora_TXOn;
  static constexpr State Lora_RXActive = PowerMon_State_Lora_RXActive;
  static constexpr State BT_On = PowerMon_State_BT_On;
  static constexpr State LED_On = PowerMon_State_LED_On;
  static constexpr State Screen_On = PowerMon_State_Screen_On;
  static constexpr State Screen_Drawing = PowerMon_State_Screen_Drawing;
  static constexpr State Wifi_On = PowerMon_State_Wifi_On;
  static constexpr State GPS_Active = PowerMon_State_GPS_Active;
  static inline bool State_IsValid(int value) {
    return PowerMon_State_IsValid(value);
  }
  static constexpr State State_MIN = PowerMon_State_State_MIN;
  static constexpr State State_MAX = PowerMon_State_State_MAX;
  static constexpr int State_ARRAYSIZE = PowerMon_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL State_descriptor() {
    return PowerMon_State_descriptor();
  }
  template <typename T>
  static inline const ::std::string& State_Name(T value) {
    return PowerMon_State_Name(value);
  }
  static inline bool State_Parse(
      ::absl::string_view name, State* PROTOBUF_NONNULL value) {
    return PowerMon_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:meshtastic.PowerMon)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PowerMon& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_meshtastic_2fpowermon_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PowerMon_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PowerMon

// -------------------------------------------------------------------

// PowerStressMessage

// .meshtastic.PowerStressMessage.Opcode cmd = 1;
inline void PowerStressMessage::clear_cmd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cmd_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::meshtastic::PowerStressMessage_Opcode PowerStressMessage::cmd() const {
  // @@protoc_insertion_point(field_get:meshtastic.PowerStressMessage.cmd)
  return _internal_cmd();
}
inline void PowerStressMessage::set_cmd(::meshtastic::PowerStressMessage_Opcode value) {
  _internal_set_cmd(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:meshtastic.PowerStressMessage.cmd)
}
inline ::meshtastic::PowerStressMessage_Opcode PowerStressMessage::_internal_cmd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::meshtastic::PowerStressMessage_Opcode>(_impl_.cmd_);
}
inline void PowerStressMessage::_internal_set_cmd(::meshtastic::PowerStressMessage_Opcode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cmd_ = value;
}

// float num_seconds = 2;
inline void PowerStressMessage::clear_num_seconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_seconds_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float PowerStressMessage::num_seconds() const {
  // @@protoc_insertion_point(field_get:meshtastic.PowerStressMessage.num_seconds)
  return _internal_num_seconds();
}
inline void PowerStressMessage::set_num_seconds(float value) {
  _internal_set_num_seconds(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:meshtastic.PowerStressMessage.num_seconds)
}
inline float PowerStressMessage::_internal_num_seconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_seconds_;
}
inline void PowerStressMessage::_internal_set_num_seconds(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_seconds_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace meshtastic


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::meshtastic::PowerMon_State> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::meshtastic::PowerMon_State>() {
  return ::meshtastic::PowerMon_State_descriptor();
}
template <>
struct is_proto_enum<::meshtastic::PowerStressMessage_Opcode> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::meshtastic::PowerStressMessage_Opcode>() {
  return ::meshtastic::PowerStressMessage_Opcode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // meshtastic_2fpowermon_2eproto_2epb_2eh
