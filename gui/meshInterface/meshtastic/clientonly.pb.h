// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: meshtastic/clientonly.proto
// Protobuf C++ Version: 6.31.1

#ifndef meshtastic_2fclientonly_2eproto_2epb_2eh
#define meshtastic_2fclientonly_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "meshtastic/localonly.pb.h"
#include "meshtastic/mesh.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_meshtastic_2fclientonly_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_meshtastic_2fclientonly_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_meshtastic_2fclientonly_2eproto;
}  // extern "C"
namespace meshtastic {
class DeviceProfile;
struct DeviceProfileDefaultTypeInternal;
extern DeviceProfileDefaultTypeInternal _DeviceProfile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DeviceProfile_class_data_;
}  // namespace meshtastic
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace meshtastic {

// ===================================================================


// -------------------------------------------------------------------

class DeviceProfile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.DeviceProfile) */ {
 public:
  inline DeviceProfile() : DeviceProfile(nullptr) {}
  ~DeviceProfile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeviceProfile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeviceProfile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceProfile(::google::protobuf::internal::ConstantInitialized);

  inline DeviceProfile(const DeviceProfile& from) : DeviceProfile(nullptr, from) {}
  inline DeviceProfile(DeviceProfile&& from) noexcept
      : DeviceProfile(nullptr, ::std::move(from)) {}
  inline DeviceProfile& operator=(const DeviceProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceProfile& operator=(DeviceProfile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceProfile& default_instance() {
    return *reinterpret_cast<const DeviceProfile*>(
        &_DeviceProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(DeviceProfile& a, DeviceProfile& b) { a.Swap(&b); }
  inline void Swap(DeviceProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceProfile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeviceProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeviceProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeviceProfile& from) { DeviceProfile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeviceProfile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.DeviceProfile"; }

 protected:
  explicit DeviceProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DeviceProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DeviceProfile& from);
  DeviceProfile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DeviceProfile&& from) noexcept
      : DeviceProfile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLongNameFieldNumber = 1,
    kShortNameFieldNumber = 2,
    kChannelUrlFieldNumber = 3,
    kRingtoneFieldNumber = 7,
    kCannedMessagesFieldNumber = 8,
    kConfigFieldNumber = 4,
    kModuleConfigFieldNumber = 5,
    kFixedPositionFieldNumber = 6,
  };
  // optional string long_name = 1;
  bool has_long_name() const;
  void clear_long_name() ;
  const ::std::string& long_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_long_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_long_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_long_name();
  void set_allocated_long_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_long_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_long_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_long_name();

  public:
  // optional string short_name = 2;
  bool has_short_name() const;
  void clear_short_name() ;
  const ::std::string& short_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_short_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_short_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_short_name();
  void set_allocated_short_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_short_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_short_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_short_name();

  public:
  // optional string channel_url = 3;
  bool has_channel_url() const;
  void clear_channel_url() ;
  const ::std::string& channel_url() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_channel_url(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_channel_url();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_channel_url();
  void set_allocated_channel_url(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_channel_url() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_channel_url(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_channel_url();

  public:
  // optional string ringtone = 7;
  bool has_ringtone() const;
  void clear_ringtone() ;
  const ::std::string& ringtone() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_ringtone(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_ringtone();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_ringtone();
  void set_allocated_ringtone(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_ringtone() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_ringtone(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_ringtone();

  public:
  // optional string canned_messages = 8;
  bool has_canned_messages() const;
  void clear_canned_messages() ;
  const ::std::string& canned_messages() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_canned_messages(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_canned_messages();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_canned_messages();
  void set_allocated_canned_messages(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_canned_messages() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_canned_messages(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_canned_messages();

  public:
  // optional .meshtastic.LocalConfig config = 4;
  bool has_config() const;
  void clear_config() ;
  const ::meshtastic::LocalConfig& config() const;
  [[nodiscard]] ::meshtastic::LocalConfig* PROTOBUF_NULLABLE release_config();
  ::meshtastic::LocalConfig* PROTOBUF_NONNULL mutable_config();
  void set_allocated_config(::meshtastic::LocalConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_config(::meshtastic::LocalConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::LocalConfig* PROTOBUF_NULLABLE unsafe_arena_release_config();

  private:
  const ::meshtastic::LocalConfig& _internal_config() const;
  ::meshtastic::LocalConfig* PROTOBUF_NONNULL _internal_mutable_config();

  public:
  // optional .meshtastic.LocalModuleConfig module_config = 5;
  bool has_module_config() const;
  void clear_module_config() ;
  const ::meshtastic::LocalModuleConfig& module_config() const;
  [[nodiscard]] ::meshtastic::LocalModuleConfig* PROTOBUF_NULLABLE release_module_config();
  ::meshtastic::LocalModuleConfig* PROTOBUF_NONNULL mutable_module_config();
  void set_allocated_module_config(::meshtastic::LocalModuleConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_module_config(::meshtastic::LocalModuleConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::LocalModuleConfig* PROTOBUF_NULLABLE unsafe_arena_release_module_config();

  private:
  const ::meshtastic::LocalModuleConfig& _internal_module_config() const;
  ::meshtastic::LocalModuleConfig* PROTOBUF_NONNULL _internal_mutable_module_config();

  public:
  // optional .meshtastic.Position fixed_position = 6;
  bool has_fixed_position() const;
  void clear_fixed_position() ;
  const ::meshtastic::Position& fixed_position() const;
  [[nodiscard]] ::meshtastic::Position* PROTOBUF_NULLABLE release_fixed_position();
  ::meshtastic::Position* PROTOBUF_NONNULL mutable_fixed_position();
  void set_allocated_fixed_position(::meshtastic::Position* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_fixed_position(::meshtastic::Position* PROTOBUF_NULLABLE value);
  ::meshtastic::Position* PROTOBUF_NULLABLE unsafe_arena_release_fixed_position();

  private:
  const ::meshtastic::Position& _internal_fixed_position() const;
  ::meshtastic::Position* PROTOBUF_NONNULL _internal_mutable_fixed_position();

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.DeviceProfile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8,
                                   3, 94,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DeviceProfile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr long_name_;
    ::google::protobuf::internal::ArenaStringPtr short_name_;
    ::google::protobuf::internal::ArenaStringPtr channel_url_;
    ::google::protobuf::internal::ArenaStringPtr ringtone_;
    ::google::protobuf::internal::ArenaStringPtr canned_messages_;
    ::meshtastic::LocalConfig* PROTOBUF_NULLABLE config_;
    ::meshtastic::LocalModuleConfig* PROTOBUF_NULLABLE module_config_;
    ::meshtastic::Position* PROTOBUF_NULLABLE fixed_position_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fclientonly_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DeviceProfile_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DeviceProfile

// optional string long_name = 1;
inline bool DeviceProfile::has_long_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void DeviceProfile::clear_long_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.long_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& DeviceProfile::long_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.DeviceProfile.long_name)
  return _internal_long_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DeviceProfile::set_long_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.long_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.DeviceProfile.long_name)
}
inline ::std::string* PROTOBUF_NONNULL DeviceProfile::mutable_long_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_long_name();
  // @@protoc_insertion_point(field_mutable:meshtastic.DeviceProfile.long_name)
  return _s;
}
inline const ::std::string& DeviceProfile::_internal_long_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.long_name_.Get();
}
inline void DeviceProfile::_internal_set_long_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.long_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DeviceProfile::_internal_mutable_long_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.long_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DeviceProfile::release_long_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.DeviceProfile.long_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.long_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.long_name_.Set("", GetArena());
  }
  return released;
}
inline void DeviceProfile::set_allocated_long_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.long_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.long_name_.IsDefault()) {
    _impl_.long_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.DeviceProfile.long_name)
}

// optional string short_name = 2;
inline bool DeviceProfile::has_short_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void DeviceProfile::clear_short_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.short_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& DeviceProfile::short_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.DeviceProfile.short_name)
  return _internal_short_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DeviceProfile::set_short_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.short_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.DeviceProfile.short_name)
}
inline ::std::string* PROTOBUF_NONNULL DeviceProfile::mutable_short_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_short_name();
  // @@protoc_insertion_point(field_mutable:meshtastic.DeviceProfile.short_name)
  return _s;
}
inline const ::std::string& DeviceProfile::_internal_short_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.short_name_.Get();
}
inline void DeviceProfile::_internal_set_short_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.short_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DeviceProfile::_internal_mutable_short_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.short_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DeviceProfile::release_short_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.DeviceProfile.short_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.short_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.short_name_.Set("", GetArena());
  }
  return released;
}
inline void DeviceProfile::set_allocated_short_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.short_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.short_name_.IsDefault()) {
    _impl_.short_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.DeviceProfile.short_name)
}

// optional string channel_url = 3;
inline bool DeviceProfile::has_channel_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void DeviceProfile::clear_channel_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& DeviceProfile::channel_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.DeviceProfile.channel_url)
  return _internal_channel_url();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DeviceProfile::set_channel_url(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.channel_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.DeviceProfile.channel_url)
}
inline ::std::string* PROTOBUF_NONNULL DeviceProfile::mutable_channel_url()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_channel_url();
  // @@protoc_insertion_point(field_mutable:meshtastic.DeviceProfile.channel_url)
  return _s;
}
inline const ::std::string& DeviceProfile::_internal_channel_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_url_.Get();
}
inline void DeviceProfile::_internal_set_channel_url(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.channel_url_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DeviceProfile::_internal_mutable_channel_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.channel_url_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DeviceProfile::release_channel_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.DeviceProfile.channel_url)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.channel_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.channel_url_.Set("", GetArena());
  }
  return released;
}
inline void DeviceProfile::set_allocated_channel_url(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.channel_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.channel_url_.IsDefault()) {
    _impl_.channel_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.DeviceProfile.channel_url)
}

// optional .meshtastic.LocalConfig config = 4;
inline bool DeviceProfile::has_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.config_ != nullptr);
  return value;
}
inline const ::meshtastic::LocalConfig& DeviceProfile::_internal_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::LocalConfig* p = _impl_.config_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::LocalConfig&>(::meshtastic::_LocalConfig_default_instance_);
}
inline const ::meshtastic::LocalConfig& DeviceProfile::config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.DeviceProfile.config)
  return _internal_config();
}
inline void DeviceProfile::unsafe_arena_set_allocated_config(
    ::meshtastic::LocalConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.config_);
  }
  _impl_.config_ = reinterpret_cast<::meshtastic::LocalConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.DeviceProfile.config)
}
inline ::meshtastic::LocalConfig* PROTOBUF_NULLABLE DeviceProfile::release_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::meshtastic::LocalConfig* released = _impl_.config_;
  _impl_.config_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::LocalConfig* PROTOBUF_NULLABLE DeviceProfile::unsafe_arena_release_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.DeviceProfile.config)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::meshtastic::LocalConfig* temp = _impl_.config_;
  _impl_.config_ = nullptr;
  return temp;
}
inline ::meshtastic::LocalConfig* PROTOBUF_NONNULL DeviceProfile::_internal_mutable_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.config_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::LocalConfig>(GetArena());
    _impl_.config_ = reinterpret_cast<::meshtastic::LocalConfig*>(p);
  }
  return _impl_.config_;
}
inline ::meshtastic::LocalConfig* PROTOBUF_NONNULL DeviceProfile::mutable_config()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::meshtastic::LocalConfig* _msg = _internal_mutable_config();
  // @@protoc_insertion_point(field_mutable:meshtastic.DeviceProfile.config)
  return _msg;
}
inline void DeviceProfile::set_allocated_config(::meshtastic::LocalConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.config_ = reinterpret_cast<::meshtastic::LocalConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.DeviceProfile.config)
}

// optional .meshtastic.LocalModuleConfig module_config = 5;
inline bool DeviceProfile::has_module_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.module_config_ != nullptr);
  return value;
}
inline const ::meshtastic::LocalModuleConfig& DeviceProfile::_internal_module_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::LocalModuleConfig* p = _impl_.module_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::LocalModuleConfig&>(::meshtastic::_LocalModuleConfig_default_instance_);
}
inline const ::meshtastic::LocalModuleConfig& DeviceProfile::module_config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.DeviceProfile.module_config)
  return _internal_module_config();
}
inline void DeviceProfile::unsafe_arena_set_allocated_module_config(
    ::meshtastic::LocalModuleConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.module_config_);
  }
  _impl_.module_config_ = reinterpret_cast<::meshtastic::LocalModuleConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.DeviceProfile.module_config)
}
inline ::meshtastic::LocalModuleConfig* PROTOBUF_NULLABLE DeviceProfile::release_module_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::meshtastic::LocalModuleConfig* released = _impl_.module_config_;
  _impl_.module_config_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::LocalModuleConfig* PROTOBUF_NULLABLE DeviceProfile::unsafe_arena_release_module_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.DeviceProfile.module_config)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::meshtastic::LocalModuleConfig* temp = _impl_.module_config_;
  _impl_.module_config_ = nullptr;
  return temp;
}
inline ::meshtastic::LocalModuleConfig* PROTOBUF_NONNULL DeviceProfile::_internal_mutable_module_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.module_config_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::LocalModuleConfig>(GetArena());
    _impl_.module_config_ = reinterpret_cast<::meshtastic::LocalModuleConfig*>(p);
  }
  return _impl_.module_config_;
}
inline ::meshtastic::LocalModuleConfig* PROTOBUF_NONNULL DeviceProfile::mutable_module_config()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::meshtastic::LocalModuleConfig* _msg = _internal_mutable_module_config();
  // @@protoc_insertion_point(field_mutable:meshtastic.DeviceProfile.module_config)
  return _msg;
}
inline void DeviceProfile::set_allocated_module_config(::meshtastic::LocalModuleConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.module_config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.module_config_ = reinterpret_cast<::meshtastic::LocalModuleConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.DeviceProfile.module_config)
}

// optional .meshtastic.Position fixed_position = 6;
inline bool DeviceProfile::has_fixed_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.fixed_position_ != nullptr);
  return value;
}
inline const ::meshtastic::Position& DeviceProfile::_internal_fixed_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::Position* p = _impl_.fixed_position_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::Position&>(::meshtastic::_Position_default_instance_);
}
inline const ::meshtastic::Position& DeviceProfile::fixed_position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.DeviceProfile.fixed_position)
  return _internal_fixed_position();
}
inline void DeviceProfile::unsafe_arena_set_allocated_fixed_position(
    ::meshtastic::Position* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.fixed_position_);
  }
  _impl_.fixed_position_ = reinterpret_cast<::meshtastic::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.DeviceProfile.fixed_position)
}
inline ::meshtastic::Position* PROTOBUF_NULLABLE DeviceProfile::release_fixed_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::meshtastic::Position* released = _impl_.fixed_position_;
  _impl_.fixed_position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::Position* PROTOBUF_NULLABLE DeviceProfile::unsafe_arena_release_fixed_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.DeviceProfile.fixed_position)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::meshtastic::Position* temp = _impl_.fixed_position_;
  _impl_.fixed_position_ = nullptr;
  return temp;
}
inline ::meshtastic::Position* PROTOBUF_NONNULL DeviceProfile::_internal_mutable_fixed_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.fixed_position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::Position>(GetArena());
    _impl_.fixed_position_ = reinterpret_cast<::meshtastic::Position*>(p);
  }
  return _impl_.fixed_position_;
}
inline ::meshtastic::Position* PROTOBUF_NONNULL DeviceProfile::mutable_fixed_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::meshtastic::Position* _msg = _internal_mutable_fixed_position();
  // @@protoc_insertion_point(field_mutable:meshtastic.DeviceProfile.fixed_position)
  return _msg;
}
inline void DeviceProfile::set_allocated_fixed_position(::meshtastic::Position* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.fixed_position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.fixed_position_ = reinterpret_cast<::meshtastic::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.DeviceProfile.fixed_position)
}

// optional string ringtone = 7;
inline bool DeviceProfile::has_ringtone() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void DeviceProfile::clear_ringtone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ringtone_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& DeviceProfile::ringtone() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.DeviceProfile.ringtone)
  return _internal_ringtone();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DeviceProfile::set_ringtone(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.ringtone_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.DeviceProfile.ringtone)
}
inline ::std::string* PROTOBUF_NONNULL DeviceProfile::mutable_ringtone()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_ringtone();
  // @@protoc_insertion_point(field_mutable:meshtastic.DeviceProfile.ringtone)
  return _s;
}
inline const ::std::string& DeviceProfile::_internal_ringtone() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ringtone_.Get();
}
inline void DeviceProfile::_internal_set_ringtone(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.ringtone_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DeviceProfile::_internal_mutable_ringtone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.ringtone_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DeviceProfile::release_ringtone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.DeviceProfile.ringtone)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.ringtone_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.ringtone_.Set("", GetArena());
  }
  return released;
}
inline void DeviceProfile::set_allocated_ringtone(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.ringtone_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ringtone_.IsDefault()) {
    _impl_.ringtone_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.DeviceProfile.ringtone)
}

// optional string canned_messages = 8;
inline bool DeviceProfile::has_canned_messages() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void DeviceProfile::clear_canned_messages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.canned_messages_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::std::string& DeviceProfile::canned_messages() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.DeviceProfile.canned_messages)
  return _internal_canned_messages();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DeviceProfile::set_canned_messages(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.canned_messages_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.DeviceProfile.canned_messages)
}
inline ::std::string* PROTOBUF_NONNULL DeviceProfile::mutable_canned_messages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_canned_messages();
  // @@protoc_insertion_point(field_mutable:meshtastic.DeviceProfile.canned_messages)
  return _s;
}
inline const ::std::string& DeviceProfile::_internal_canned_messages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.canned_messages_.Get();
}
inline void DeviceProfile::_internal_set_canned_messages(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.canned_messages_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DeviceProfile::_internal_mutable_canned_messages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.canned_messages_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DeviceProfile::release_canned_messages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.DeviceProfile.canned_messages)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.canned_messages_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.canned_messages_.Set("", GetArena());
  }
  return released;
}
inline void DeviceProfile::set_allocated_canned_messages(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.canned_messages_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.canned_messages_.IsDefault()) {
    _impl_.canned_messages_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.DeviceProfile.canned_messages)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace meshtastic


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // meshtastic_2fclientonly_2eproto_2epb_2eh
