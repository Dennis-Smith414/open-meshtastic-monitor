// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: meshtastic/connection_status.proto
// Protobuf C++ Version: 6.31.1

#include "meshtastic/connection_status.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace meshtastic {

inline constexpr SerialConnectionStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        baud_{0u},
        is_connected_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SerialConnectionStatus::SerialConnectionStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SerialConnectionStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SerialConnectionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SerialConnectionStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SerialConnectionStatusDefaultTypeInternal() {}
  union {
    SerialConnectionStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SerialConnectionStatusDefaultTypeInternal _SerialConnectionStatus_default_instance_;

inline constexpr NetworkConnectionStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ip_address_{0u},
        is_connected_{false},
        is_mqtt_connected_{false},
        is_syslog_connected_{false} {}

template <typename>
PROTOBUF_CONSTEXPR NetworkConnectionStatus::NetworkConnectionStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NetworkConnectionStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NetworkConnectionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkConnectionStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkConnectionStatusDefaultTypeInternal() {}
  union {
    NetworkConnectionStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkConnectionStatusDefaultTypeInternal _NetworkConnectionStatus_default_instance_;

inline constexpr BluetoothConnectionStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pin_{0u},
        rssi_{0},
        is_connected_{false} {}

template <typename>
PROTOBUF_CONSTEXPR BluetoothConnectionStatus::BluetoothConnectionStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BluetoothConnectionStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BluetoothConnectionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BluetoothConnectionStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BluetoothConnectionStatusDefaultTypeInternal() {}
  union {
    BluetoothConnectionStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BluetoothConnectionStatusDefaultTypeInternal _BluetoothConnectionStatus_default_instance_;

inline constexpr WifiConnectionStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ssid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{nullptr},
        rssi_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WifiConnectionStatus::WifiConnectionStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WifiConnectionStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WifiConnectionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WifiConnectionStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WifiConnectionStatusDefaultTypeInternal() {}
  union {
    WifiConnectionStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WifiConnectionStatusDefaultTypeInternal _WifiConnectionStatus_default_instance_;

inline constexpr EthernetConnectionStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR EthernetConnectionStatus::EthernetConnectionStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EthernetConnectionStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EthernetConnectionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EthernetConnectionStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EthernetConnectionStatusDefaultTypeInternal() {}
  union {
    EthernetConnectionStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EthernetConnectionStatusDefaultTypeInternal _EthernetConnectionStatus_default_instance_;

inline constexpr DeviceConnectionStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        wifi_{nullptr},
        ethernet_{nullptr},
        bluetooth_{nullptr},
        serial_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceConnectionStatus::DeviceConnectionStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DeviceConnectionStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeviceConnectionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceConnectionStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceConnectionStatusDefaultTypeInternal() {}
  union {
    DeviceConnectionStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceConnectionStatusDefaultTypeInternal _DeviceConnectionStatus_default_instance_;
}  // namespace meshtastic
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_meshtastic_2fconnection_5fstatus_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_meshtastic_2fconnection_5fstatus_2eproto = nullptr;
const ::uint32_t
    TableStruct_meshtastic_2fconnection_5fstatus_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceConnectionStatus, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceConnectionStatus, _impl_.wifi_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceConnectionStatus, _impl_.ethernet_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceConnectionStatus, _impl_.bluetooth_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceConnectionStatus, _impl_.serial_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::WifiConnectionStatus, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::WifiConnectionStatus, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::WifiConnectionStatus, _impl_.ssid_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::WifiConnectionStatus, _impl_.rssi_),
        1,
        0,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::EthernetConnectionStatus, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::EthernetConnectionStatus, _impl_.status_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::NetworkConnectionStatus, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::NetworkConnectionStatus, _impl_.ip_address_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::NetworkConnectionStatus, _impl_.is_connected_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::NetworkConnectionStatus, _impl_.is_mqtt_connected_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::NetworkConnectionStatus, _impl_.is_syslog_connected_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::BluetoothConnectionStatus, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::BluetoothConnectionStatus, _impl_.pin_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::BluetoothConnectionStatus, _impl_.rssi_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::BluetoothConnectionStatus, _impl_.is_connected_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::SerialConnectionStatus, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::SerialConnectionStatus, _impl_.baud_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::SerialConnectionStatus, _impl_.is_connected_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::meshtastic::DeviceConnectionStatus)},
        {11, sizeof(::meshtastic::WifiConnectionStatus)},
        {20, sizeof(::meshtastic::EthernetConnectionStatus)},
        {25, sizeof(::meshtastic::NetworkConnectionStatus)},
        {36, sizeof(::meshtastic::BluetoothConnectionStatus)},
        {45, sizeof(::meshtastic::SerialConnectionStatus)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::meshtastic::_DeviceConnectionStatus_default_instance_._instance,
    &::meshtastic::_WifiConnectionStatus_default_instance_._instance,
    &::meshtastic::_EthernetConnectionStatus_default_instance_._instance,
    &::meshtastic::_NetworkConnectionStatus_default_instance_._instance,
    &::meshtastic::_BluetoothConnectionStatus_default_instance_._instance,
    &::meshtastic::_SerialConnectionStatus_default_instance_._instance,
};
const char descriptor_table_protodef_meshtastic_2fconnection_5fstatus_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\"meshtastic/connection_status.proto\022\nme"
    "shtastic\"\261\002\n\026DeviceConnectionStatus\0223\n\004w"
    "ifi\030\001 \001(\0132 .meshtastic.WifiConnectionSta"
    "tusH\000\210\001\001\022;\n\010ethernet\030\002 \001(\0132$.meshtastic."
    "EthernetConnectionStatusH\001\210\001\001\022=\n\tbluetoo"
    "th\030\003 \001(\0132%.meshtastic.BluetoothConnectio"
    "nStatusH\002\210\001\001\0227\n\006serial\030\004 \001(\0132\".meshtasti"
    "c.SerialConnectionStatusH\003\210\001\001B\007\n\005_wifiB\013"
    "\n\t_ethernetB\014\n\n_bluetoothB\t\n\007_serial\"g\n\024"
    "WifiConnectionStatus\0223\n\006status\030\001 \001(\0132#.m"
    "eshtastic.NetworkConnectionStatus\022\014\n\004ssi"
    "d\030\002 \001(\t\022\014\n\004rssi\030\003 \001(\005\"O\n\030EthernetConnect"
    "ionStatus\0223\n\006status\030\001 \001(\0132#.meshtastic.N"
    "etworkConnectionStatus\"{\n\027NetworkConnect"
    "ionStatus\022\022\n\nip_address\030\001 \001(\007\022\024\n\014is_conn"
    "ected\030\002 \001(\010\022\031\n\021is_mqtt_connected\030\003 \001(\010\022\033"
    "\n\023is_syslog_connected\030\004 \001(\010\"L\n\031Bluetooth"
    "ConnectionStatus\022\013\n\003pin\030\001 \001(\r\022\014\n\004rssi\030\002 "
    "\001(\005\022\024\n\014is_connected\030\003 \001(\010\"<\n\026SerialConne"
    "ctionStatus\022\014\n\004baud\030\001 \001(\r\022\024\n\014is_connecte"
    "d\030\002 \001(\010Be\n\023com.geeksville.meshB\020ConnStat"
    "usProtosZ\"github.com/meshtastic/go/gener"
    "ated\252\002\024Meshtastic.Protobufs\272\002\000b\006proto3"
};
static ::absl::once_flag descriptor_table_meshtastic_2fconnection_5fstatus_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_meshtastic_2fconnection_5fstatus_2eproto = {
    false,
    false,
    918,
    descriptor_table_protodef_meshtastic_2fconnection_5fstatus_2eproto,
    "meshtastic/connection_status.proto",
    &descriptor_table_meshtastic_2fconnection_5fstatus_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_meshtastic_2fconnection_5fstatus_2eproto::offsets,
    file_level_enum_descriptors_meshtastic_2fconnection_5fstatus_2eproto,
    file_level_service_descriptors_meshtastic_2fconnection_5fstatus_2eproto,
};
namespace meshtastic {
// ===================================================================

class DeviceConnectionStatus::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DeviceConnectionStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeviceConnectionStatus, _impl_._has_bits_);
};

DeviceConnectionStatus::DeviceConnectionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeviceConnectionStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.DeviceConnectionStatus)
}
PROTOBUF_NDEBUG_INLINE DeviceConnectionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::meshtastic::DeviceConnectionStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DeviceConnectionStatus::DeviceConnectionStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DeviceConnectionStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeviceConnectionStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeviceConnectionStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.wifi_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.wifi_)
                : nullptr;
  _impl_.ethernet_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ethernet_)
                : nullptr;
  _impl_.bluetooth_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bluetooth_)
                : nullptr;
  _impl_.serial_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.serial_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:meshtastic.DeviceConnectionStatus)
}
PROTOBUF_NDEBUG_INLINE DeviceConnectionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void DeviceConnectionStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, wifi_),
           0,
           offsetof(Impl_, serial_) -
               offsetof(Impl_, wifi_) +
               sizeof(Impl_::serial_));
}
DeviceConnectionStatus::~DeviceConnectionStatus() {
  // @@protoc_insertion_point(destructor:meshtastic.DeviceConnectionStatus)
  SharedDtor(*this);
}
inline void DeviceConnectionStatus::SharedDtor(MessageLite& self) {
  DeviceConnectionStatus& this_ = static_cast<DeviceConnectionStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.wifi_;
  delete this_._impl_.ethernet_;
  delete this_._impl_.bluetooth_;
  delete this_._impl_.serial_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DeviceConnectionStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DeviceConnectionStatus(arena);
}
constexpr auto DeviceConnectionStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DeviceConnectionStatus),
                                            alignof(DeviceConnectionStatus));
}
constexpr auto DeviceConnectionStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DeviceConnectionStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DeviceConnectionStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DeviceConnectionStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DeviceConnectionStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DeviceConnectionStatus>(), &DeviceConnectionStatus::ByteSizeLong,
              &DeviceConnectionStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DeviceConnectionStatus, _impl_._cached_size_),
          false,
      },
      &DeviceConnectionStatus::kDescriptorMethods,
      &descriptor_table_meshtastic_2fconnection_5fstatus_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DeviceConnectionStatus_class_data_ =
        DeviceConnectionStatus::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DeviceConnectionStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DeviceConnectionStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DeviceConnectionStatus_class_data_.tc_table);
  return DeviceConnectionStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2>
DeviceConnectionStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceConnectionStatus, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    DeviceConnectionStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::DeviceConnectionStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .meshtastic.SerialConnectionStatus serial = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(DeviceConnectionStatus, _impl_.serial_)}},
    // optional .meshtastic.WifiConnectionStatus wifi = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceConnectionStatus, _impl_.wifi_)}},
    // optional .meshtastic.EthernetConnectionStatus ethernet = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(DeviceConnectionStatus, _impl_.ethernet_)}},
    // optional .meshtastic.BluetoothConnectionStatus bluetooth = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(DeviceConnectionStatus, _impl_.bluetooth_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .meshtastic.WifiConnectionStatus wifi = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceConnectionStatus, _impl_.wifi_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .meshtastic.EthernetConnectionStatus ethernet = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceConnectionStatus, _impl_.ethernet_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .meshtastic.BluetoothConnectionStatus bluetooth = 3;
    {PROTOBUF_FIELD_OFFSET(DeviceConnectionStatus, _impl_.bluetooth_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .meshtastic.SerialConnectionStatus serial = 4;
    {PROTOBUF_FIELD_OFFSET(DeviceConnectionStatus, _impl_.serial_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::WifiConnectionStatus>()},
      {::_pbi::TcParser::GetTable<::meshtastic::EthernetConnectionStatus>()},
      {::_pbi::TcParser::GetTable<::meshtastic::BluetoothConnectionStatus>()},
      {::_pbi::TcParser::GetTable<::meshtastic::SerialConnectionStatus>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void DeviceConnectionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.DeviceConnectionStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.wifi_ != nullptr);
      _impl_.wifi_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.ethernet_ != nullptr);
      _impl_.ethernet_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.bluetooth_ != nullptr);
      _impl_.bluetooth_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.serial_ != nullptr);
      _impl_.serial_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DeviceConnectionStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DeviceConnectionStatus& this_ = static_cast<const DeviceConnectionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DeviceConnectionStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DeviceConnectionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.DeviceConnectionStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .meshtastic.WifiConnectionStatus wifi = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.wifi_, this_._impl_.wifi_->GetCachedSize(), target,
        stream);
  }

  // optional .meshtastic.EthernetConnectionStatus ethernet = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.ethernet_, this_._impl_.ethernet_->GetCachedSize(), target,
        stream);
  }

  // optional .meshtastic.BluetoothConnectionStatus bluetooth = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.bluetooth_, this_._impl_.bluetooth_->GetCachedSize(), target,
        stream);
  }

  // optional .meshtastic.SerialConnectionStatus serial = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.serial_, this_._impl_.serial_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.DeviceConnectionStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeviceConnectionStatus::ByteSizeLong(const MessageLite& base) {
  const DeviceConnectionStatus& this_ = static_cast<const DeviceConnectionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeviceConnectionStatus::ByteSizeLong() const {
  const DeviceConnectionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.DeviceConnectionStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional .meshtastic.WifiConnectionStatus wifi = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.wifi_);
    }
    // optional .meshtastic.EthernetConnectionStatus ethernet = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ethernet_);
    }
    // optional .meshtastic.BluetoothConnectionStatus bluetooth = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.bluetooth_);
    }
    // optional .meshtastic.SerialConnectionStatus serial = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.serial_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DeviceConnectionStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceConnectionStatus*>(&to_msg);
  auto& from = static_cast<const DeviceConnectionStatus&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.DeviceConnectionStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.wifi_ != nullptr);
      if (_this->_impl_.wifi_ == nullptr) {
        _this->_impl_.wifi_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.wifi_);
      } else {
        _this->_impl_.wifi_->MergeFrom(*from._impl_.wifi_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.ethernet_ != nullptr);
      if (_this->_impl_.ethernet_ == nullptr) {
        _this->_impl_.ethernet_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ethernet_);
      } else {
        _this->_impl_.ethernet_->MergeFrom(*from._impl_.ethernet_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.bluetooth_ != nullptr);
      if (_this->_impl_.bluetooth_ == nullptr) {
        _this->_impl_.bluetooth_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bluetooth_);
      } else {
        _this->_impl_.bluetooth_->MergeFrom(*from._impl_.bluetooth_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.serial_ != nullptr);
      if (_this->_impl_.serial_ == nullptr) {
        _this->_impl_.serial_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.serial_);
      } else {
        _this->_impl_.serial_->MergeFrom(*from._impl_.serial_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceConnectionStatus::CopyFrom(const DeviceConnectionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.DeviceConnectionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceConnectionStatus::InternalSwap(DeviceConnectionStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeviceConnectionStatus, _impl_.serial_)
      + sizeof(DeviceConnectionStatus::_impl_.serial_)
      - PROTOBUF_FIELD_OFFSET(DeviceConnectionStatus, _impl_.wifi_)>(
          reinterpret_cast<char*>(&_impl_.wifi_),
          reinterpret_cast<char*>(&other->_impl_.wifi_));
}

::google::protobuf::Metadata DeviceConnectionStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WifiConnectionStatus::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<WifiConnectionStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WifiConnectionStatus, _impl_._has_bits_);
};

WifiConnectionStatus::WifiConnectionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WifiConnectionStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.WifiConnectionStatus)
}
PROTOBUF_NDEBUG_INLINE WifiConnectionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::meshtastic::WifiConnectionStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ssid_(arena, from.ssid_) {}

WifiConnectionStatus::WifiConnectionStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const WifiConnectionStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WifiConnectionStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WifiConnectionStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.rssi_ = from._impl_.rssi_;

  // @@protoc_insertion_point(copy_constructor:meshtastic.WifiConnectionStatus)
}
PROTOBUF_NDEBUG_INLINE WifiConnectionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        ssid_(arena) {}

inline void WifiConnectionStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, rssi_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::rssi_));
}
WifiConnectionStatus::~WifiConnectionStatus() {
  // @@protoc_insertion_point(destructor:meshtastic.WifiConnectionStatus)
  SharedDtor(*this);
}
inline void WifiConnectionStatus::SharedDtor(MessageLite& self) {
  WifiConnectionStatus& this_ = static_cast<WifiConnectionStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.ssid_.Destroy();
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL WifiConnectionStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WifiConnectionStatus(arena);
}
constexpr auto WifiConnectionStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(WifiConnectionStatus),
                                            alignof(WifiConnectionStatus));
}
constexpr auto WifiConnectionStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WifiConnectionStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WifiConnectionStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WifiConnectionStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WifiConnectionStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WifiConnectionStatus>(), &WifiConnectionStatus::ByteSizeLong,
              &WifiConnectionStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WifiConnectionStatus, _impl_._cached_size_),
          false,
      },
      &WifiConnectionStatus::kDescriptorMethods,
      &descriptor_table_meshtastic_2fconnection_5fstatus_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull WifiConnectionStatus_class_data_ =
        WifiConnectionStatus::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
WifiConnectionStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WifiConnectionStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WifiConnectionStatus_class_data_.tc_table);
  return WifiConnectionStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 44, 2>
WifiConnectionStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WifiConnectionStatus, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    WifiConnectionStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::WifiConnectionStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .meshtastic.NetworkConnectionStatus status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(WifiConnectionStatus, _impl_.status_)}},
    // string ssid = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(WifiConnectionStatus, _impl_.ssid_)}},
    // int32 rssi = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WifiConnectionStatus, _impl_.rssi_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(WifiConnectionStatus, _impl_.rssi_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .meshtastic.NetworkConnectionStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(WifiConnectionStatus, _impl_.status_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string ssid = 2;
    {PROTOBUF_FIELD_OFFSET(WifiConnectionStatus, _impl_.ssid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 rssi = 3;
    {PROTOBUF_FIELD_OFFSET(WifiConnectionStatus, _impl_.rssi_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::NetworkConnectionStatus>()},
  }},
  {{
    "\37\0\4\0\0\0\0\0"
    "meshtastic.WifiConnectionStatus"
    "ssid"
  }},
};
PROTOBUF_NOINLINE void WifiConnectionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.WifiConnectionStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.ssid_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_.rssi_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WifiConnectionStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WifiConnectionStatus& this_ = static_cast<const WifiConnectionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WifiConnectionStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WifiConnectionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.WifiConnectionStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .meshtastic.NetworkConnectionStatus status = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  // string ssid = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!this_._internal_ssid().empty()) {
      const ::std::string& _s = this_._internal_ssid();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.WifiConnectionStatus.ssid");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 rssi = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_rssi() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_rssi(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.WifiConnectionStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WifiConnectionStatus::ByteSizeLong(const MessageLite& base) {
  const WifiConnectionStatus& this_ = static_cast<const WifiConnectionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WifiConnectionStatus::ByteSizeLong() const {
  const WifiConnectionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.WifiConnectionStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string ssid = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_ssid().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_ssid());
      }
    }
    // .meshtastic.NetworkConnectionStatus status = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // int32 rssi = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_rssi() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_rssi());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WifiConnectionStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WifiConnectionStatus*>(&to_msg);
  auto& from = static_cast<const WifiConnectionStatus&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.WifiConnectionStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_ssid().empty()) {
        _this->_internal_set_ssid(from._internal_ssid());
      } else {
        if (_this->_impl_.ssid_.IsDefault()) {
          _this->_internal_set_ssid("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_rssi() != 0) {
        _this->_impl_.rssi_ = from._impl_.rssi_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WifiConnectionStatus::CopyFrom(const WifiConnectionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.WifiConnectionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WifiConnectionStatus::InternalSwap(WifiConnectionStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ssid_, &other->_impl_.ssid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WifiConnectionStatus, _impl_.rssi_)
      + sizeof(WifiConnectionStatus::_impl_.rssi_)
      - PROTOBUF_FIELD_OFFSET(WifiConnectionStatus, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata WifiConnectionStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EthernetConnectionStatus::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EthernetConnectionStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EthernetConnectionStatus, _impl_._has_bits_);
};

EthernetConnectionStatus::EthernetConnectionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EthernetConnectionStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.EthernetConnectionStatus)
}
PROTOBUF_NDEBUG_INLINE EthernetConnectionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::meshtastic::EthernetConnectionStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

EthernetConnectionStatus::EthernetConnectionStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EthernetConnectionStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EthernetConnectionStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EthernetConnectionStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:meshtastic.EthernetConnectionStatus)
}
PROTOBUF_NDEBUG_INLINE EthernetConnectionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void EthernetConnectionStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
EthernetConnectionStatus::~EthernetConnectionStatus() {
  // @@protoc_insertion_point(destructor:meshtastic.EthernetConnectionStatus)
  SharedDtor(*this);
}
inline void EthernetConnectionStatus::SharedDtor(MessageLite& self) {
  EthernetConnectionStatus& this_ = static_cast<EthernetConnectionStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EthernetConnectionStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EthernetConnectionStatus(arena);
}
constexpr auto EthernetConnectionStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EthernetConnectionStatus),
                                            alignof(EthernetConnectionStatus));
}
constexpr auto EthernetConnectionStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EthernetConnectionStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EthernetConnectionStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EthernetConnectionStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EthernetConnectionStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EthernetConnectionStatus>(), &EthernetConnectionStatus::ByteSizeLong,
              &EthernetConnectionStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EthernetConnectionStatus, _impl_._cached_size_),
          false,
      },
      &EthernetConnectionStatus::kDescriptorMethods,
      &descriptor_table_meshtastic_2fconnection_5fstatus_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EthernetConnectionStatus_class_data_ =
        EthernetConnectionStatus::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EthernetConnectionStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EthernetConnectionStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EthernetConnectionStatus_class_data_.tc_table);
  return EthernetConnectionStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
EthernetConnectionStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EthernetConnectionStatus, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EthernetConnectionStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::EthernetConnectionStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .meshtastic.NetworkConnectionStatus status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EthernetConnectionStatus, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .meshtastic.NetworkConnectionStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(EthernetConnectionStatus, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::NetworkConnectionStatus>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void EthernetConnectionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.EthernetConnectionStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EthernetConnectionStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EthernetConnectionStatus& this_ = static_cast<const EthernetConnectionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EthernetConnectionStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EthernetConnectionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.EthernetConnectionStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .meshtastic.NetworkConnectionStatus status = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.EthernetConnectionStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EthernetConnectionStatus::ByteSizeLong(const MessageLite& base) {
  const EthernetConnectionStatus& this_ = static_cast<const EthernetConnectionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EthernetConnectionStatus::ByteSizeLong() const {
  const EthernetConnectionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.EthernetConnectionStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .meshtastic.NetworkConnectionStatus status = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EthernetConnectionStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EthernetConnectionStatus*>(&to_msg);
  auto& from = static_cast<const EthernetConnectionStatus&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.EthernetConnectionStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.status_ != nullptr);
    if (_this->_impl_.status_ == nullptr) {
      _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
    } else {
      _this->_impl_.status_->MergeFrom(*from._impl_.status_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EthernetConnectionStatus::CopyFrom(const EthernetConnectionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.EthernetConnectionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EthernetConnectionStatus::InternalSwap(EthernetConnectionStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata EthernetConnectionStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NetworkConnectionStatus::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NetworkConnectionStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NetworkConnectionStatus, _impl_._has_bits_);
};

NetworkConnectionStatus::NetworkConnectionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NetworkConnectionStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.NetworkConnectionStatus)
}
NetworkConnectionStatus::NetworkConnectionStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const NetworkConnectionStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NetworkConnectionStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE NetworkConnectionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void NetworkConnectionStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ip_address_),
           0,
           offsetof(Impl_, is_syslog_connected_) -
               offsetof(Impl_, ip_address_) +
               sizeof(Impl_::is_syslog_connected_));
}
NetworkConnectionStatus::~NetworkConnectionStatus() {
  // @@protoc_insertion_point(destructor:meshtastic.NetworkConnectionStatus)
  SharedDtor(*this);
}
inline void NetworkConnectionStatus::SharedDtor(MessageLite& self) {
  NetworkConnectionStatus& this_ = static_cast<NetworkConnectionStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NetworkConnectionStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NetworkConnectionStatus(arena);
}
constexpr auto NetworkConnectionStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(NetworkConnectionStatus),
                                            alignof(NetworkConnectionStatus));
}
constexpr auto NetworkConnectionStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NetworkConnectionStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NetworkConnectionStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NetworkConnectionStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NetworkConnectionStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NetworkConnectionStatus>(), &NetworkConnectionStatus::ByteSizeLong,
              &NetworkConnectionStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NetworkConnectionStatus, _impl_._cached_size_),
          false,
      },
      &NetworkConnectionStatus::kDescriptorMethods,
      &descriptor_table_meshtastic_2fconnection_5fstatus_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NetworkConnectionStatus_class_data_ =
        NetworkConnectionStatus::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NetworkConnectionStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NetworkConnectionStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NetworkConnectionStatus_class_data_.tc_table);
  return NetworkConnectionStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
NetworkConnectionStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetworkConnectionStatus, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    NetworkConnectionStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::NetworkConnectionStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool is_syslog_connected = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NetworkConnectionStatus, _impl_.is_syslog_connected_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(NetworkConnectionStatus, _impl_.is_syslog_connected_)}},
    // fixed32 ip_address = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(NetworkConnectionStatus, _impl_.ip_address_)}},
    // bool is_connected = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NetworkConnectionStatus, _impl_.is_connected_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(NetworkConnectionStatus, _impl_.is_connected_)}},
    // bool is_mqtt_connected = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NetworkConnectionStatus, _impl_.is_mqtt_connected_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(NetworkConnectionStatus, _impl_.is_mqtt_connected_)}},
  }}, {{
    65535, 65535
  }}, {{
    // fixed32 ip_address = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkConnectionStatus, _impl_.ip_address_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // bool is_connected = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkConnectionStatus, _impl_.is_connected_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool is_mqtt_connected = 3;
    {PROTOBUF_FIELD_OFFSET(NetworkConnectionStatus, _impl_.is_mqtt_connected_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool is_syslog_connected = 4;
    {PROTOBUF_FIELD_OFFSET(NetworkConnectionStatus, _impl_.is_syslog_connected_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void NetworkConnectionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.NetworkConnectionStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.ip_address_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_syslog_connected_) -
        reinterpret_cast<char*>(&_impl_.ip_address_)) + sizeof(_impl_.is_syslog_connected_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NetworkConnectionStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NetworkConnectionStatus& this_ = static_cast<const NetworkConnectionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NetworkConnectionStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NetworkConnectionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.NetworkConnectionStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // fixed32 ip_address = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_ip_address() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
          1, this_._internal_ip_address(), target);
    }
  }

  // bool is_connected = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_is_connected() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_is_connected(), target);
    }
  }

  // bool is_mqtt_connected = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_is_mqtt_connected() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_is_mqtt_connected(), target);
    }
  }

  // bool is_syslog_connected = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_is_syslog_connected() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_is_syslog_connected(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.NetworkConnectionStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NetworkConnectionStatus::ByteSizeLong(const MessageLite& base) {
  const NetworkConnectionStatus& this_ = static_cast<const NetworkConnectionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NetworkConnectionStatus::ByteSizeLong() const {
  const NetworkConnectionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.NetworkConnectionStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // fixed32 ip_address = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_ip_address() != 0) {
        total_size += 5;
      }
    }
    // bool is_connected = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_is_connected() != 0) {
        total_size += 2;
      }
    }
    // bool is_mqtt_connected = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_is_mqtt_connected() != 0) {
        total_size += 2;
      }
    }
    // bool is_syslog_connected = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_is_syslog_connected() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NetworkConnectionStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NetworkConnectionStatus*>(&to_msg);
  auto& from = static_cast<const NetworkConnectionStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.NetworkConnectionStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_ip_address() != 0) {
        _this->_impl_.ip_address_ = from._impl_.ip_address_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_is_connected() != 0) {
        _this->_impl_.is_connected_ = from._impl_.is_connected_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_is_mqtt_connected() != 0) {
        _this->_impl_.is_mqtt_connected_ = from._impl_.is_mqtt_connected_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_is_syslog_connected() != 0) {
        _this->_impl_.is_syslog_connected_ = from._impl_.is_syslog_connected_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetworkConnectionStatus::CopyFrom(const NetworkConnectionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.NetworkConnectionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NetworkConnectionStatus::InternalSwap(NetworkConnectionStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NetworkConnectionStatus, _impl_.is_syslog_connected_)
      + sizeof(NetworkConnectionStatus::_impl_.is_syslog_connected_)
      - PROTOBUF_FIELD_OFFSET(NetworkConnectionStatus, _impl_.ip_address_)>(
          reinterpret_cast<char*>(&_impl_.ip_address_),
          reinterpret_cast<char*>(&other->_impl_.ip_address_));
}

::google::protobuf::Metadata NetworkConnectionStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BluetoothConnectionStatus::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BluetoothConnectionStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BluetoothConnectionStatus, _impl_._has_bits_);
};

BluetoothConnectionStatus::BluetoothConnectionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BluetoothConnectionStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.BluetoothConnectionStatus)
}
BluetoothConnectionStatus::BluetoothConnectionStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BluetoothConnectionStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BluetoothConnectionStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE BluetoothConnectionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void BluetoothConnectionStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pin_),
           0,
           offsetof(Impl_, is_connected_) -
               offsetof(Impl_, pin_) +
               sizeof(Impl_::is_connected_));
}
BluetoothConnectionStatus::~BluetoothConnectionStatus() {
  // @@protoc_insertion_point(destructor:meshtastic.BluetoothConnectionStatus)
  SharedDtor(*this);
}
inline void BluetoothConnectionStatus::SharedDtor(MessageLite& self) {
  BluetoothConnectionStatus& this_ = static_cast<BluetoothConnectionStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BluetoothConnectionStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BluetoothConnectionStatus(arena);
}
constexpr auto BluetoothConnectionStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BluetoothConnectionStatus),
                                            alignof(BluetoothConnectionStatus));
}
constexpr auto BluetoothConnectionStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BluetoothConnectionStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BluetoothConnectionStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BluetoothConnectionStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BluetoothConnectionStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BluetoothConnectionStatus>(), &BluetoothConnectionStatus::ByteSizeLong,
              &BluetoothConnectionStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BluetoothConnectionStatus, _impl_._cached_size_),
          false,
      },
      &BluetoothConnectionStatus::kDescriptorMethods,
      &descriptor_table_meshtastic_2fconnection_5fstatus_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BluetoothConnectionStatus_class_data_ =
        BluetoothConnectionStatus::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BluetoothConnectionStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BluetoothConnectionStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BluetoothConnectionStatus_class_data_.tc_table);
  return BluetoothConnectionStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
BluetoothConnectionStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BluetoothConnectionStatus, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    BluetoothConnectionStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::BluetoothConnectionStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 pin = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BluetoothConnectionStatus, _impl_.pin_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(BluetoothConnectionStatus, _impl_.pin_)}},
    // int32 rssi = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BluetoothConnectionStatus, _impl_.rssi_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(BluetoothConnectionStatus, _impl_.rssi_)}},
    // bool is_connected = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BluetoothConnectionStatus, _impl_.is_connected_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(BluetoothConnectionStatus, _impl_.is_connected_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 pin = 1;
    {PROTOBUF_FIELD_OFFSET(BluetoothConnectionStatus, _impl_.pin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // int32 rssi = 2;
    {PROTOBUF_FIELD_OFFSET(BluetoothConnectionStatus, _impl_.rssi_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // bool is_connected = 3;
    {PROTOBUF_FIELD_OFFSET(BluetoothConnectionStatus, _impl_.is_connected_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void BluetoothConnectionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.BluetoothConnectionStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.pin_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_connected_) -
        reinterpret_cast<char*>(&_impl_.pin_)) + sizeof(_impl_.is_connected_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BluetoothConnectionStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BluetoothConnectionStatus& this_ = static_cast<const BluetoothConnectionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BluetoothConnectionStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BluetoothConnectionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.BluetoothConnectionStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 pin = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_pin() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_pin(), target);
    }
  }

  // int32 rssi = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_rssi() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_rssi(), target);
    }
  }

  // bool is_connected = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_is_connected() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_is_connected(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.BluetoothConnectionStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BluetoothConnectionStatus::ByteSizeLong(const MessageLite& base) {
  const BluetoothConnectionStatus& this_ = static_cast<const BluetoothConnectionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BluetoothConnectionStatus::ByteSizeLong() const {
  const BluetoothConnectionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.BluetoothConnectionStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // uint32 pin = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_pin() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_pin());
      }
    }
    // int32 rssi = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_rssi() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_rssi());
      }
    }
    // bool is_connected = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_is_connected() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BluetoothConnectionStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BluetoothConnectionStatus*>(&to_msg);
  auto& from = static_cast<const BluetoothConnectionStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.BluetoothConnectionStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_pin() != 0) {
        _this->_impl_.pin_ = from._impl_.pin_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_rssi() != 0) {
        _this->_impl_.rssi_ = from._impl_.rssi_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_is_connected() != 0) {
        _this->_impl_.is_connected_ = from._impl_.is_connected_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BluetoothConnectionStatus::CopyFrom(const BluetoothConnectionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.BluetoothConnectionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BluetoothConnectionStatus::InternalSwap(BluetoothConnectionStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BluetoothConnectionStatus, _impl_.is_connected_)
      + sizeof(BluetoothConnectionStatus::_impl_.is_connected_)
      - PROTOBUF_FIELD_OFFSET(BluetoothConnectionStatus, _impl_.pin_)>(
          reinterpret_cast<char*>(&_impl_.pin_),
          reinterpret_cast<char*>(&other->_impl_.pin_));
}

::google::protobuf::Metadata BluetoothConnectionStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SerialConnectionStatus::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SerialConnectionStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SerialConnectionStatus, _impl_._has_bits_);
};

SerialConnectionStatus::SerialConnectionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SerialConnectionStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.SerialConnectionStatus)
}
SerialConnectionStatus::SerialConnectionStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SerialConnectionStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SerialConnectionStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE SerialConnectionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SerialConnectionStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, baud_),
           0,
           offsetof(Impl_, is_connected_) -
               offsetof(Impl_, baud_) +
               sizeof(Impl_::is_connected_));
}
SerialConnectionStatus::~SerialConnectionStatus() {
  // @@protoc_insertion_point(destructor:meshtastic.SerialConnectionStatus)
  SharedDtor(*this);
}
inline void SerialConnectionStatus::SharedDtor(MessageLite& self) {
  SerialConnectionStatus& this_ = static_cast<SerialConnectionStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SerialConnectionStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SerialConnectionStatus(arena);
}
constexpr auto SerialConnectionStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SerialConnectionStatus),
                                            alignof(SerialConnectionStatus));
}
constexpr auto SerialConnectionStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SerialConnectionStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SerialConnectionStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SerialConnectionStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SerialConnectionStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SerialConnectionStatus>(), &SerialConnectionStatus::ByteSizeLong,
              &SerialConnectionStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SerialConnectionStatus, _impl_._cached_size_),
          false,
      },
      &SerialConnectionStatus::kDescriptorMethods,
      &descriptor_table_meshtastic_2fconnection_5fstatus_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SerialConnectionStatus_class_data_ =
        SerialConnectionStatus::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SerialConnectionStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SerialConnectionStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SerialConnectionStatus_class_data_.tc_table);
  return SerialConnectionStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
SerialConnectionStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SerialConnectionStatus, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SerialConnectionStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::SerialConnectionStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool is_connected = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SerialConnectionStatus, _impl_.is_connected_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SerialConnectionStatus, _impl_.is_connected_)}},
    // uint32 baud = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SerialConnectionStatus, _impl_.baud_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SerialConnectionStatus, _impl_.baud_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 baud = 1;
    {PROTOBUF_FIELD_OFFSET(SerialConnectionStatus, _impl_.baud_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bool is_connected = 2;
    {PROTOBUF_FIELD_OFFSET(SerialConnectionStatus, _impl_.is_connected_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SerialConnectionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.SerialConnectionStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.baud_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_connected_) -
        reinterpret_cast<char*>(&_impl_.baud_)) + sizeof(_impl_.is_connected_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SerialConnectionStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SerialConnectionStatus& this_ = static_cast<const SerialConnectionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SerialConnectionStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SerialConnectionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.SerialConnectionStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 baud = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_baud() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_baud(), target);
    }
  }

  // bool is_connected = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_is_connected() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_is_connected(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.SerialConnectionStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SerialConnectionStatus::ByteSizeLong(const MessageLite& base) {
  const SerialConnectionStatus& this_ = static_cast<const SerialConnectionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SerialConnectionStatus::ByteSizeLong() const {
  const SerialConnectionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.SerialConnectionStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // uint32 baud = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_baud() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_baud());
      }
    }
    // bool is_connected = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_is_connected() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SerialConnectionStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SerialConnectionStatus*>(&to_msg);
  auto& from = static_cast<const SerialConnectionStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.SerialConnectionStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_baud() != 0) {
        _this->_impl_.baud_ = from._impl_.baud_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_is_connected() != 0) {
        _this->_impl_.is_connected_ = from._impl_.is_connected_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SerialConnectionStatus::CopyFrom(const SerialConnectionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.SerialConnectionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SerialConnectionStatus::InternalSwap(SerialConnectionStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SerialConnectionStatus, _impl_.is_connected_)
      + sizeof(SerialConnectionStatus::_impl_.is_connected_)
      - PROTOBUF_FIELD_OFFSET(SerialConnectionStatus, _impl_.baud_)>(
          reinterpret_cast<char*>(&_impl_.baud_),
          reinterpret_cast<char*>(&other->_impl_.baud_));
}

::google::protobuf::Metadata SerialConnectionStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace meshtastic
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_meshtastic_2fconnection_5fstatus_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
