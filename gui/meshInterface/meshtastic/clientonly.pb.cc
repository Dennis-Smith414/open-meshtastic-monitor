// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: meshtastic/clientonly.proto
// Protobuf C++ Version: 6.32.0

#include "meshtastic/clientonly.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace meshtastic {

inline constexpr DeviceProfile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        long_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        short_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        channel_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ringtone_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        canned_messages_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        config_{nullptr},
        module_config_{nullptr},
        fixed_position_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceProfile::DeviceProfile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DeviceProfile_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeviceProfileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceProfileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceProfileDefaultTypeInternal() {}
  union {
    DeviceProfile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceProfileDefaultTypeInternal _DeviceProfile_default_instance_;
}  // namespace meshtastic
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_meshtastic_2fclientonly_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_meshtastic_2fclientonly_2eproto = nullptr;
const ::uint32_t
    TableStruct_meshtastic_2fclientonly_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceProfile, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceProfile, _impl_.long_name_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceProfile, _impl_.short_name_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceProfile, _impl_.channel_url_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceProfile, _impl_.config_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceProfile, _impl_.module_config_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceProfile, _impl_.fixed_position_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceProfile, _impl_.ringtone_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::DeviceProfile, _impl_.canned_messages_),
        0,
        1,
        2,
        5,
        6,
        7,
        3,
        4,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::meshtastic::DeviceProfile)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::meshtastic::_DeviceProfile_default_instance_._instance,
};
const char descriptor_table_protodef_meshtastic_2fclientonly_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\033meshtastic/clientonly.proto\022\nmeshtasti"
    "c\032\032meshtastic/localonly.proto\032\025meshtasti"
    "c/mesh.proto\"\251\003\n\rDeviceProfile\022\026\n\tlong_n"
    "ame\030\001 \001(\tH\000\210\001\001\022\027\n\nshort_name\030\002 \001(\tH\001\210\001\001\022"
    "\030\n\013channel_url\030\003 \001(\tH\002\210\001\001\022,\n\006config\030\004 \001("
    "\0132\027.meshtastic.LocalConfigH\003\210\001\001\0229\n\rmodul"
    "e_config\030\005 \001(\0132\035.meshtastic.LocalModuleC"
    "onfigH\004\210\001\001\0221\n\016fixed_position\030\006 \001(\0132\024.mes"
    "htastic.PositionH\005\210\001\001\022\025\n\010ringtone\030\007 \001(\tH"
    "\006\210\001\001\022\034\n\017canned_messages\030\010 \001(\tH\007\210\001\001B\014\n\n_l"
    "ong_nameB\r\n\013_short_nameB\016\n\014_channel_urlB"
    "\t\n\007_configB\020\n\016_module_configB\021\n\017_fixed_p"
    "ositionB\013\n\t_ringtoneB\022\n\020_canned_messages"
    "Be\n\023com.geeksville.meshB\020ClientOnlyProto"
    "sZ\"github.com/meshtastic/go/generated\252\002\024"
    "Meshtastic.Protobufs\272\002\000b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_meshtastic_2fclientonly_2eproto_deps[2] = {
        &::descriptor_table_meshtastic_2flocalonly_2eproto,
        &::descriptor_table_meshtastic_2fmesh_2eproto,
};
static ::absl::once_flag descriptor_table_meshtastic_2fclientonly_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_meshtastic_2fclientonly_2eproto = {
    false,
    false,
    631,
    descriptor_table_protodef_meshtastic_2fclientonly_2eproto,
    "meshtastic/clientonly.proto",
    &descriptor_table_meshtastic_2fclientonly_2eproto_once,
    descriptor_table_meshtastic_2fclientonly_2eproto_deps,
    2,
    1,
    schemas,
    file_default_instances,
    TableStruct_meshtastic_2fclientonly_2eproto::offsets,
    file_level_enum_descriptors_meshtastic_2fclientonly_2eproto,
    file_level_service_descriptors_meshtastic_2fclientonly_2eproto,
};
namespace meshtastic {
// ===================================================================

class DeviceProfile::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DeviceProfile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_._has_bits_);
};

void DeviceProfile::clear_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.config_ != nullptr) _impl_.config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020U;
}
void DeviceProfile::clear_module_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.module_config_ != nullptr) _impl_.module_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040U;
}
void DeviceProfile::clear_fixed_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.fixed_position_ != nullptr) _impl_.fixed_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080U;
}
DeviceProfile::DeviceProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeviceProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.DeviceProfile)
}
PROTOBUF_NDEBUG_INLINE DeviceProfile::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::meshtastic::DeviceProfile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        long_name_(arena, from.long_name_),
        short_name_(arena, from.short_name_),
        channel_url_(arena, from.channel_url_),
        ringtone_(arena, from.ringtone_),
        canned_messages_(arena, from.canned_messages_) {}

DeviceProfile::DeviceProfile(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DeviceProfile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeviceProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeviceProfile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.config_ = ((cached_has_bits & 0x00000020U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.config_)
                : nullptr;
  _impl_.module_config_ = ((cached_has_bits & 0x00000040U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.module_config_)
                : nullptr;
  _impl_.fixed_position_ = ((cached_has_bits & 0x00000080U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.fixed_position_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:meshtastic.DeviceProfile)
}
PROTOBUF_NDEBUG_INLINE DeviceProfile::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        long_name_(arena),
        short_name_(arena),
        channel_url_(arena),
        ringtone_(arena),
        canned_messages_(arena) {}

inline void DeviceProfile::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, config_),
           0,
           offsetof(Impl_, fixed_position_) -
               offsetof(Impl_, config_) +
               sizeof(Impl_::fixed_position_));
}
DeviceProfile::~DeviceProfile() {
  // @@protoc_insertion_point(destructor:meshtastic.DeviceProfile)
  SharedDtor(*this);
}
inline void DeviceProfile::SharedDtor(MessageLite& self) {
  DeviceProfile& this_ = static_cast<DeviceProfile&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.long_name_.Destroy();
  this_._impl_.short_name_.Destroy();
  this_._impl_.channel_url_.Destroy();
  this_._impl_.ringtone_.Destroy();
  this_._impl_.canned_messages_.Destroy();
  delete this_._impl_.config_;
  delete this_._impl_.module_config_;
  delete this_._impl_.fixed_position_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DeviceProfile::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DeviceProfile(arena);
}
constexpr auto DeviceProfile::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeviceProfile),
                                            alignof(DeviceProfile));
}
constexpr auto DeviceProfile::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DeviceProfile_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DeviceProfile::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DeviceProfile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DeviceProfile::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DeviceProfile>(), &DeviceProfile::ByteSizeLong,
              &DeviceProfile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_._cached_size_),
          false,
      },
      &DeviceProfile::kDescriptorMethods,
      &descriptor_table_meshtastic_2fclientonly_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DeviceProfile_class_data_ =
        DeviceProfile::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DeviceProfile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DeviceProfile_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DeviceProfile_class_data_.tc_table);
  return DeviceProfile_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 94, 2>
DeviceProfile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    DeviceProfile_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::DeviceProfile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string canned_messages = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 4, 0, PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_.canned_messages_)}},
    // optional string long_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_.long_name_)}},
    // optional string short_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_.short_name_)}},
    // optional string channel_url = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_.channel_url_)}},
    // optional .meshtastic.LocalConfig config = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 5, 0, PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_.config_)}},
    // optional .meshtastic.LocalModuleConfig module_config = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 6, 1, PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_.module_config_)}},
    // optional .meshtastic.Position fixed_position = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 7, 2, PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_.fixed_position_)}},
    // optional string ringtone = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 3, 0, PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_.ringtone_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string long_name = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_.long_name_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string short_name = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_.short_name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string channel_url = 3;
    {PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_.channel_url_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .meshtastic.LocalConfig config = 4;
    {PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_.config_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .meshtastic.LocalModuleConfig module_config = 5;
    {PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_.module_config_), _Internal::kHasBitsOffset + 6, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .meshtastic.Position fixed_position = 6;
    {PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_.fixed_position_), _Internal::kHasBitsOffset + 7, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string ringtone = 7;
    {PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_.ringtone_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string canned_messages = 8;
    {PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_.canned_messages_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::LocalConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::LocalModuleConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::Position>()},
  }},
  {{
    "\30\11\12\13\0\0\0\10\17\0\0\0\0\0\0\0"
    "meshtastic.DeviceProfile"
    "long_name"
    "short_name"
    "channel_url"
    "ringtone"
    "canned_messages"
  }},
};
PROTOBUF_NOINLINE void DeviceProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.DeviceProfile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.long_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.short_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.channel_url_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.ringtone_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _impl_.canned_messages_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(_impl_.config_ != nullptr);
      _impl_.config_->Clear();
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(_impl_.module_config_ != nullptr);
      _impl_.module_config_->Clear();
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      ABSL_DCHECK(_impl_.fixed_position_ != nullptr);
      _impl_.fixed_position_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DeviceProfile::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DeviceProfile& this_ = static_cast<const DeviceProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DeviceProfile::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DeviceProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.DeviceProfile)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string long_name = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    const ::std::string& _s = this_._internal_long_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.DeviceProfile.long_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string short_name = 2;
  if ((cached_has_bits & 0x00000002U) != 0) {
    const ::std::string& _s = this_._internal_short_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.DeviceProfile.short_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string channel_url = 3;
  if ((cached_has_bits & 0x00000004U) != 0) {
    const ::std::string& _s = this_._internal_channel_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.DeviceProfile.channel_url");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional .meshtastic.LocalConfig config = 4;
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.config_, this_._impl_.config_->GetCachedSize(), target,
        stream);
  }

  // optional .meshtastic.LocalModuleConfig module_config = 5;
  if ((cached_has_bits & 0x00000040U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.module_config_, this_._impl_.module_config_->GetCachedSize(), target,
        stream);
  }

  // optional .meshtastic.Position fixed_position = 6;
  if ((cached_has_bits & 0x00000080U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.fixed_position_, this_._impl_.fixed_position_->GetCachedSize(), target,
        stream);
  }

  // optional string ringtone = 7;
  if ((cached_has_bits & 0x00000008U) != 0) {
    const ::std::string& _s = this_._internal_ringtone();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.DeviceProfile.ringtone");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional string canned_messages = 8;
  if ((cached_has_bits & 0x00000010U) != 0) {
    const ::std::string& _s = this_._internal_canned_messages();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.DeviceProfile.canned_messages");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.DeviceProfile)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeviceProfile::ByteSizeLong(const MessageLite& base) {
  const DeviceProfile& this_ = static_cast<const DeviceProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeviceProfile::ByteSizeLong() const {
  const DeviceProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.DeviceProfile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // optional string long_name = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_long_name());
    }
    // optional string short_name = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_short_name());
    }
    // optional string channel_url = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_channel_url());
    }
    // optional string ringtone = 7;
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_ringtone());
    }
    // optional string canned_messages = 8;
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_canned_messages());
    }
    // optional .meshtastic.LocalConfig config = 4;
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.config_);
    }
    // optional .meshtastic.LocalModuleConfig module_config = 5;
    if ((cached_has_bits & 0x00000040U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.module_config_);
    }
    // optional .meshtastic.Position fixed_position = 6;
    if ((cached_has_bits & 0x00000080U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.fixed_position_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DeviceProfile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceProfile*>(&to_msg);
  auto& from = static_cast<const DeviceProfile&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.DeviceProfile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _this->_internal_set_long_name(from._internal_long_name());
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _this->_internal_set_short_name(from._internal_short_name());
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _this->_internal_set_channel_url(from._internal_channel_url());
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _this->_internal_set_ringtone(from._internal_ringtone());
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _this->_internal_set_canned_messages(from._internal_canned_messages());
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(from._impl_.config_ != nullptr);
      if (_this->_impl_.config_ == nullptr) {
        _this->_impl_.config_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.config_);
      } else {
        _this->_impl_.config_->MergeFrom(*from._impl_.config_);
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(from._impl_.module_config_ != nullptr);
      if (_this->_impl_.module_config_ == nullptr) {
        _this->_impl_.module_config_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.module_config_);
      } else {
        _this->_impl_.module_config_->MergeFrom(*from._impl_.module_config_);
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      ABSL_DCHECK(from._impl_.fixed_position_ != nullptr);
      if (_this->_impl_.fixed_position_ == nullptr) {
        _this->_impl_.fixed_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.fixed_position_);
      } else {
        _this->_impl_.fixed_position_->MergeFrom(*from._impl_.fixed_position_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceProfile::CopyFrom(const DeviceProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.DeviceProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceProfile::InternalSwap(DeviceProfile* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.long_name_, &other->_impl_.long_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.short_name_, &other->_impl_.short_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_url_, &other->_impl_.channel_url_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ringtone_, &other->_impl_.ringtone_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.canned_messages_, &other->_impl_.canned_messages_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_.fixed_position_)
      + sizeof(DeviceProfile::_impl_.fixed_position_)
      - PROTOBUF_FIELD_OFFSET(DeviceProfile, _impl_.config_)>(
          reinterpret_cast<char*>(&_impl_.config_),
          reinterpret_cast<char*>(&other->_impl_.config_));
}

::google::protobuf::Metadata DeviceProfile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace meshtastic
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_meshtastic_2fclientonly_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
