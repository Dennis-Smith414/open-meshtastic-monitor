// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: meshtastic/module_config.proto
// Protobuf C++ Version: 6.32.0

#ifndef meshtastic_2fmodule_5fconfig_2eproto_2epb_2eh
#define meshtastic_2fmodule_5fconfig_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_meshtastic_2fmodule_5fconfig_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_meshtastic_2fmodule_5fconfig_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_meshtastic_2fmodule_5fconfig_2eproto;
}  // extern "C"
namespace meshtastic {
enum ModuleConfig_AudioConfig_Audio_Baud : int;
extern const uint32_t ModuleConfig_AudioConfig_Audio_Baud_internal_data_[];
enum ModuleConfig_CannedMessageConfig_InputEventChar : int;
extern const uint32_t ModuleConfig_CannedMessageConfig_InputEventChar_internal_data_[];
enum ModuleConfig_DetectionSensorConfig_TriggerType : int;
extern const uint32_t ModuleConfig_DetectionSensorConfig_TriggerType_internal_data_[];
enum ModuleConfig_SerialConfig_Serial_Baud : int;
extern const uint32_t ModuleConfig_SerialConfig_Serial_Baud_internal_data_[];
enum ModuleConfig_SerialConfig_Serial_Mode : int;
extern const uint32_t ModuleConfig_SerialConfig_Serial_Mode_internal_data_[];
enum RemoteHardwarePinType : int;
extern const uint32_t RemoteHardwarePinType_internal_data_[];
class ModuleConfig;
struct ModuleConfigDefaultTypeInternal;
extern ModuleConfigDefaultTypeInternal _ModuleConfig_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_class_data_;
class ModuleConfig_AmbientLightingConfig;
struct ModuleConfig_AmbientLightingConfigDefaultTypeInternal;
extern ModuleConfig_AmbientLightingConfigDefaultTypeInternal _ModuleConfig_AmbientLightingConfig_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_AmbientLightingConfig_class_data_;
class ModuleConfig_AudioConfig;
struct ModuleConfig_AudioConfigDefaultTypeInternal;
extern ModuleConfig_AudioConfigDefaultTypeInternal _ModuleConfig_AudioConfig_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_AudioConfig_class_data_;
class ModuleConfig_CannedMessageConfig;
struct ModuleConfig_CannedMessageConfigDefaultTypeInternal;
extern ModuleConfig_CannedMessageConfigDefaultTypeInternal _ModuleConfig_CannedMessageConfig_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_CannedMessageConfig_class_data_;
class ModuleConfig_DetectionSensorConfig;
struct ModuleConfig_DetectionSensorConfigDefaultTypeInternal;
extern ModuleConfig_DetectionSensorConfigDefaultTypeInternal _ModuleConfig_DetectionSensorConfig_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_DetectionSensorConfig_class_data_;
class ModuleConfig_ExternalNotificationConfig;
struct ModuleConfig_ExternalNotificationConfigDefaultTypeInternal;
extern ModuleConfig_ExternalNotificationConfigDefaultTypeInternal _ModuleConfig_ExternalNotificationConfig_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_ExternalNotificationConfig_class_data_;
class ModuleConfig_MQTTConfig;
struct ModuleConfig_MQTTConfigDefaultTypeInternal;
extern ModuleConfig_MQTTConfigDefaultTypeInternal _ModuleConfig_MQTTConfig_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_MQTTConfig_class_data_;
class ModuleConfig_MapReportSettings;
struct ModuleConfig_MapReportSettingsDefaultTypeInternal;
extern ModuleConfig_MapReportSettingsDefaultTypeInternal _ModuleConfig_MapReportSettings_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_MapReportSettings_class_data_;
class ModuleConfig_NeighborInfoConfig;
struct ModuleConfig_NeighborInfoConfigDefaultTypeInternal;
extern ModuleConfig_NeighborInfoConfigDefaultTypeInternal _ModuleConfig_NeighborInfoConfig_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_NeighborInfoConfig_class_data_;
class ModuleConfig_PaxcounterConfig;
struct ModuleConfig_PaxcounterConfigDefaultTypeInternal;
extern ModuleConfig_PaxcounterConfigDefaultTypeInternal _ModuleConfig_PaxcounterConfig_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_PaxcounterConfig_class_data_;
class ModuleConfig_RangeTestConfig;
struct ModuleConfig_RangeTestConfigDefaultTypeInternal;
extern ModuleConfig_RangeTestConfigDefaultTypeInternal _ModuleConfig_RangeTestConfig_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_RangeTestConfig_class_data_;
class ModuleConfig_RemoteHardwareConfig;
struct ModuleConfig_RemoteHardwareConfigDefaultTypeInternal;
extern ModuleConfig_RemoteHardwareConfigDefaultTypeInternal _ModuleConfig_RemoteHardwareConfig_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_RemoteHardwareConfig_class_data_;
class ModuleConfig_SerialConfig;
struct ModuleConfig_SerialConfigDefaultTypeInternal;
extern ModuleConfig_SerialConfigDefaultTypeInternal _ModuleConfig_SerialConfig_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_SerialConfig_class_data_;
class ModuleConfig_StoreForwardConfig;
struct ModuleConfig_StoreForwardConfigDefaultTypeInternal;
extern ModuleConfig_StoreForwardConfigDefaultTypeInternal _ModuleConfig_StoreForwardConfig_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_StoreForwardConfig_class_data_;
class ModuleConfig_TelemetryConfig;
struct ModuleConfig_TelemetryConfigDefaultTypeInternal;
extern ModuleConfig_TelemetryConfigDefaultTypeInternal _ModuleConfig_TelemetryConfig_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_TelemetryConfig_class_data_;
class RemoteHardwarePin;
struct RemoteHardwarePinDefaultTypeInternal;
extern RemoteHardwarePinDefaultTypeInternal _RemoteHardwarePin_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RemoteHardwarePin_class_data_;
}  // namespace meshtastic
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::meshtastic::ModuleConfig_AudioConfig_Audio_Baud_internal_data_>
    internal::EnumTraitsImpl::value<::meshtastic::ModuleConfig_AudioConfig_Audio_Baud>;
template <>
internal::EnumTraitsT<::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar_internal_data_>
    internal::EnumTraitsImpl::value<::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar>;
template <>
internal::EnumTraitsT<::meshtastic::ModuleConfig_DetectionSensorConfig_TriggerType_internal_data_>
    internal::EnumTraitsImpl::value<::meshtastic::ModuleConfig_DetectionSensorConfig_TriggerType>;
template <>
internal::EnumTraitsT<::meshtastic::ModuleConfig_SerialConfig_Serial_Baud_internal_data_>
    internal::EnumTraitsImpl::value<::meshtastic::ModuleConfig_SerialConfig_Serial_Baud>;
template <>
internal::EnumTraitsT<::meshtastic::ModuleConfig_SerialConfig_Serial_Mode_internal_data_>
    internal::EnumTraitsImpl::value<::meshtastic::ModuleConfig_SerialConfig_Serial_Mode>;
template <>
internal::EnumTraitsT<::meshtastic::RemoteHardwarePinType_internal_data_>
    internal::EnumTraitsImpl::value<::meshtastic::RemoteHardwarePinType>;
}  // namespace protobuf
}  // namespace google

namespace meshtastic {
enum ModuleConfig_DetectionSensorConfig_TriggerType : int {
  ModuleConfig_DetectionSensorConfig_TriggerType_LOGIC_LOW = 0,
  ModuleConfig_DetectionSensorConfig_TriggerType_LOGIC_HIGH = 1,
  ModuleConfig_DetectionSensorConfig_TriggerType_FALLING_EDGE = 2,
  ModuleConfig_DetectionSensorConfig_TriggerType_RISING_EDGE = 3,
  ModuleConfig_DetectionSensorConfig_TriggerType_EITHER_EDGE_ACTIVE_LOW = 4,
  ModuleConfig_DetectionSensorConfig_TriggerType_EITHER_EDGE_ACTIVE_HIGH = 5,
  ModuleConfig_DetectionSensorConfig_TriggerType_ModuleConfig_DetectionSensorConfig_TriggerType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  ModuleConfig_DetectionSensorConfig_TriggerType_ModuleConfig_DetectionSensorConfig_TriggerType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t ModuleConfig_DetectionSensorConfig_TriggerType_internal_data_[];
inline constexpr ModuleConfig_DetectionSensorConfig_TriggerType ModuleConfig_DetectionSensorConfig_TriggerType_TriggerType_MIN =
    static_cast<ModuleConfig_DetectionSensorConfig_TriggerType>(0);
inline constexpr ModuleConfig_DetectionSensorConfig_TriggerType ModuleConfig_DetectionSensorConfig_TriggerType_TriggerType_MAX =
    static_cast<ModuleConfig_DetectionSensorConfig_TriggerType>(5);
inline bool ModuleConfig_DetectionSensorConfig_TriggerType_IsValid(int value) {
  return 0 <= value && value <= 5;
}
inline constexpr int ModuleConfig_DetectionSensorConfig_TriggerType_TriggerType_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ModuleConfig_DetectionSensorConfig_TriggerType_descriptor();
template <typename T>
const ::std::string& ModuleConfig_DetectionSensorConfig_TriggerType_Name(T value) {
  static_assert(::std::is_same<T, ModuleConfig_DetectionSensorConfig_TriggerType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to TriggerType_Name().");
  return ModuleConfig_DetectionSensorConfig_TriggerType_Name(static_cast<ModuleConfig_DetectionSensorConfig_TriggerType>(value));
}
template <>
inline const ::std::string& ModuleConfig_DetectionSensorConfig_TriggerType_Name(ModuleConfig_DetectionSensorConfig_TriggerType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ModuleConfig_DetectionSensorConfig_TriggerType_descriptor, 0, 5>(
      static_cast<int>(value));
}
inline bool ModuleConfig_DetectionSensorConfig_TriggerType_Parse(
    ::absl::string_view name, ModuleConfig_DetectionSensorConfig_TriggerType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<ModuleConfig_DetectionSensorConfig_TriggerType>(ModuleConfig_DetectionSensorConfig_TriggerType_descriptor(), name,
                                           value);
}
enum ModuleConfig_AudioConfig_Audio_Baud : int {
  ModuleConfig_AudioConfig_Audio_Baud_CODEC2_DEFAULT = 0,
  ModuleConfig_AudioConfig_Audio_Baud_CODEC2_3200 = 1,
  ModuleConfig_AudioConfig_Audio_Baud_CODEC2_2400 = 2,
  ModuleConfig_AudioConfig_Audio_Baud_CODEC2_1600 = 3,
  ModuleConfig_AudioConfig_Audio_Baud_CODEC2_1400 = 4,
  ModuleConfig_AudioConfig_Audio_Baud_CODEC2_1300 = 5,
  ModuleConfig_AudioConfig_Audio_Baud_CODEC2_1200 = 6,
  ModuleConfig_AudioConfig_Audio_Baud_CODEC2_700 = 7,
  ModuleConfig_AudioConfig_Audio_Baud_CODEC2_700B = 8,
  ModuleConfig_AudioConfig_Audio_Baud_ModuleConfig_AudioConfig_Audio_Baud_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  ModuleConfig_AudioConfig_Audio_Baud_ModuleConfig_AudioConfig_Audio_Baud_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t ModuleConfig_AudioConfig_Audio_Baud_internal_data_[];
inline constexpr ModuleConfig_AudioConfig_Audio_Baud ModuleConfig_AudioConfig_Audio_Baud_Audio_Baud_MIN =
    static_cast<ModuleConfig_AudioConfig_Audio_Baud>(0);
inline constexpr ModuleConfig_AudioConfig_Audio_Baud ModuleConfig_AudioConfig_Audio_Baud_Audio_Baud_MAX =
    static_cast<ModuleConfig_AudioConfig_Audio_Baud>(8);
inline bool ModuleConfig_AudioConfig_Audio_Baud_IsValid(int value) {
  return 0 <= value && value <= 8;
}
inline constexpr int ModuleConfig_AudioConfig_Audio_Baud_Audio_Baud_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ModuleConfig_AudioConfig_Audio_Baud_descriptor();
template <typename T>
const ::std::string& ModuleConfig_AudioConfig_Audio_Baud_Name(T value) {
  static_assert(::std::is_same<T, ModuleConfig_AudioConfig_Audio_Baud>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to Audio_Baud_Name().");
  return ModuleConfig_AudioConfig_Audio_Baud_Name(static_cast<ModuleConfig_AudioConfig_Audio_Baud>(value));
}
template <>
inline const ::std::string& ModuleConfig_AudioConfig_Audio_Baud_Name(ModuleConfig_AudioConfig_Audio_Baud value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ModuleConfig_AudioConfig_Audio_Baud_descriptor, 0, 8>(
      static_cast<int>(value));
}
inline bool ModuleConfig_AudioConfig_Audio_Baud_Parse(
    ::absl::string_view name, ModuleConfig_AudioConfig_Audio_Baud* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<ModuleConfig_AudioConfig_Audio_Baud>(ModuleConfig_AudioConfig_Audio_Baud_descriptor(), name,
                                           value);
}
enum ModuleConfig_SerialConfig_Serial_Baud : int {
  ModuleConfig_SerialConfig_Serial_Baud_BAUD_DEFAULT = 0,
  ModuleConfig_SerialConfig_Serial_Baud_BAUD_110 = 1,
  ModuleConfig_SerialConfig_Serial_Baud_BAUD_300 = 2,
  ModuleConfig_SerialConfig_Serial_Baud_BAUD_600 = 3,
  ModuleConfig_SerialConfig_Serial_Baud_BAUD_1200 = 4,
  ModuleConfig_SerialConfig_Serial_Baud_BAUD_2400 = 5,
  ModuleConfig_SerialConfig_Serial_Baud_BAUD_4800 = 6,
  ModuleConfig_SerialConfig_Serial_Baud_BAUD_9600 = 7,
  ModuleConfig_SerialConfig_Serial_Baud_BAUD_19200 = 8,
  ModuleConfig_SerialConfig_Serial_Baud_BAUD_38400 = 9,
  ModuleConfig_SerialConfig_Serial_Baud_BAUD_57600 = 10,
  ModuleConfig_SerialConfig_Serial_Baud_BAUD_115200 = 11,
  ModuleConfig_SerialConfig_Serial_Baud_BAUD_230400 = 12,
  ModuleConfig_SerialConfig_Serial_Baud_BAUD_460800 = 13,
  ModuleConfig_SerialConfig_Serial_Baud_BAUD_576000 = 14,
  ModuleConfig_SerialConfig_Serial_Baud_BAUD_921600 = 15,
  ModuleConfig_SerialConfig_Serial_Baud_ModuleConfig_SerialConfig_Serial_Baud_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  ModuleConfig_SerialConfig_Serial_Baud_ModuleConfig_SerialConfig_Serial_Baud_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t ModuleConfig_SerialConfig_Serial_Baud_internal_data_[];
inline constexpr ModuleConfig_SerialConfig_Serial_Baud ModuleConfig_SerialConfig_Serial_Baud_Serial_Baud_MIN =
    static_cast<ModuleConfig_SerialConfig_Serial_Baud>(0);
inline constexpr ModuleConfig_SerialConfig_Serial_Baud ModuleConfig_SerialConfig_Serial_Baud_Serial_Baud_MAX =
    static_cast<ModuleConfig_SerialConfig_Serial_Baud>(15);
inline bool ModuleConfig_SerialConfig_Serial_Baud_IsValid(int value) {
  return 0 <= value && value <= 15;
}
inline constexpr int ModuleConfig_SerialConfig_Serial_Baud_Serial_Baud_ARRAYSIZE = 15 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ModuleConfig_SerialConfig_Serial_Baud_descriptor();
template <typename T>
const ::std::string& ModuleConfig_SerialConfig_Serial_Baud_Name(T value) {
  static_assert(::std::is_same<T, ModuleConfig_SerialConfig_Serial_Baud>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to Serial_Baud_Name().");
  return ModuleConfig_SerialConfig_Serial_Baud_Name(static_cast<ModuleConfig_SerialConfig_Serial_Baud>(value));
}
template <>
inline const ::std::string& ModuleConfig_SerialConfig_Serial_Baud_Name(ModuleConfig_SerialConfig_Serial_Baud value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ModuleConfig_SerialConfig_Serial_Baud_descriptor, 0, 15>(
      static_cast<int>(value));
}
inline bool ModuleConfig_SerialConfig_Serial_Baud_Parse(
    ::absl::string_view name, ModuleConfig_SerialConfig_Serial_Baud* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<ModuleConfig_SerialConfig_Serial_Baud>(ModuleConfig_SerialConfig_Serial_Baud_descriptor(), name,
                                           value);
}
enum ModuleConfig_SerialConfig_Serial_Mode : int {
  ModuleConfig_SerialConfig_Serial_Mode_DEFAULT = 0,
  ModuleConfig_SerialConfig_Serial_Mode_SIMPLE = 1,
  ModuleConfig_SerialConfig_Serial_Mode_PROTO = 2,
  ModuleConfig_SerialConfig_Serial_Mode_TEXTMSG = 3,
  ModuleConfig_SerialConfig_Serial_Mode_NMEA = 4,
  ModuleConfig_SerialConfig_Serial_Mode_CALTOPO = 5,
  ModuleConfig_SerialConfig_Serial_Mode_WS85 = 6,
  ModuleConfig_SerialConfig_Serial_Mode_VE_DIRECT = 7,
  ModuleConfig_SerialConfig_Serial_Mode_MS_CONFIG = 8,
  ModuleConfig_SerialConfig_Serial_Mode_ModuleConfig_SerialConfig_Serial_Mode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  ModuleConfig_SerialConfig_Serial_Mode_ModuleConfig_SerialConfig_Serial_Mode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t ModuleConfig_SerialConfig_Serial_Mode_internal_data_[];
inline constexpr ModuleConfig_SerialConfig_Serial_Mode ModuleConfig_SerialConfig_Serial_Mode_Serial_Mode_MIN =
    static_cast<ModuleConfig_SerialConfig_Serial_Mode>(0);
inline constexpr ModuleConfig_SerialConfig_Serial_Mode ModuleConfig_SerialConfig_Serial_Mode_Serial_Mode_MAX =
    static_cast<ModuleConfig_SerialConfig_Serial_Mode>(8);
inline bool ModuleConfig_SerialConfig_Serial_Mode_IsValid(int value) {
  return 0 <= value && value <= 8;
}
inline constexpr int ModuleConfig_SerialConfig_Serial_Mode_Serial_Mode_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ModuleConfig_SerialConfig_Serial_Mode_descriptor();
template <typename T>
const ::std::string& ModuleConfig_SerialConfig_Serial_Mode_Name(T value) {
  static_assert(::std::is_same<T, ModuleConfig_SerialConfig_Serial_Mode>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to Serial_Mode_Name().");
  return ModuleConfig_SerialConfig_Serial_Mode_Name(static_cast<ModuleConfig_SerialConfig_Serial_Mode>(value));
}
template <>
inline const ::std::string& ModuleConfig_SerialConfig_Serial_Mode_Name(ModuleConfig_SerialConfig_Serial_Mode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ModuleConfig_SerialConfig_Serial_Mode_descriptor, 0, 8>(
      static_cast<int>(value));
}
inline bool ModuleConfig_SerialConfig_Serial_Mode_Parse(
    ::absl::string_view name, ModuleConfig_SerialConfig_Serial_Mode* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<ModuleConfig_SerialConfig_Serial_Mode>(ModuleConfig_SerialConfig_Serial_Mode_descriptor(), name,
                                           value);
}
enum ModuleConfig_CannedMessageConfig_InputEventChar : int {
  ModuleConfig_CannedMessageConfig_InputEventChar_NONE = 0,
  ModuleConfig_CannedMessageConfig_InputEventChar_UP = 17,
  ModuleConfig_CannedMessageConfig_InputEventChar_DOWN = 18,
  ModuleConfig_CannedMessageConfig_InputEventChar_LEFT = 19,
  ModuleConfig_CannedMessageConfig_InputEventChar_RIGHT = 20,
  ModuleConfig_CannedMessageConfig_InputEventChar_SELECT = 10,
  ModuleConfig_CannedMessageConfig_InputEventChar_BACK = 27,
  ModuleConfig_CannedMessageConfig_InputEventChar_CANCEL = 24,
  ModuleConfig_CannedMessageConfig_InputEventChar_ModuleConfig_CannedMessageConfig_InputEventChar_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  ModuleConfig_CannedMessageConfig_InputEventChar_ModuleConfig_CannedMessageConfig_InputEventChar_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t ModuleConfig_CannedMessageConfig_InputEventChar_internal_data_[];
inline constexpr ModuleConfig_CannedMessageConfig_InputEventChar ModuleConfig_CannedMessageConfig_InputEventChar_InputEventChar_MIN =
    static_cast<ModuleConfig_CannedMessageConfig_InputEventChar>(0);
inline constexpr ModuleConfig_CannedMessageConfig_InputEventChar ModuleConfig_CannedMessageConfig_InputEventChar_InputEventChar_MAX =
    static_cast<ModuleConfig_CannedMessageConfig_InputEventChar>(27);
inline bool ModuleConfig_CannedMessageConfig_InputEventChar_IsValid(int value) {
  return 0 <= value && value <= 27 && ((152962049u >> value) & 1) != 0;
}
inline constexpr int ModuleConfig_CannedMessageConfig_InputEventChar_InputEventChar_ARRAYSIZE = 27 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ModuleConfig_CannedMessageConfig_InputEventChar_descriptor();
template <typename T>
const ::std::string& ModuleConfig_CannedMessageConfig_InputEventChar_Name(T value) {
  static_assert(::std::is_same<T, ModuleConfig_CannedMessageConfig_InputEventChar>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to InputEventChar_Name().");
  return ::google::protobuf::internal::NameOfEnum(ModuleConfig_CannedMessageConfig_InputEventChar_descriptor(), value);
}
inline bool ModuleConfig_CannedMessageConfig_InputEventChar_Parse(
    ::absl::string_view name, ModuleConfig_CannedMessageConfig_InputEventChar* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<ModuleConfig_CannedMessageConfig_InputEventChar>(ModuleConfig_CannedMessageConfig_InputEventChar_descriptor(), name,
                                           value);
}
enum RemoteHardwarePinType : int {
  UNKNOWN = 0,
  DIGITAL_READ = 1,
  DIGITAL_WRITE = 2,
  RemoteHardwarePinType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  RemoteHardwarePinType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t RemoteHardwarePinType_internal_data_[];
inline constexpr RemoteHardwarePinType RemoteHardwarePinType_MIN =
    static_cast<RemoteHardwarePinType>(0);
inline constexpr RemoteHardwarePinType RemoteHardwarePinType_MAX =
    static_cast<RemoteHardwarePinType>(2);
inline bool RemoteHardwarePinType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
inline constexpr int RemoteHardwarePinType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL RemoteHardwarePinType_descriptor();
template <typename T>
const ::std::string& RemoteHardwarePinType_Name(T value) {
  static_assert(::std::is_same<T, RemoteHardwarePinType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to RemoteHardwarePinType_Name().");
  return RemoteHardwarePinType_Name(static_cast<RemoteHardwarePinType>(value));
}
template <>
inline const ::std::string& RemoteHardwarePinType_Name(RemoteHardwarePinType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<RemoteHardwarePinType_descriptor, 0, 2>(
      static_cast<int>(value));
}
inline bool RemoteHardwarePinType_Parse(
    ::absl::string_view name, RemoteHardwarePinType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<RemoteHardwarePinType>(RemoteHardwarePinType_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class RemoteHardwarePin final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.RemoteHardwarePin) */ {
 public:
  inline RemoteHardwarePin() : RemoteHardwarePin(nullptr) {}
  ~RemoteHardwarePin() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RemoteHardwarePin* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RemoteHardwarePin));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RemoteHardwarePin(::google::protobuf::internal::ConstantInitialized);

  inline RemoteHardwarePin(const RemoteHardwarePin& from) : RemoteHardwarePin(nullptr, from) {}
  inline RemoteHardwarePin(RemoteHardwarePin&& from) noexcept
      : RemoteHardwarePin(nullptr, ::std::move(from)) {}
  inline RemoteHardwarePin& operator=(const RemoteHardwarePin& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoteHardwarePin& operator=(RemoteHardwarePin&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoteHardwarePin& default_instance() {
    return *reinterpret_cast<const RemoteHardwarePin*>(
        &_RemoteHardwarePin_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(RemoteHardwarePin& a, RemoteHardwarePin& b) { a.Swap(&b); }
  inline void Swap(RemoteHardwarePin* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoteHardwarePin* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoteHardwarePin* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RemoteHardwarePin>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoteHardwarePin& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RemoteHardwarePin& from) { RemoteHardwarePin::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RemoteHardwarePin* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.RemoteHardwarePin"; }

 protected:
  explicit RemoteHardwarePin(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RemoteHardwarePin(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RemoteHardwarePin& from);
  RemoteHardwarePin(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RemoteHardwarePin&& from) noexcept
      : RemoteHardwarePin(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kGpioPinFieldNumber = 1,
    kTypeFieldNumber = 3,
  };
  // string name = 2;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // uint32 gpio_pin = 1;
  void clear_gpio_pin() ;
  ::uint32_t gpio_pin() const;
  void set_gpio_pin(::uint32_t value);

  private:
  ::uint32_t _internal_gpio_pin() const;
  void _internal_set_gpio_pin(::uint32_t value);

  public:
  // .meshtastic.RemoteHardwarePinType type = 3;
  void clear_type() ;
  ::meshtastic::RemoteHardwarePinType type() const;
  void set_type(::meshtastic::RemoteHardwarePinType value);

  private:
  ::meshtastic::RemoteHardwarePinType _internal_type() const;
  void _internal_set_type(::meshtastic::RemoteHardwarePinType value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.RemoteHardwarePin)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 41,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RemoteHardwarePin& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::uint32_t gpio_pin_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fmodule_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RemoteHardwarePin_class_data_;
// -------------------------------------------------------------------

class ModuleConfig_TelemetryConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.ModuleConfig.TelemetryConfig) */ {
 public:
  inline ModuleConfig_TelemetryConfig() : ModuleConfig_TelemetryConfig(nullptr) {}
  ~ModuleConfig_TelemetryConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModuleConfig_TelemetryConfig* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModuleConfig_TelemetryConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModuleConfig_TelemetryConfig(::google::protobuf::internal::ConstantInitialized);

  inline ModuleConfig_TelemetryConfig(const ModuleConfig_TelemetryConfig& from) : ModuleConfig_TelemetryConfig(nullptr, from) {}
  inline ModuleConfig_TelemetryConfig(ModuleConfig_TelemetryConfig&& from) noexcept
      : ModuleConfig_TelemetryConfig(nullptr, ::std::move(from)) {}
  inline ModuleConfig_TelemetryConfig& operator=(const ModuleConfig_TelemetryConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleConfig_TelemetryConfig& operator=(ModuleConfig_TelemetryConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleConfig_TelemetryConfig& default_instance() {
    return *reinterpret_cast<const ModuleConfig_TelemetryConfig*>(
        &_ModuleConfig_TelemetryConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(ModuleConfig_TelemetryConfig& a, ModuleConfig_TelemetryConfig& b) { a.Swap(&b); }
  inline void Swap(ModuleConfig_TelemetryConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleConfig_TelemetryConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleConfig_TelemetryConfig* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModuleConfig_TelemetryConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModuleConfig_TelemetryConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModuleConfig_TelemetryConfig& from) { ModuleConfig_TelemetryConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModuleConfig_TelemetryConfig* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.ModuleConfig.TelemetryConfig"; }

 protected:
  explicit ModuleConfig_TelemetryConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ModuleConfig_TelemetryConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_TelemetryConfig& from);
  ModuleConfig_TelemetryConfig(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ModuleConfig_TelemetryConfig&& from) noexcept
      : ModuleConfig_TelemetryConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceUpdateIntervalFieldNumber = 1,
    kEnvironmentUpdateIntervalFieldNumber = 2,
    kEnvironmentMeasurementEnabledFieldNumber = 3,
    kEnvironmentScreenEnabledFieldNumber = 4,
    kEnvironmentDisplayFahrenheitFieldNumber = 5,
    kAirQualityEnabledFieldNumber = 6,
    kAirQualityIntervalFieldNumber = 7,
    kPowerUpdateIntervalFieldNumber = 9,
    kPowerMeasurementEnabledFieldNumber = 8,
    kPowerScreenEnabledFieldNumber = 10,
    kHealthMeasurementEnabledFieldNumber = 11,
    kHealthScreenEnabledFieldNumber = 13,
    kHealthUpdateIntervalFieldNumber = 12,
  };
  // uint32 device_update_interval = 1;
  void clear_device_update_interval() ;
  ::uint32_t device_update_interval() const;
  void set_device_update_interval(::uint32_t value);

  private:
  ::uint32_t _internal_device_update_interval() const;
  void _internal_set_device_update_interval(::uint32_t value);

  public:
  // uint32 environment_update_interval = 2;
  void clear_environment_update_interval() ;
  ::uint32_t environment_update_interval() const;
  void set_environment_update_interval(::uint32_t value);

  private:
  ::uint32_t _internal_environment_update_interval() const;
  void _internal_set_environment_update_interval(::uint32_t value);

  public:
  // bool environment_measurement_enabled = 3;
  void clear_environment_measurement_enabled() ;
  bool environment_measurement_enabled() const;
  void set_environment_measurement_enabled(bool value);

  private:
  bool _internal_environment_measurement_enabled() const;
  void _internal_set_environment_measurement_enabled(bool value);

  public:
  // bool environment_screen_enabled = 4;
  void clear_environment_screen_enabled() ;
  bool environment_screen_enabled() const;
  void set_environment_screen_enabled(bool value);

  private:
  bool _internal_environment_screen_enabled() const;
  void _internal_set_environment_screen_enabled(bool value);

  public:
  // bool environment_display_fahrenheit = 5;
  void clear_environment_display_fahrenheit() ;
  bool environment_display_fahrenheit() const;
  void set_environment_display_fahrenheit(bool value);

  private:
  bool _internal_environment_display_fahrenheit() const;
  void _internal_set_environment_display_fahrenheit(bool value);

  public:
  // bool air_quality_enabled = 6;
  void clear_air_quality_enabled() ;
  bool air_quality_enabled() const;
  void set_air_quality_enabled(bool value);

  private:
  bool _internal_air_quality_enabled() const;
  void _internal_set_air_quality_enabled(bool value);

  public:
  // uint32 air_quality_interval = 7;
  void clear_air_quality_interval() ;
  ::uint32_t air_quality_interval() const;
  void set_air_quality_interval(::uint32_t value);

  private:
  ::uint32_t _internal_air_quality_interval() const;
  void _internal_set_air_quality_interval(::uint32_t value);

  public:
  // uint32 power_update_interval = 9;
  void clear_power_update_interval() ;
  ::uint32_t power_update_interval() const;
  void set_power_update_interval(::uint32_t value);

  private:
  ::uint32_t _internal_power_update_interval() const;
  void _internal_set_power_update_interval(::uint32_t value);

  public:
  // bool power_measurement_enabled = 8;
  void clear_power_measurement_enabled() ;
  bool power_measurement_enabled() const;
  void set_power_measurement_enabled(bool value);

  private:
  bool _internal_power_measurement_enabled() const;
  void _internal_set_power_measurement_enabled(bool value);

  public:
  // bool power_screen_enabled = 10;
  void clear_power_screen_enabled() ;
  bool power_screen_enabled() const;
  void set_power_screen_enabled(bool value);

  private:
  bool _internal_power_screen_enabled() const;
  void _internal_set_power_screen_enabled(bool value);

  public:
  // bool health_measurement_enabled = 11;
  void clear_health_measurement_enabled() ;
  bool health_measurement_enabled() const;
  void set_health_measurement_enabled(bool value);

  private:
  bool _internal_health_measurement_enabled() const;
  void _internal_set_health_measurement_enabled(bool value);

  public:
  // bool health_screen_enabled = 13;
  void clear_health_screen_enabled() ;
  bool health_screen_enabled() const;
  void set_health_screen_enabled(bool value);

  private:
  bool _internal_health_screen_enabled() const;
  void _internal_set_health_screen_enabled(bool value);

  public:
  // uint32 health_update_interval = 12;
  void clear_health_update_interval() ;
  ::uint32_t health_update_interval() const;
  void set_health_update_interval(::uint32_t value);

  private:
  ::uint32_t _internal_health_update_interval() const;
  void _internal_set_health_update_interval(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.ModuleConfig.TelemetryConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 13,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ModuleConfig_TelemetryConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t device_update_interval_;
    ::uint32_t environment_update_interval_;
    bool environment_measurement_enabled_;
    bool environment_screen_enabled_;
    bool environment_display_fahrenheit_;
    bool air_quality_enabled_;
    ::uint32_t air_quality_interval_;
    ::uint32_t power_update_interval_;
    bool power_measurement_enabled_;
    bool power_screen_enabled_;
    bool health_measurement_enabled_;
    bool health_screen_enabled_;
    ::uint32_t health_update_interval_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fmodule_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_TelemetryConfig_class_data_;
// -------------------------------------------------------------------

class ModuleConfig_StoreForwardConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.ModuleConfig.StoreForwardConfig) */ {
 public:
  inline ModuleConfig_StoreForwardConfig() : ModuleConfig_StoreForwardConfig(nullptr) {}
  ~ModuleConfig_StoreForwardConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModuleConfig_StoreForwardConfig* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModuleConfig_StoreForwardConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModuleConfig_StoreForwardConfig(::google::protobuf::internal::ConstantInitialized);

  inline ModuleConfig_StoreForwardConfig(const ModuleConfig_StoreForwardConfig& from) : ModuleConfig_StoreForwardConfig(nullptr, from) {}
  inline ModuleConfig_StoreForwardConfig(ModuleConfig_StoreForwardConfig&& from) noexcept
      : ModuleConfig_StoreForwardConfig(nullptr, ::std::move(from)) {}
  inline ModuleConfig_StoreForwardConfig& operator=(const ModuleConfig_StoreForwardConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleConfig_StoreForwardConfig& operator=(ModuleConfig_StoreForwardConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleConfig_StoreForwardConfig& default_instance() {
    return *reinterpret_cast<const ModuleConfig_StoreForwardConfig*>(
        &_ModuleConfig_StoreForwardConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(ModuleConfig_StoreForwardConfig& a, ModuleConfig_StoreForwardConfig& b) { a.Swap(&b); }
  inline void Swap(ModuleConfig_StoreForwardConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleConfig_StoreForwardConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleConfig_StoreForwardConfig* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModuleConfig_StoreForwardConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModuleConfig_StoreForwardConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModuleConfig_StoreForwardConfig& from) { ModuleConfig_StoreForwardConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModuleConfig_StoreForwardConfig* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.ModuleConfig.StoreForwardConfig"; }

 protected:
  explicit ModuleConfig_StoreForwardConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ModuleConfig_StoreForwardConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_StoreForwardConfig& from);
  ModuleConfig_StoreForwardConfig(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ModuleConfig_StoreForwardConfig&& from) noexcept
      : ModuleConfig_StoreForwardConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRecordsFieldNumber = 3,
    kEnabledFieldNumber = 1,
    kHeartbeatFieldNumber = 2,
    kIsServerFieldNumber = 6,
    kHistoryReturnMaxFieldNumber = 4,
    kHistoryReturnWindowFieldNumber = 5,
  };
  // uint32 records = 3;
  void clear_records() ;
  ::uint32_t records() const;
  void set_records(::uint32_t value);

  private:
  ::uint32_t _internal_records() const;
  void _internal_set_records(::uint32_t value);

  public:
  // bool enabled = 1;
  void clear_enabled() ;
  bool enabled() const;
  void set_enabled(bool value);

  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);

  public:
  // bool heartbeat = 2;
  void clear_heartbeat() ;
  bool heartbeat() const;
  void set_heartbeat(bool value);

  private:
  bool _internal_heartbeat() const;
  void _internal_set_heartbeat(bool value);

  public:
  // bool is_server = 6;
  void clear_is_server() ;
  bool is_server() const;
  void set_is_server(bool value);

  private:
  bool _internal_is_server() const;
  void _internal_set_is_server(bool value);

  public:
  // uint32 history_return_max = 4;
  void clear_history_return_max() ;
  ::uint32_t history_return_max() const;
  void set_history_return_max(::uint32_t value);

  private:
  ::uint32_t _internal_history_return_max() const;
  void _internal_set_history_return_max(::uint32_t value);

  public:
  // uint32 history_return_window = 5;
  void clear_history_return_window() ;
  ::uint32_t history_return_window() const;
  void set_history_return_window(::uint32_t value);

  private:
  ::uint32_t _internal_history_return_window() const;
  void _internal_set_history_return_window(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.ModuleConfig.StoreForwardConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ModuleConfig_StoreForwardConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t records_;
    bool enabled_;
    bool heartbeat_;
    bool is_server_;
    ::uint32_t history_return_max_;
    ::uint32_t history_return_window_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fmodule_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_StoreForwardConfig_class_data_;
// -------------------------------------------------------------------

class ModuleConfig_SerialConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.ModuleConfig.SerialConfig) */ {
 public:
  inline ModuleConfig_SerialConfig() : ModuleConfig_SerialConfig(nullptr) {}
  ~ModuleConfig_SerialConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModuleConfig_SerialConfig* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModuleConfig_SerialConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModuleConfig_SerialConfig(::google::protobuf::internal::ConstantInitialized);

  inline ModuleConfig_SerialConfig(const ModuleConfig_SerialConfig& from) : ModuleConfig_SerialConfig(nullptr, from) {}
  inline ModuleConfig_SerialConfig(ModuleConfig_SerialConfig&& from) noexcept
      : ModuleConfig_SerialConfig(nullptr, ::std::move(from)) {}
  inline ModuleConfig_SerialConfig& operator=(const ModuleConfig_SerialConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleConfig_SerialConfig& operator=(ModuleConfig_SerialConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleConfig_SerialConfig& default_instance() {
    return *reinterpret_cast<const ModuleConfig_SerialConfig*>(
        &_ModuleConfig_SerialConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(ModuleConfig_SerialConfig& a, ModuleConfig_SerialConfig& b) { a.Swap(&b); }
  inline void Swap(ModuleConfig_SerialConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleConfig_SerialConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleConfig_SerialConfig* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModuleConfig_SerialConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModuleConfig_SerialConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModuleConfig_SerialConfig& from) { ModuleConfig_SerialConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModuleConfig_SerialConfig* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.ModuleConfig.SerialConfig"; }

 protected:
  explicit ModuleConfig_SerialConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ModuleConfig_SerialConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_SerialConfig& from);
  ModuleConfig_SerialConfig(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ModuleConfig_SerialConfig&& from) noexcept
      : ModuleConfig_SerialConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Serial_Baud = ModuleConfig_SerialConfig_Serial_Baud;
  static constexpr Serial_Baud BAUD_DEFAULT = ModuleConfig_SerialConfig_Serial_Baud_BAUD_DEFAULT;
  static constexpr Serial_Baud BAUD_110 = ModuleConfig_SerialConfig_Serial_Baud_BAUD_110;
  static constexpr Serial_Baud BAUD_300 = ModuleConfig_SerialConfig_Serial_Baud_BAUD_300;
  static constexpr Serial_Baud BAUD_600 = ModuleConfig_SerialConfig_Serial_Baud_BAUD_600;
  static constexpr Serial_Baud BAUD_1200 = ModuleConfig_SerialConfig_Serial_Baud_BAUD_1200;
  static constexpr Serial_Baud BAUD_2400 = ModuleConfig_SerialConfig_Serial_Baud_BAUD_2400;
  static constexpr Serial_Baud BAUD_4800 = ModuleConfig_SerialConfig_Serial_Baud_BAUD_4800;
  static constexpr Serial_Baud BAUD_9600 = ModuleConfig_SerialConfig_Serial_Baud_BAUD_9600;
  static constexpr Serial_Baud BAUD_19200 = ModuleConfig_SerialConfig_Serial_Baud_BAUD_19200;
  static constexpr Serial_Baud BAUD_38400 = ModuleConfig_SerialConfig_Serial_Baud_BAUD_38400;
  static constexpr Serial_Baud BAUD_57600 = ModuleConfig_SerialConfig_Serial_Baud_BAUD_57600;
  static constexpr Serial_Baud BAUD_115200 = ModuleConfig_SerialConfig_Serial_Baud_BAUD_115200;
  static constexpr Serial_Baud BAUD_230400 = ModuleConfig_SerialConfig_Serial_Baud_BAUD_230400;
  static constexpr Serial_Baud BAUD_460800 = ModuleConfig_SerialConfig_Serial_Baud_BAUD_460800;
  static constexpr Serial_Baud BAUD_576000 = ModuleConfig_SerialConfig_Serial_Baud_BAUD_576000;
  static constexpr Serial_Baud BAUD_921600 = ModuleConfig_SerialConfig_Serial_Baud_BAUD_921600;
  static inline bool Serial_Baud_IsValid(int value) {
    return ModuleConfig_SerialConfig_Serial_Baud_IsValid(value);
  }
  static constexpr Serial_Baud Serial_Baud_MIN = ModuleConfig_SerialConfig_Serial_Baud_Serial_Baud_MIN;
  static constexpr Serial_Baud Serial_Baud_MAX = ModuleConfig_SerialConfig_Serial_Baud_Serial_Baud_MAX;
  static constexpr int Serial_Baud_ARRAYSIZE = ModuleConfig_SerialConfig_Serial_Baud_Serial_Baud_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Serial_Baud_descriptor() {
    return ModuleConfig_SerialConfig_Serial_Baud_descriptor();
  }
  template <typename T>
  static inline const ::std::string& Serial_Baud_Name(T value) {
    return ModuleConfig_SerialConfig_Serial_Baud_Name(value);
  }
  static inline bool Serial_Baud_Parse(
      ::absl::string_view name, Serial_Baud* PROTOBUF_NONNULL value) {
    return ModuleConfig_SerialConfig_Serial_Baud_Parse(name, value);
  }
  using Serial_Mode = ModuleConfig_SerialConfig_Serial_Mode;
  static constexpr Serial_Mode DEFAULT = ModuleConfig_SerialConfig_Serial_Mode_DEFAULT;
  static constexpr Serial_Mode SIMPLE = ModuleConfig_SerialConfig_Serial_Mode_SIMPLE;
  static constexpr Serial_Mode PROTO = ModuleConfig_SerialConfig_Serial_Mode_PROTO;
  static constexpr Serial_Mode TEXTMSG = ModuleConfig_SerialConfig_Serial_Mode_TEXTMSG;
  static constexpr Serial_Mode NMEA = ModuleConfig_SerialConfig_Serial_Mode_NMEA;
  static constexpr Serial_Mode CALTOPO = ModuleConfig_SerialConfig_Serial_Mode_CALTOPO;
  static constexpr Serial_Mode WS85 = ModuleConfig_SerialConfig_Serial_Mode_WS85;
  static constexpr Serial_Mode VE_DIRECT = ModuleConfig_SerialConfig_Serial_Mode_VE_DIRECT;
  static constexpr Serial_Mode MS_CONFIG = ModuleConfig_SerialConfig_Serial_Mode_MS_CONFIG;
  static inline bool Serial_Mode_IsValid(int value) {
    return ModuleConfig_SerialConfig_Serial_Mode_IsValid(value);
  }
  static constexpr Serial_Mode Serial_Mode_MIN = ModuleConfig_SerialConfig_Serial_Mode_Serial_Mode_MIN;
  static constexpr Serial_Mode Serial_Mode_MAX = ModuleConfig_SerialConfig_Serial_Mode_Serial_Mode_MAX;
  static constexpr int Serial_Mode_ARRAYSIZE = ModuleConfig_SerialConfig_Serial_Mode_Serial_Mode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Serial_Mode_descriptor() {
    return ModuleConfig_SerialConfig_Serial_Mode_descriptor();
  }
  template <typename T>
  static inline const ::std::string& Serial_Mode_Name(T value) {
    return ModuleConfig_SerialConfig_Serial_Mode_Name(value);
  }
  static inline bool Serial_Mode_Parse(
      ::absl::string_view name, Serial_Mode* PROTOBUF_NONNULL value) {
    return ModuleConfig_SerialConfig_Serial_Mode_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kRxdFieldNumber = 3,
    kEnabledFieldNumber = 1,
    kEchoFieldNumber = 2,
    kOverrideConsoleSerialPortFieldNumber = 8,
    kTxdFieldNumber = 4,
    kBaudFieldNumber = 5,
    kTimeoutFieldNumber = 6,
    kModeFieldNumber = 7,
  };
  // uint32 rxd = 3;
  void clear_rxd() ;
  ::uint32_t rxd() const;
  void set_rxd(::uint32_t value);

  private:
  ::uint32_t _internal_rxd() const;
  void _internal_set_rxd(::uint32_t value);

  public:
  // bool enabled = 1;
  void clear_enabled() ;
  bool enabled() const;
  void set_enabled(bool value);

  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);

  public:
  // bool echo = 2;
  void clear_echo() ;
  bool echo() const;
  void set_echo(bool value);

  private:
  bool _internal_echo() const;
  void _internal_set_echo(bool value);

  public:
  // bool override_console_serial_port = 8;
  void clear_override_console_serial_port() ;
  bool override_console_serial_port() const;
  void set_override_console_serial_port(bool value);

  private:
  bool _internal_override_console_serial_port() const;
  void _internal_set_override_console_serial_port(bool value);

  public:
  // uint32 txd = 4;
  void clear_txd() ;
  ::uint32_t txd() const;
  void set_txd(::uint32_t value);

  private:
  ::uint32_t _internal_txd() const;
  void _internal_set_txd(::uint32_t value);

  public:
  // .meshtastic.ModuleConfig.SerialConfig.Serial_Baud baud = 5;
  void clear_baud() ;
  ::meshtastic::ModuleConfig_SerialConfig_Serial_Baud baud() const;
  void set_baud(::meshtastic::ModuleConfig_SerialConfig_Serial_Baud value);

  private:
  ::meshtastic::ModuleConfig_SerialConfig_Serial_Baud _internal_baud() const;
  void _internal_set_baud(::meshtastic::ModuleConfig_SerialConfig_Serial_Baud value);

  public:
  // uint32 timeout = 6;
  void clear_timeout() ;
  ::uint32_t timeout() const;
  void set_timeout(::uint32_t value);

  private:
  ::uint32_t _internal_timeout() const;
  void _internal_set_timeout(::uint32_t value);

  public:
  // .meshtastic.ModuleConfig.SerialConfig.Serial_Mode mode = 7;
  void clear_mode() ;
  ::meshtastic::ModuleConfig_SerialConfig_Serial_Mode mode() const;
  void set_mode(::meshtastic::ModuleConfig_SerialConfig_Serial_Mode value);

  private:
  ::meshtastic::ModuleConfig_SerialConfig_Serial_Mode _internal_mode() const;
  void _internal_set_mode(::meshtastic::ModuleConfig_SerialConfig_Serial_Mode value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.ModuleConfig.SerialConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ModuleConfig_SerialConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t rxd_;
    bool enabled_;
    bool echo_;
    bool override_console_serial_port_;
    ::uint32_t txd_;
    int baud_;
    ::uint32_t timeout_;
    int mode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fmodule_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_SerialConfig_class_data_;
// -------------------------------------------------------------------

class ModuleConfig_RangeTestConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.ModuleConfig.RangeTestConfig) */ {
 public:
  inline ModuleConfig_RangeTestConfig() : ModuleConfig_RangeTestConfig(nullptr) {}
  ~ModuleConfig_RangeTestConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModuleConfig_RangeTestConfig* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModuleConfig_RangeTestConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModuleConfig_RangeTestConfig(::google::protobuf::internal::ConstantInitialized);

  inline ModuleConfig_RangeTestConfig(const ModuleConfig_RangeTestConfig& from) : ModuleConfig_RangeTestConfig(nullptr, from) {}
  inline ModuleConfig_RangeTestConfig(ModuleConfig_RangeTestConfig&& from) noexcept
      : ModuleConfig_RangeTestConfig(nullptr, ::std::move(from)) {}
  inline ModuleConfig_RangeTestConfig& operator=(const ModuleConfig_RangeTestConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleConfig_RangeTestConfig& operator=(ModuleConfig_RangeTestConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleConfig_RangeTestConfig& default_instance() {
    return *reinterpret_cast<const ModuleConfig_RangeTestConfig*>(
        &_ModuleConfig_RangeTestConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(ModuleConfig_RangeTestConfig& a, ModuleConfig_RangeTestConfig& b) { a.Swap(&b); }
  inline void Swap(ModuleConfig_RangeTestConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleConfig_RangeTestConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleConfig_RangeTestConfig* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModuleConfig_RangeTestConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModuleConfig_RangeTestConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModuleConfig_RangeTestConfig& from) { ModuleConfig_RangeTestConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModuleConfig_RangeTestConfig* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.ModuleConfig.RangeTestConfig"; }

 protected:
  explicit ModuleConfig_RangeTestConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ModuleConfig_RangeTestConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_RangeTestConfig& from);
  ModuleConfig_RangeTestConfig(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ModuleConfig_RangeTestConfig&& from) noexcept
      : ModuleConfig_RangeTestConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderFieldNumber = 2,
    kEnabledFieldNumber = 1,
    kSaveFieldNumber = 3,
    kClearOnRebootFieldNumber = 4,
  };
  // uint32 sender = 2;
  void clear_sender() ;
  ::uint32_t sender() const;
  void set_sender(::uint32_t value);

  private:
  ::uint32_t _internal_sender() const;
  void _internal_set_sender(::uint32_t value);

  public:
  // bool enabled = 1;
  void clear_enabled() ;
  bool enabled() const;
  void set_enabled(bool value);

  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);

  public:
  // bool save = 3;
  void clear_save() ;
  bool save() const;
  void set_save(bool value);

  private:
  bool _internal_save() const;
  void _internal_set_save(bool value);

  public:
  // bool clear_on_reboot = 4;
  void clear_clear_on_reboot() ;
  bool clear_on_reboot() const;
  void set_clear_on_reboot(bool value);

  private:
  bool _internal_clear_on_reboot() const;
  void _internal_set_clear_on_reboot(bool value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.ModuleConfig.RangeTestConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ModuleConfig_RangeTestConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t sender_;
    bool enabled_;
    bool save_;
    bool clear_on_reboot_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fmodule_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_RangeTestConfig_class_data_;
// -------------------------------------------------------------------

class ModuleConfig_PaxcounterConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.ModuleConfig.PaxcounterConfig) */ {
 public:
  inline ModuleConfig_PaxcounterConfig() : ModuleConfig_PaxcounterConfig(nullptr) {}
  ~ModuleConfig_PaxcounterConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModuleConfig_PaxcounterConfig* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModuleConfig_PaxcounterConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModuleConfig_PaxcounterConfig(::google::protobuf::internal::ConstantInitialized);

  inline ModuleConfig_PaxcounterConfig(const ModuleConfig_PaxcounterConfig& from) : ModuleConfig_PaxcounterConfig(nullptr, from) {}
  inline ModuleConfig_PaxcounterConfig(ModuleConfig_PaxcounterConfig&& from) noexcept
      : ModuleConfig_PaxcounterConfig(nullptr, ::std::move(from)) {}
  inline ModuleConfig_PaxcounterConfig& operator=(const ModuleConfig_PaxcounterConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleConfig_PaxcounterConfig& operator=(ModuleConfig_PaxcounterConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleConfig_PaxcounterConfig& default_instance() {
    return *reinterpret_cast<const ModuleConfig_PaxcounterConfig*>(
        &_ModuleConfig_PaxcounterConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ModuleConfig_PaxcounterConfig& a, ModuleConfig_PaxcounterConfig& b) { a.Swap(&b); }
  inline void Swap(ModuleConfig_PaxcounterConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleConfig_PaxcounterConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleConfig_PaxcounterConfig* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModuleConfig_PaxcounterConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModuleConfig_PaxcounterConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModuleConfig_PaxcounterConfig& from) { ModuleConfig_PaxcounterConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModuleConfig_PaxcounterConfig* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.ModuleConfig.PaxcounterConfig"; }

 protected:
  explicit ModuleConfig_PaxcounterConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ModuleConfig_PaxcounterConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_PaxcounterConfig& from);
  ModuleConfig_PaxcounterConfig(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ModuleConfig_PaxcounterConfig&& from) noexcept
      : ModuleConfig_PaxcounterConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEnabledFieldNumber = 1,
    kPaxcounterUpdateIntervalFieldNumber = 2,
    kWifiThresholdFieldNumber = 3,
    kBleThresholdFieldNumber = 4,
  };
  // bool enabled = 1;
  void clear_enabled() ;
  bool enabled() const;
  void set_enabled(bool value);

  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);

  public:
  // uint32 paxcounter_update_interval = 2;
  void clear_paxcounter_update_interval() ;
  ::uint32_t paxcounter_update_interval() const;
  void set_paxcounter_update_interval(::uint32_t value);

  private:
  ::uint32_t _internal_paxcounter_update_interval() const;
  void _internal_set_paxcounter_update_interval(::uint32_t value);

  public:
  // int32 wifi_threshold = 3;
  void clear_wifi_threshold() ;
  ::int32_t wifi_threshold() const;
  void set_wifi_threshold(::int32_t value);

  private:
  ::int32_t _internal_wifi_threshold() const;
  void _internal_set_wifi_threshold(::int32_t value);

  public:
  // int32 ble_threshold = 4;
  void clear_ble_threshold() ;
  ::int32_t ble_threshold() const;
  void set_ble_threshold(::int32_t value);

  private:
  ::int32_t _internal_ble_threshold() const;
  void _internal_set_ble_threshold(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.ModuleConfig.PaxcounterConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ModuleConfig_PaxcounterConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    bool enabled_;
    ::uint32_t paxcounter_update_interval_;
    ::int32_t wifi_threshold_;
    ::int32_t ble_threshold_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fmodule_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_PaxcounterConfig_class_data_;
// -------------------------------------------------------------------

class ModuleConfig_NeighborInfoConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.ModuleConfig.NeighborInfoConfig) */ {
 public:
  inline ModuleConfig_NeighborInfoConfig() : ModuleConfig_NeighborInfoConfig(nullptr) {}
  ~ModuleConfig_NeighborInfoConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModuleConfig_NeighborInfoConfig* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModuleConfig_NeighborInfoConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModuleConfig_NeighborInfoConfig(::google::protobuf::internal::ConstantInitialized);

  inline ModuleConfig_NeighborInfoConfig(const ModuleConfig_NeighborInfoConfig& from) : ModuleConfig_NeighborInfoConfig(nullptr, from) {}
  inline ModuleConfig_NeighborInfoConfig(ModuleConfig_NeighborInfoConfig&& from) noexcept
      : ModuleConfig_NeighborInfoConfig(nullptr, ::std::move(from)) {}
  inline ModuleConfig_NeighborInfoConfig& operator=(const ModuleConfig_NeighborInfoConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleConfig_NeighborInfoConfig& operator=(ModuleConfig_NeighborInfoConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleConfig_NeighborInfoConfig& default_instance() {
    return *reinterpret_cast<const ModuleConfig_NeighborInfoConfig*>(
        &_ModuleConfig_NeighborInfoConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ModuleConfig_NeighborInfoConfig& a, ModuleConfig_NeighborInfoConfig& b) { a.Swap(&b); }
  inline void Swap(ModuleConfig_NeighborInfoConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleConfig_NeighborInfoConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleConfig_NeighborInfoConfig* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModuleConfig_NeighborInfoConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModuleConfig_NeighborInfoConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModuleConfig_NeighborInfoConfig& from) { ModuleConfig_NeighborInfoConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModuleConfig_NeighborInfoConfig* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.ModuleConfig.NeighborInfoConfig"; }

 protected:
  explicit ModuleConfig_NeighborInfoConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ModuleConfig_NeighborInfoConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_NeighborInfoConfig& from);
  ModuleConfig_NeighborInfoConfig(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ModuleConfig_NeighborInfoConfig&& from) noexcept
      : ModuleConfig_NeighborInfoConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpdateIntervalFieldNumber = 2,
    kEnabledFieldNumber = 1,
    kTransmitOverLoraFieldNumber = 3,
  };
  // uint32 update_interval = 2;
  void clear_update_interval() ;
  ::uint32_t update_interval() const;
  void set_update_interval(::uint32_t value);

  private:
  ::uint32_t _internal_update_interval() const;
  void _internal_set_update_interval(::uint32_t value);

  public:
  // bool enabled = 1;
  void clear_enabled() ;
  bool enabled() const;
  void set_enabled(bool value);

  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);

  public:
  // bool transmit_over_lora = 3;
  void clear_transmit_over_lora() ;
  bool transmit_over_lora() const;
  void set_transmit_over_lora(bool value);

  private:
  bool _internal_transmit_over_lora() const;
  void _internal_set_transmit_over_lora(bool value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.ModuleConfig.NeighborInfoConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ModuleConfig_NeighborInfoConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t update_interval_;
    bool enabled_;
    bool transmit_over_lora_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fmodule_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_NeighborInfoConfig_class_data_;
// -------------------------------------------------------------------

class ModuleConfig_MapReportSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.ModuleConfig.MapReportSettings) */ {
 public:
  inline ModuleConfig_MapReportSettings() : ModuleConfig_MapReportSettings(nullptr) {}
  ~ModuleConfig_MapReportSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModuleConfig_MapReportSettings* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModuleConfig_MapReportSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModuleConfig_MapReportSettings(::google::protobuf::internal::ConstantInitialized);

  inline ModuleConfig_MapReportSettings(const ModuleConfig_MapReportSettings& from) : ModuleConfig_MapReportSettings(nullptr, from) {}
  inline ModuleConfig_MapReportSettings(ModuleConfig_MapReportSettings&& from) noexcept
      : ModuleConfig_MapReportSettings(nullptr, ::std::move(from)) {}
  inline ModuleConfig_MapReportSettings& operator=(const ModuleConfig_MapReportSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleConfig_MapReportSettings& operator=(ModuleConfig_MapReportSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleConfig_MapReportSettings& default_instance() {
    return *reinterpret_cast<const ModuleConfig_MapReportSettings*>(
        &_ModuleConfig_MapReportSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ModuleConfig_MapReportSettings& a, ModuleConfig_MapReportSettings& b) { a.Swap(&b); }
  inline void Swap(ModuleConfig_MapReportSettings* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleConfig_MapReportSettings* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleConfig_MapReportSettings* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModuleConfig_MapReportSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModuleConfig_MapReportSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModuleConfig_MapReportSettings& from) { ModuleConfig_MapReportSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModuleConfig_MapReportSettings* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.ModuleConfig.MapReportSettings"; }

 protected:
  explicit ModuleConfig_MapReportSettings(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ModuleConfig_MapReportSettings(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_MapReportSettings& from);
  ModuleConfig_MapReportSettings(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ModuleConfig_MapReportSettings&& from) noexcept
      : ModuleConfig_MapReportSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPublishIntervalSecsFieldNumber = 1,
    kPositionPrecisionFieldNumber = 2,
    kShouldReportLocationFieldNumber = 3,
  };
  // uint32 publish_interval_secs = 1;
  void clear_publish_interval_secs() ;
  ::uint32_t publish_interval_secs() const;
  void set_publish_interval_secs(::uint32_t value);

  private:
  ::uint32_t _internal_publish_interval_secs() const;
  void _internal_set_publish_interval_secs(::uint32_t value);

  public:
  // uint32 position_precision = 2;
  void clear_position_precision() ;
  ::uint32_t position_precision() const;
  void set_position_precision(::uint32_t value);

  private:
  ::uint32_t _internal_position_precision() const;
  void _internal_set_position_precision(::uint32_t value);

  public:
  // bool should_report_location = 3;
  void clear_should_report_location() ;
  bool should_report_location() const;
  void set_should_report_location(bool value);

  private:
  bool _internal_should_report_location() const;
  void _internal_set_should_report_location(bool value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.ModuleConfig.MapReportSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ModuleConfig_MapReportSettings& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t publish_interval_secs_;
    ::uint32_t position_precision_;
    bool should_report_location_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fmodule_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_MapReportSettings_class_data_;
// -------------------------------------------------------------------

class ModuleConfig_ExternalNotificationConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.ModuleConfig.ExternalNotificationConfig) */ {
 public:
  inline ModuleConfig_ExternalNotificationConfig() : ModuleConfig_ExternalNotificationConfig(nullptr) {}
  ~ModuleConfig_ExternalNotificationConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModuleConfig_ExternalNotificationConfig* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModuleConfig_ExternalNotificationConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModuleConfig_ExternalNotificationConfig(::google::protobuf::internal::ConstantInitialized);

  inline ModuleConfig_ExternalNotificationConfig(const ModuleConfig_ExternalNotificationConfig& from) : ModuleConfig_ExternalNotificationConfig(nullptr, from) {}
  inline ModuleConfig_ExternalNotificationConfig(ModuleConfig_ExternalNotificationConfig&& from) noexcept
      : ModuleConfig_ExternalNotificationConfig(nullptr, ::std::move(from)) {}
  inline ModuleConfig_ExternalNotificationConfig& operator=(const ModuleConfig_ExternalNotificationConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleConfig_ExternalNotificationConfig& operator=(ModuleConfig_ExternalNotificationConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleConfig_ExternalNotificationConfig& default_instance() {
    return *reinterpret_cast<const ModuleConfig_ExternalNotificationConfig*>(
        &_ModuleConfig_ExternalNotificationConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ModuleConfig_ExternalNotificationConfig& a, ModuleConfig_ExternalNotificationConfig& b) { a.Swap(&b); }
  inline void Swap(ModuleConfig_ExternalNotificationConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleConfig_ExternalNotificationConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleConfig_ExternalNotificationConfig* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModuleConfig_ExternalNotificationConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModuleConfig_ExternalNotificationConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModuleConfig_ExternalNotificationConfig& from) { ModuleConfig_ExternalNotificationConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModuleConfig_ExternalNotificationConfig* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.ModuleConfig.ExternalNotificationConfig"; }

 protected:
  explicit ModuleConfig_ExternalNotificationConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ModuleConfig_ExternalNotificationConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_ExternalNotificationConfig& from);
  ModuleConfig_ExternalNotificationConfig(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ModuleConfig_ExternalNotificationConfig&& from) noexcept
      : ModuleConfig_ExternalNotificationConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutputMsFieldNumber = 2,
    kOutputFieldNumber = 3,
    kEnabledFieldNumber = 1,
    kActiveFieldNumber = 4,
    kAlertMessageFieldNumber = 5,
    kAlertBellFieldNumber = 6,
    kOutputVibraFieldNumber = 8,
    kOutputBuzzerFieldNumber = 9,
    kUsePwmFieldNumber = 7,
    kAlertMessageVibraFieldNumber = 10,
    kAlertMessageBuzzerFieldNumber = 11,
    kAlertBellVibraFieldNumber = 12,
    kNagTimeoutFieldNumber = 14,
    kAlertBellBuzzerFieldNumber = 13,
    kUseI2SAsBuzzerFieldNumber = 15,
  };
  // uint32 output_ms = 2;
  void clear_output_ms() ;
  ::uint32_t output_ms() const;
  void set_output_ms(::uint32_t value);

  private:
  ::uint32_t _internal_output_ms() const;
  void _internal_set_output_ms(::uint32_t value);

  public:
  // uint32 output = 3;
  void clear_output() ;
  ::uint32_t output() const;
  void set_output(::uint32_t value);

  private:
  ::uint32_t _internal_output() const;
  void _internal_set_output(::uint32_t value);

  public:
  // bool enabled = 1;
  void clear_enabled() ;
  bool enabled() const;
  void set_enabled(bool value);

  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);

  public:
  // bool active = 4;
  void clear_active() ;
  bool active() const;
  void set_active(bool value);

  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);

  public:
  // bool alert_message = 5;
  void clear_alert_message() ;
  bool alert_message() const;
  void set_alert_message(bool value);

  private:
  bool _internal_alert_message() const;
  void _internal_set_alert_message(bool value);

  public:
  // bool alert_bell = 6;
  void clear_alert_bell() ;
  bool alert_bell() const;
  void set_alert_bell(bool value);

  private:
  bool _internal_alert_bell() const;
  void _internal_set_alert_bell(bool value);

  public:
  // uint32 output_vibra = 8;
  void clear_output_vibra() ;
  ::uint32_t output_vibra() const;
  void set_output_vibra(::uint32_t value);

  private:
  ::uint32_t _internal_output_vibra() const;
  void _internal_set_output_vibra(::uint32_t value);

  public:
  // uint32 output_buzzer = 9;
  void clear_output_buzzer() ;
  ::uint32_t output_buzzer() const;
  void set_output_buzzer(::uint32_t value);

  private:
  ::uint32_t _internal_output_buzzer() const;
  void _internal_set_output_buzzer(::uint32_t value);

  public:
  // bool use_pwm = 7;
  void clear_use_pwm() ;
  bool use_pwm() const;
  void set_use_pwm(bool value);

  private:
  bool _internal_use_pwm() const;
  void _internal_set_use_pwm(bool value);

  public:
  // bool alert_message_vibra = 10;
  void clear_alert_message_vibra() ;
  bool alert_message_vibra() const;
  void set_alert_message_vibra(bool value);

  private:
  bool _internal_alert_message_vibra() const;
  void _internal_set_alert_message_vibra(bool value);

  public:
  // bool alert_message_buzzer = 11;
  void clear_alert_message_buzzer() ;
  bool alert_message_buzzer() const;
  void set_alert_message_buzzer(bool value);

  private:
  bool _internal_alert_message_buzzer() const;
  void _internal_set_alert_message_buzzer(bool value);

  public:
  // bool alert_bell_vibra = 12;
  void clear_alert_bell_vibra() ;
  bool alert_bell_vibra() const;
  void set_alert_bell_vibra(bool value);

  private:
  bool _internal_alert_bell_vibra() const;
  void _internal_set_alert_bell_vibra(bool value);

  public:
  // uint32 nag_timeout = 14;
  void clear_nag_timeout() ;
  ::uint32_t nag_timeout() const;
  void set_nag_timeout(::uint32_t value);

  private:
  ::uint32_t _internal_nag_timeout() const;
  void _internal_set_nag_timeout(::uint32_t value);

  public:
  // bool alert_bell_buzzer = 13;
  void clear_alert_bell_buzzer() ;
  bool alert_bell_buzzer() const;
  void set_alert_bell_buzzer(bool value);

  private:
  bool _internal_alert_bell_buzzer() const;
  void _internal_set_alert_bell_buzzer(bool value);

  public:
  // bool use_i2s_as_buzzer = 15;
  void clear_use_i2s_as_buzzer() ;
  bool use_i2s_as_buzzer() const;
  void set_use_i2s_as_buzzer(bool value);

  private:
  bool _internal_use_i2s_as_buzzer() const;
  void _internal_set_use_i2s_as_buzzer(bool value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.ModuleConfig.ExternalNotificationConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 15,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ModuleConfig_ExternalNotificationConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t output_ms_;
    ::uint32_t output_;
    bool enabled_;
    bool active_;
    bool alert_message_;
    bool alert_bell_;
    ::uint32_t output_vibra_;
    ::uint32_t output_buzzer_;
    bool use_pwm_;
    bool alert_message_vibra_;
    bool alert_message_buzzer_;
    bool alert_bell_vibra_;
    ::uint32_t nag_timeout_;
    bool alert_bell_buzzer_;
    bool use_i2s_as_buzzer_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fmodule_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_ExternalNotificationConfig_class_data_;
// -------------------------------------------------------------------

class ModuleConfig_DetectionSensorConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.ModuleConfig.DetectionSensorConfig) */ {
 public:
  inline ModuleConfig_DetectionSensorConfig() : ModuleConfig_DetectionSensorConfig(nullptr) {}
  ~ModuleConfig_DetectionSensorConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModuleConfig_DetectionSensorConfig* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModuleConfig_DetectionSensorConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModuleConfig_DetectionSensorConfig(::google::protobuf::internal::ConstantInitialized);

  inline ModuleConfig_DetectionSensorConfig(const ModuleConfig_DetectionSensorConfig& from) : ModuleConfig_DetectionSensorConfig(nullptr, from) {}
  inline ModuleConfig_DetectionSensorConfig(ModuleConfig_DetectionSensorConfig&& from) noexcept
      : ModuleConfig_DetectionSensorConfig(nullptr, ::std::move(from)) {}
  inline ModuleConfig_DetectionSensorConfig& operator=(const ModuleConfig_DetectionSensorConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleConfig_DetectionSensorConfig& operator=(ModuleConfig_DetectionSensorConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleConfig_DetectionSensorConfig& default_instance() {
    return *reinterpret_cast<const ModuleConfig_DetectionSensorConfig*>(
        &_ModuleConfig_DetectionSensorConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ModuleConfig_DetectionSensorConfig& a, ModuleConfig_DetectionSensorConfig& b) { a.Swap(&b); }
  inline void Swap(ModuleConfig_DetectionSensorConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleConfig_DetectionSensorConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleConfig_DetectionSensorConfig* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModuleConfig_DetectionSensorConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModuleConfig_DetectionSensorConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModuleConfig_DetectionSensorConfig& from) { ModuleConfig_DetectionSensorConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModuleConfig_DetectionSensorConfig* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.ModuleConfig.DetectionSensorConfig"; }

 protected:
  explicit ModuleConfig_DetectionSensorConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ModuleConfig_DetectionSensorConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_DetectionSensorConfig& from);
  ModuleConfig_DetectionSensorConfig(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ModuleConfig_DetectionSensorConfig&& from) noexcept
      : ModuleConfig_DetectionSensorConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using TriggerType = ModuleConfig_DetectionSensorConfig_TriggerType;
  static constexpr TriggerType LOGIC_LOW = ModuleConfig_DetectionSensorConfig_TriggerType_LOGIC_LOW;
  static constexpr TriggerType LOGIC_HIGH = ModuleConfig_DetectionSensorConfig_TriggerType_LOGIC_HIGH;
  static constexpr TriggerType FALLING_EDGE = ModuleConfig_DetectionSensorConfig_TriggerType_FALLING_EDGE;
  static constexpr TriggerType RISING_EDGE = ModuleConfig_DetectionSensorConfig_TriggerType_RISING_EDGE;
  static constexpr TriggerType EITHER_EDGE_ACTIVE_LOW = ModuleConfig_DetectionSensorConfig_TriggerType_EITHER_EDGE_ACTIVE_LOW;
  static constexpr TriggerType EITHER_EDGE_ACTIVE_HIGH = ModuleConfig_DetectionSensorConfig_TriggerType_EITHER_EDGE_ACTIVE_HIGH;
  static inline bool TriggerType_IsValid(int value) {
    return ModuleConfig_DetectionSensorConfig_TriggerType_IsValid(value);
  }
  static constexpr TriggerType TriggerType_MIN = ModuleConfig_DetectionSensorConfig_TriggerType_TriggerType_MIN;
  static constexpr TriggerType TriggerType_MAX = ModuleConfig_DetectionSensorConfig_TriggerType_TriggerType_MAX;
  static constexpr int TriggerType_ARRAYSIZE = ModuleConfig_DetectionSensorConfig_TriggerType_TriggerType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL TriggerType_descriptor() {
    return ModuleConfig_DetectionSensorConfig_TriggerType_descriptor();
  }
  template <typename T>
  static inline const ::std::string& TriggerType_Name(T value) {
    return ModuleConfig_DetectionSensorConfig_TriggerType_Name(value);
  }
  static inline bool TriggerType_Parse(
      ::absl::string_view name, TriggerType* PROTOBUF_NONNULL value) {
    return ModuleConfig_DetectionSensorConfig_TriggerType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 5,
    kMinimumBroadcastSecsFieldNumber = 2,
    kStateBroadcastSecsFieldNumber = 3,
    kEnabledFieldNumber = 1,
    kSendBellFieldNumber = 4,
    kUsePullupFieldNumber = 8,
    kMonitorPinFieldNumber = 6,
    kDetectionTriggerTypeFieldNumber = 7,
  };
  // string name = 5;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // uint32 minimum_broadcast_secs = 2;
  void clear_minimum_broadcast_secs() ;
  ::uint32_t minimum_broadcast_secs() const;
  void set_minimum_broadcast_secs(::uint32_t value);

  private:
  ::uint32_t _internal_minimum_broadcast_secs() const;
  void _internal_set_minimum_broadcast_secs(::uint32_t value);

  public:
  // uint32 state_broadcast_secs = 3;
  void clear_state_broadcast_secs() ;
  ::uint32_t state_broadcast_secs() const;
  void set_state_broadcast_secs(::uint32_t value);

  private:
  ::uint32_t _internal_state_broadcast_secs() const;
  void _internal_set_state_broadcast_secs(::uint32_t value);

  public:
  // bool enabled = 1;
  void clear_enabled() ;
  bool enabled() const;
  void set_enabled(bool value);

  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);

  public:
  // bool send_bell = 4;
  void clear_send_bell() ;
  bool send_bell() const;
  void set_send_bell(bool value);

  private:
  bool _internal_send_bell() const;
  void _internal_set_send_bell(bool value);

  public:
  // bool use_pullup = 8;
  void clear_use_pullup() ;
  bool use_pullup() const;
  void set_use_pullup(bool value);

  private:
  bool _internal_use_pullup() const;
  void _internal_set_use_pullup(bool value);

  public:
  // uint32 monitor_pin = 6;
  void clear_monitor_pin() ;
  ::uint32_t monitor_pin() const;
  void set_monitor_pin(::uint32_t value);

  private:
  ::uint32_t _internal_monitor_pin() const;
  void _internal_set_monitor_pin(::uint32_t value);

  public:
  // .meshtastic.ModuleConfig.DetectionSensorConfig.TriggerType detection_trigger_type = 7;
  void clear_detection_trigger_type() ;
  ::meshtastic::ModuleConfig_DetectionSensorConfig_TriggerType detection_trigger_type() const;
  void set_detection_trigger_type(::meshtastic::ModuleConfig_DetectionSensorConfig_TriggerType value);

  private:
  ::meshtastic::ModuleConfig_DetectionSensorConfig_TriggerType _internal_detection_trigger_type() const;
  void _internal_set_detection_trigger_type(::meshtastic::ModuleConfig_DetectionSensorConfig_TriggerType value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.ModuleConfig.DetectionSensorConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8,
                                   0, 66,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ModuleConfig_DetectionSensorConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::uint32_t minimum_broadcast_secs_;
    ::uint32_t state_broadcast_secs_;
    bool enabled_;
    bool send_bell_;
    bool use_pullup_;
    ::uint32_t monitor_pin_;
    int detection_trigger_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fmodule_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_DetectionSensorConfig_class_data_;
// -------------------------------------------------------------------

class ModuleConfig_CannedMessageConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.ModuleConfig.CannedMessageConfig) */ {
 public:
  inline ModuleConfig_CannedMessageConfig() : ModuleConfig_CannedMessageConfig(nullptr) {}
  ~ModuleConfig_CannedMessageConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModuleConfig_CannedMessageConfig* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModuleConfig_CannedMessageConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModuleConfig_CannedMessageConfig(::google::protobuf::internal::ConstantInitialized);

  inline ModuleConfig_CannedMessageConfig(const ModuleConfig_CannedMessageConfig& from) : ModuleConfig_CannedMessageConfig(nullptr, from) {}
  inline ModuleConfig_CannedMessageConfig(ModuleConfig_CannedMessageConfig&& from) noexcept
      : ModuleConfig_CannedMessageConfig(nullptr, ::std::move(from)) {}
  inline ModuleConfig_CannedMessageConfig& operator=(const ModuleConfig_CannedMessageConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleConfig_CannedMessageConfig& operator=(ModuleConfig_CannedMessageConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleConfig_CannedMessageConfig& default_instance() {
    return *reinterpret_cast<const ModuleConfig_CannedMessageConfig*>(
        &_ModuleConfig_CannedMessageConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(ModuleConfig_CannedMessageConfig& a, ModuleConfig_CannedMessageConfig& b) { a.Swap(&b); }
  inline void Swap(ModuleConfig_CannedMessageConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleConfig_CannedMessageConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleConfig_CannedMessageConfig* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModuleConfig_CannedMessageConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModuleConfig_CannedMessageConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModuleConfig_CannedMessageConfig& from) { ModuleConfig_CannedMessageConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModuleConfig_CannedMessageConfig* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.ModuleConfig.CannedMessageConfig"; }

 protected:
  explicit ModuleConfig_CannedMessageConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ModuleConfig_CannedMessageConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_CannedMessageConfig& from);
  ModuleConfig_CannedMessageConfig(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ModuleConfig_CannedMessageConfig&& from) noexcept
      : ModuleConfig_CannedMessageConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using InputEventChar = ModuleConfig_CannedMessageConfig_InputEventChar;
  static constexpr InputEventChar NONE = ModuleConfig_CannedMessageConfig_InputEventChar_NONE;
  static constexpr InputEventChar UP = ModuleConfig_CannedMessageConfig_InputEventChar_UP;
  static constexpr InputEventChar DOWN = ModuleConfig_CannedMessageConfig_InputEventChar_DOWN;
  static constexpr InputEventChar LEFT = ModuleConfig_CannedMessageConfig_InputEventChar_LEFT;
  static constexpr InputEventChar RIGHT = ModuleConfig_CannedMessageConfig_InputEventChar_RIGHT;
  static constexpr InputEventChar SELECT = ModuleConfig_CannedMessageConfig_InputEventChar_SELECT;
  static constexpr InputEventChar BACK = ModuleConfig_CannedMessageConfig_InputEventChar_BACK;
  static constexpr InputEventChar CANCEL = ModuleConfig_CannedMessageConfig_InputEventChar_CANCEL;
  static inline bool InputEventChar_IsValid(int value) {
    return ModuleConfig_CannedMessageConfig_InputEventChar_IsValid(value);
  }
  static constexpr InputEventChar InputEventChar_MIN = ModuleConfig_CannedMessageConfig_InputEventChar_InputEventChar_MIN;
  static constexpr InputEventChar InputEventChar_MAX = ModuleConfig_CannedMessageConfig_InputEventChar_InputEventChar_MAX;
  static constexpr int InputEventChar_ARRAYSIZE = ModuleConfig_CannedMessageConfig_InputEventChar_InputEventChar_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL InputEventChar_descriptor() {
    return ModuleConfig_CannedMessageConfig_InputEventChar_descriptor();
  }
  template <typename T>
  static inline const ::std::string& InputEventChar_Name(T value) {
    return ModuleConfig_CannedMessageConfig_InputEventChar_Name(value);
  }
  static inline bool InputEventChar_Parse(
      ::absl::string_view name, InputEventChar* PROTOBUF_NONNULL value) {
    return ModuleConfig_CannedMessageConfig_InputEventChar_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kAllowInputSourceFieldNumber = 10,
    kInputbrokerPinAFieldNumber = 2,
    kInputbrokerPinBFieldNumber = 3,
    kInputbrokerPinPressFieldNumber = 4,
    kInputbrokerEventCwFieldNumber = 5,
    kInputbrokerEventCcwFieldNumber = 6,
    kInputbrokerEventPressFieldNumber = 7,
    kRotary1EnabledFieldNumber = 1,
    kUpdown1EnabledFieldNumber = 8,
    kEnabledFieldNumber = 9,
    kSendBellFieldNumber = 11,
  };
  // string allow_input_source = 10 [deprecated = true];
  [[deprecated]]  void clear_allow_input_source() ;
  [[deprecated]] const ::std::string& allow_input_source() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  [[deprecated]] void set_allow_input_source(Arg_&& arg, Args_... args);
  [[deprecated]] ::std::string* PROTOBUF_NONNULL mutable_allow_input_source();
  [[deprecated]] [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_allow_input_source();
  [[deprecated]] void set_allocated_allow_input_source(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_allow_input_source() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_allow_input_source(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_allow_input_source();

  public:
  // uint32 inputbroker_pin_a = 2;
  void clear_inputbroker_pin_a() ;
  ::uint32_t inputbroker_pin_a() const;
  void set_inputbroker_pin_a(::uint32_t value);

  private:
  ::uint32_t _internal_inputbroker_pin_a() const;
  void _internal_set_inputbroker_pin_a(::uint32_t value);

  public:
  // uint32 inputbroker_pin_b = 3;
  void clear_inputbroker_pin_b() ;
  ::uint32_t inputbroker_pin_b() const;
  void set_inputbroker_pin_b(::uint32_t value);

  private:
  ::uint32_t _internal_inputbroker_pin_b() const;
  void _internal_set_inputbroker_pin_b(::uint32_t value);

  public:
  // uint32 inputbroker_pin_press = 4;
  void clear_inputbroker_pin_press() ;
  ::uint32_t inputbroker_pin_press() const;
  void set_inputbroker_pin_press(::uint32_t value);

  private:
  ::uint32_t _internal_inputbroker_pin_press() const;
  void _internal_set_inputbroker_pin_press(::uint32_t value);

  public:
  // .meshtastic.ModuleConfig.CannedMessageConfig.InputEventChar inputbroker_event_cw = 5;
  void clear_inputbroker_event_cw() ;
  ::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar inputbroker_event_cw() const;
  void set_inputbroker_event_cw(::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar value);

  private:
  ::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar _internal_inputbroker_event_cw() const;
  void _internal_set_inputbroker_event_cw(::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar value);

  public:
  // .meshtastic.ModuleConfig.CannedMessageConfig.InputEventChar inputbroker_event_ccw = 6;
  void clear_inputbroker_event_ccw() ;
  ::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar inputbroker_event_ccw() const;
  void set_inputbroker_event_ccw(::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar value);

  private:
  ::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar _internal_inputbroker_event_ccw() const;
  void _internal_set_inputbroker_event_ccw(::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar value);

  public:
  // .meshtastic.ModuleConfig.CannedMessageConfig.InputEventChar inputbroker_event_press = 7;
  void clear_inputbroker_event_press() ;
  ::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar inputbroker_event_press() const;
  void set_inputbroker_event_press(::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar value);

  private:
  ::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar _internal_inputbroker_event_press() const;
  void _internal_set_inputbroker_event_press(::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar value);

  public:
  // bool rotary1_enabled = 1;
  void clear_rotary1_enabled() ;
  bool rotary1_enabled() const;
  void set_rotary1_enabled(bool value);

  private:
  bool _internal_rotary1_enabled() const;
  void _internal_set_rotary1_enabled(bool value);

  public:
  // bool updown1_enabled = 8;
  void clear_updown1_enabled() ;
  bool updown1_enabled() const;
  void set_updown1_enabled(bool value);

  private:
  bool _internal_updown1_enabled() const;
  void _internal_set_updown1_enabled(bool value);

  public:
  // bool enabled = 9 [deprecated = true];
  [[deprecated]]  void clear_enabled() ;
  [[deprecated]] bool enabled() const;
  [[deprecated]] void set_enabled(bool value);

  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);

  public:
  // bool send_bell = 11;
  void clear_send_bell() ;
  bool send_bell() const;
  void set_send_bell(bool value);

  private:
  bool _internal_send_bell() const;
  void _internal_set_send_bell(bool value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.ModuleConfig.CannedMessageConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 11,
                                   0, 78,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ModuleConfig_CannedMessageConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr allow_input_source_;
    ::uint32_t inputbroker_pin_a_;
    ::uint32_t inputbroker_pin_b_;
    ::uint32_t inputbroker_pin_press_;
    int inputbroker_event_cw_;
    int inputbroker_event_ccw_;
    int inputbroker_event_press_;
    bool rotary1_enabled_;
    bool updown1_enabled_;
    bool enabled_;
    bool send_bell_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fmodule_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_CannedMessageConfig_class_data_;
// -------------------------------------------------------------------

class ModuleConfig_AudioConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.ModuleConfig.AudioConfig) */ {
 public:
  inline ModuleConfig_AudioConfig() : ModuleConfig_AudioConfig(nullptr) {}
  ~ModuleConfig_AudioConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModuleConfig_AudioConfig* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModuleConfig_AudioConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModuleConfig_AudioConfig(::google::protobuf::internal::ConstantInitialized);

  inline ModuleConfig_AudioConfig(const ModuleConfig_AudioConfig& from) : ModuleConfig_AudioConfig(nullptr, from) {}
  inline ModuleConfig_AudioConfig(ModuleConfig_AudioConfig&& from) noexcept
      : ModuleConfig_AudioConfig(nullptr, ::std::move(from)) {}
  inline ModuleConfig_AudioConfig& operator=(const ModuleConfig_AudioConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleConfig_AudioConfig& operator=(ModuleConfig_AudioConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleConfig_AudioConfig& default_instance() {
    return *reinterpret_cast<const ModuleConfig_AudioConfig*>(
        &_ModuleConfig_AudioConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ModuleConfig_AudioConfig& a, ModuleConfig_AudioConfig& b) { a.Swap(&b); }
  inline void Swap(ModuleConfig_AudioConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleConfig_AudioConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleConfig_AudioConfig* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModuleConfig_AudioConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModuleConfig_AudioConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModuleConfig_AudioConfig& from) { ModuleConfig_AudioConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModuleConfig_AudioConfig* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.ModuleConfig.AudioConfig"; }

 protected:
  explicit ModuleConfig_AudioConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ModuleConfig_AudioConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_AudioConfig& from);
  ModuleConfig_AudioConfig(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ModuleConfig_AudioConfig&& from) noexcept
      : ModuleConfig_AudioConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Audio_Baud = ModuleConfig_AudioConfig_Audio_Baud;
  static constexpr Audio_Baud CODEC2_DEFAULT = ModuleConfig_AudioConfig_Audio_Baud_CODEC2_DEFAULT;
  static constexpr Audio_Baud CODEC2_3200 = ModuleConfig_AudioConfig_Audio_Baud_CODEC2_3200;
  static constexpr Audio_Baud CODEC2_2400 = ModuleConfig_AudioConfig_Audio_Baud_CODEC2_2400;
  static constexpr Audio_Baud CODEC2_1600 = ModuleConfig_AudioConfig_Audio_Baud_CODEC2_1600;
  static constexpr Audio_Baud CODEC2_1400 = ModuleConfig_AudioConfig_Audio_Baud_CODEC2_1400;
  static constexpr Audio_Baud CODEC2_1300 = ModuleConfig_AudioConfig_Audio_Baud_CODEC2_1300;
  static constexpr Audio_Baud CODEC2_1200 = ModuleConfig_AudioConfig_Audio_Baud_CODEC2_1200;
  static constexpr Audio_Baud CODEC2_700 = ModuleConfig_AudioConfig_Audio_Baud_CODEC2_700;
  static constexpr Audio_Baud CODEC2_700B = ModuleConfig_AudioConfig_Audio_Baud_CODEC2_700B;
  static inline bool Audio_Baud_IsValid(int value) {
    return ModuleConfig_AudioConfig_Audio_Baud_IsValid(value);
  }
  static constexpr Audio_Baud Audio_Baud_MIN = ModuleConfig_AudioConfig_Audio_Baud_Audio_Baud_MIN;
  static constexpr Audio_Baud Audio_Baud_MAX = ModuleConfig_AudioConfig_Audio_Baud_Audio_Baud_MAX;
  static constexpr int Audio_Baud_ARRAYSIZE = ModuleConfig_AudioConfig_Audio_Baud_Audio_Baud_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Audio_Baud_descriptor() {
    return ModuleConfig_AudioConfig_Audio_Baud_descriptor();
  }
  template <typename T>
  static inline const ::std::string& Audio_Baud_Name(T value) {
    return ModuleConfig_AudioConfig_Audio_Baud_Name(value);
  }
  static inline bool Audio_Baud_Parse(
      ::absl::string_view name, Audio_Baud* PROTOBUF_NONNULL value) {
    return ModuleConfig_AudioConfig_Audio_Baud_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kCodec2EnabledFieldNumber = 1,
    kPttPinFieldNumber = 2,
    kBitrateFieldNumber = 3,
    kI2SWsFieldNumber = 4,
    kI2SSdFieldNumber = 5,
    kI2SDinFieldNumber = 6,
    kI2SSckFieldNumber = 7,
  };
  // bool codec2_enabled = 1;
  void clear_codec2_enabled() ;
  bool codec2_enabled() const;
  void set_codec2_enabled(bool value);

  private:
  bool _internal_codec2_enabled() const;
  void _internal_set_codec2_enabled(bool value);

  public:
  // uint32 ptt_pin = 2;
  void clear_ptt_pin() ;
  ::uint32_t ptt_pin() const;
  void set_ptt_pin(::uint32_t value);

  private:
  ::uint32_t _internal_ptt_pin() const;
  void _internal_set_ptt_pin(::uint32_t value);

  public:
  // .meshtastic.ModuleConfig.AudioConfig.Audio_Baud bitrate = 3;
  void clear_bitrate() ;
  ::meshtastic::ModuleConfig_AudioConfig_Audio_Baud bitrate() const;
  void set_bitrate(::meshtastic::ModuleConfig_AudioConfig_Audio_Baud value);

  private:
  ::meshtastic::ModuleConfig_AudioConfig_Audio_Baud _internal_bitrate() const;
  void _internal_set_bitrate(::meshtastic::ModuleConfig_AudioConfig_Audio_Baud value);

  public:
  // uint32 i2s_ws = 4;
  void clear_i2s_ws() ;
  ::uint32_t i2s_ws() const;
  void set_i2s_ws(::uint32_t value);

  private:
  ::uint32_t _internal_i2s_ws() const;
  void _internal_set_i2s_ws(::uint32_t value);

  public:
  // uint32 i2s_sd = 5;
  void clear_i2s_sd() ;
  ::uint32_t i2s_sd() const;
  void set_i2s_sd(::uint32_t value);

  private:
  ::uint32_t _internal_i2s_sd() const;
  void _internal_set_i2s_sd(::uint32_t value);

  public:
  // uint32 i2s_din = 6;
  void clear_i2s_din() ;
  ::uint32_t i2s_din() const;
  void set_i2s_din(::uint32_t value);

  private:
  ::uint32_t _internal_i2s_din() const;
  void _internal_set_i2s_din(::uint32_t value);

  public:
  // uint32 i2s_sck = 7;
  void clear_i2s_sck() ;
  ::uint32_t i2s_sck() const;
  void set_i2s_sck(::uint32_t value);

  private:
  ::uint32_t _internal_i2s_sck() const;
  void _internal_set_i2s_sck(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.ModuleConfig.AudioConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ModuleConfig_AudioConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    bool codec2_enabled_;
    ::uint32_t ptt_pin_;
    int bitrate_;
    ::uint32_t i2s_ws_;
    ::uint32_t i2s_sd_;
    ::uint32_t i2s_din_;
    ::uint32_t i2s_sck_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fmodule_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_AudioConfig_class_data_;
// -------------------------------------------------------------------

class ModuleConfig_AmbientLightingConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.ModuleConfig.AmbientLightingConfig) */ {
 public:
  inline ModuleConfig_AmbientLightingConfig() : ModuleConfig_AmbientLightingConfig(nullptr) {}
  ~ModuleConfig_AmbientLightingConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModuleConfig_AmbientLightingConfig* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModuleConfig_AmbientLightingConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModuleConfig_AmbientLightingConfig(::google::protobuf::internal::ConstantInitialized);

  inline ModuleConfig_AmbientLightingConfig(const ModuleConfig_AmbientLightingConfig& from) : ModuleConfig_AmbientLightingConfig(nullptr, from) {}
  inline ModuleConfig_AmbientLightingConfig(ModuleConfig_AmbientLightingConfig&& from) noexcept
      : ModuleConfig_AmbientLightingConfig(nullptr, ::std::move(from)) {}
  inline ModuleConfig_AmbientLightingConfig& operator=(const ModuleConfig_AmbientLightingConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleConfig_AmbientLightingConfig& operator=(ModuleConfig_AmbientLightingConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleConfig_AmbientLightingConfig& default_instance() {
    return *reinterpret_cast<const ModuleConfig_AmbientLightingConfig*>(
        &_ModuleConfig_AmbientLightingConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(ModuleConfig_AmbientLightingConfig& a, ModuleConfig_AmbientLightingConfig& b) { a.Swap(&b); }
  inline void Swap(ModuleConfig_AmbientLightingConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleConfig_AmbientLightingConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleConfig_AmbientLightingConfig* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModuleConfig_AmbientLightingConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModuleConfig_AmbientLightingConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModuleConfig_AmbientLightingConfig& from) { ModuleConfig_AmbientLightingConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModuleConfig_AmbientLightingConfig* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.ModuleConfig.AmbientLightingConfig"; }

 protected:
  explicit ModuleConfig_AmbientLightingConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ModuleConfig_AmbientLightingConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_AmbientLightingConfig& from);
  ModuleConfig_AmbientLightingConfig(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ModuleConfig_AmbientLightingConfig&& from) noexcept
      : ModuleConfig_AmbientLightingConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLedStateFieldNumber = 1,
    kCurrentFieldNumber = 2,
    kRedFieldNumber = 3,
    kGreenFieldNumber = 4,
    kBlueFieldNumber = 5,
  };
  // bool led_state = 1;
  void clear_led_state() ;
  bool led_state() const;
  void set_led_state(bool value);

  private:
  bool _internal_led_state() const;
  void _internal_set_led_state(bool value);

  public:
  // uint32 current = 2;
  void clear_current() ;
  ::uint32_t current() const;
  void set_current(::uint32_t value);

  private:
  ::uint32_t _internal_current() const;
  void _internal_set_current(::uint32_t value);

  public:
  // uint32 red = 3;
  void clear_red() ;
  ::uint32_t red() const;
  void set_red(::uint32_t value);

  private:
  ::uint32_t _internal_red() const;
  void _internal_set_red(::uint32_t value);

  public:
  // uint32 green = 4;
  void clear_green() ;
  ::uint32_t green() const;
  void set_green(::uint32_t value);

  private:
  ::uint32_t _internal_green() const;
  void _internal_set_green(::uint32_t value);

  public:
  // uint32 blue = 5;
  void clear_blue() ;
  ::uint32_t blue() const;
  void set_blue(::uint32_t value);

  private:
  ::uint32_t _internal_blue() const;
  void _internal_set_blue(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.ModuleConfig.AmbientLightingConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ModuleConfig_AmbientLightingConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    bool led_state_;
    ::uint32_t current_;
    ::uint32_t red_;
    ::uint32_t green_;
    ::uint32_t blue_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fmodule_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_AmbientLightingConfig_class_data_;
// -------------------------------------------------------------------

class ModuleConfig_RemoteHardwareConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.ModuleConfig.RemoteHardwareConfig) */ {
 public:
  inline ModuleConfig_RemoteHardwareConfig() : ModuleConfig_RemoteHardwareConfig(nullptr) {}
  ~ModuleConfig_RemoteHardwareConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModuleConfig_RemoteHardwareConfig* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModuleConfig_RemoteHardwareConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModuleConfig_RemoteHardwareConfig(::google::protobuf::internal::ConstantInitialized);

  inline ModuleConfig_RemoteHardwareConfig(const ModuleConfig_RemoteHardwareConfig& from) : ModuleConfig_RemoteHardwareConfig(nullptr, from) {}
  inline ModuleConfig_RemoteHardwareConfig(ModuleConfig_RemoteHardwareConfig&& from) noexcept
      : ModuleConfig_RemoteHardwareConfig(nullptr, ::std::move(from)) {}
  inline ModuleConfig_RemoteHardwareConfig& operator=(const ModuleConfig_RemoteHardwareConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleConfig_RemoteHardwareConfig& operator=(ModuleConfig_RemoteHardwareConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleConfig_RemoteHardwareConfig& default_instance() {
    return *reinterpret_cast<const ModuleConfig_RemoteHardwareConfig*>(
        &_ModuleConfig_RemoteHardwareConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ModuleConfig_RemoteHardwareConfig& a, ModuleConfig_RemoteHardwareConfig& b) { a.Swap(&b); }
  inline void Swap(ModuleConfig_RemoteHardwareConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleConfig_RemoteHardwareConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleConfig_RemoteHardwareConfig* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModuleConfig_RemoteHardwareConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModuleConfig_RemoteHardwareConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModuleConfig_RemoteHardwareConfig& from) { ModuleConfig_RemoteHardwareConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModuleConfig_RemoteHardwareConfig* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.ModuleConfig.RemoteHardwareConfig"; }

 protected:
  explicit ModuleConfig_RemoteHardwareConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ModuleConfig_RemoteHardwareConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_RemoteHardwareConfig& from);
  ModuleConfig_RemoteHardwareConfig(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ModuleConfig_RemoteHardwareConfig&& from) noexcept
      : ModuleConfig_RemoteHardwareConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAvailablePinsFieldNumber = 3,
    kEnabledFieldNumber = 1,
    kAllowUndefinedPinAccessFieldNumber = 2,
  };
  // repeated .meshtastic.RemoteHardwarePin available_pins = 3;
  int available_pins_size() const;
  private:
  int _internal_available_pins_size() const;

  public:
  void clear_available_pins() ;
  ::meshtastic::RemoteHardwarePin* PROTOBUF_NONNULL mutable_available_pins(int index);
  ::google::protobuf::RepeatedPtrField<::meshtastic::RemoteHardwarePin>* PROTOBUF_NONNULL mutable_available_pins();

  private:
  const ::google::protobuf::RepeatedPtrField<::meshtastic::RemoteHardwarePin>& _internal_available_pins() const;
  ::google::protobuf::RepeatedPtrField<::meshtastic::RemoteHardwarePin>* PROTOBUF_NONNULL _internal_mutable_available_pins();
  public:
  const ::meshtastic::RemoteHardwarePin& available_pins(int index) const;
  ::meshtastic::RemoteHardwarePin* PROTOBUF_NONNULL add_available_pins();
  const ::google::protobuf::RepeatedPtrField<::meshtastic::RemoteHardwarePin>& available_pins() const;
  // bool enabled = 1;
  void clear_enabled() ;
  bool enabled() const;
  void set_enabled(bool value);

  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);

  public:
  // bool allow_undefined_pin_access = 2;
  void clear_allow_undefined_pin_access() ;
  bool allow_undefined_pin_access() const;
  void set_allow_undefined_pin_access(bool value);

  private:
  bool _internal_allow_undefined_pin_access() const;
  void _internal_set_allow_undefined_pin_access(bool value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.ModuleConfig.RemoteHardwareConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ModuleConfig_RemoteHardwareConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::meshtastic::RemoteHardwarePin > available_pins_;
    bool enabled_;
    bool allow_undefined_pin_access_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fmodule_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_RemoteHardwareConfig_class_data_;
// -------------------------------------------------------------------

class ModuleConfig_MQTTConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.ModuleConfig.MQTTConfig) */ {
 public:
  inline ModuleConfig_MQTTConfig() : ModuleConfig_MQTTConfig(nullptr) {}
  ~ModuleConfig_MQTTConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModuleConfig_MQTTConfig* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModuleConfig_MQTTConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModuleConfig_MQTTConfig(::google::protobuf::internal::ConstantInitialized);

  inline ModuleConfig_MQTTConfig(const ModuleConfig_MQTTConfig& from) : ModuleConfig_MQTTConfig(nullptr, from) {}
  inline ModuleConfig_MQTTConfig(ModuleConfig_MQTTConfig&& from) noexcept
      : ModuleConfig_MQTTConfig(nullptr, ::std::move(from)) {}
  inline ModuleConfig_MQTTConfig& operator=(const ModuleConfig_MQTTConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleConfig_MQTTConfig& operator=(ModuleConfig_MQTTConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleConfig_MQTTConfig& default_instance() {
    return *reinterpret_cast<const ModuleConfig_MQTTConfig*>(
        &_ModuleConfig_MQTTConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ModuleConfig_MQTTConfig& a, ModuleConfig_MQTTConfig& b) { a.Swap(&b); }
  inline void Swap(ModuleConfig_MQTTConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleConfig_MQTTConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleConfig_MQTTConfig* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModuleConfig_MQTTConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModuleConfig_MQTTConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModuleConfig_MQTTConfig& from) { ModuleConfig_MQTTConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModuleConfig_MQTTConfig* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.ModuleConfig.MQTTConfig"; }

 protected:
  explicit ModuleConfig_MQTTConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ModuleConfig_MQTTConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig_MQTTConfig& from);
  ModuleConfig_MQTTConfig(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ModuleConfig_MQTTConfig&& from) noexcept
      : ModuleConfig_MQTTConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 2,
    kUsernameFieldNumber = 3,
    kPasswordFieldNumber = 4,
    kRootFieldNumber = 8,
    kMapReportSettingsFieldNumber = 11,
    kEnabledFieldNumber = 1,
    kEncryptionEnabledFieldNumber = 5,
    kJsonEnabledFieldNumber = 6,
    kTlsEnabledFieldNumber = 7,
    kProxyToClientEnabledFieldNumber = 9,
    kMapReportingEnabledFieldNumber = 10,
  };
  // string address = 2;
  void clear_address() ;
  const ::std::string& address() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_address();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_address();
  void set_allocated_address(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_address() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_address(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_address();

  public:
  // string username = 3;
  void clear_username() ;
  const ::std::string& username() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_username(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_username();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_username();
  void set_allocated_username(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_username() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_username(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_username();

  public:
  // string password = 4;
  void clear_password() ;
  const ::std::string& password() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_password();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_password();
  void set_allocated_password(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_password() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_password(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_password();

  public:
  // string root = 8;
  void clear_root() ;
  const ::std::string& root() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_root(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_root();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_root();
  void set_allocated_root(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_root() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_root(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_root();

  public:
  // .meshtastic.ModuleConfig.MapReportSettings map_report_settings = 11;
  bool has_map_report_settings() const;
  void clear_map_report_settings() ;
  const ::meshtastic::ModuleConfig_MapReportSettings& map_report_settings() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_MapReportSettings* PROTOBUF_NULLABLE release_map_report_settings();
  ::meshtastic::ModuleConfig_MapReportSettings* PROTOBUF_NONNULL mutable_map_report_settings();
  void set_allocated_map_report_settings(::meshtastic::ModuleConfig_MapReportSettings* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_map_report_settings(::meshtastic::ModuleConfig_MapReportSettings* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_MapReportSettings* PROTOBUF_NULLABLE unsafe_arena_release_map_report_settings();

  private:
  const ::meshtastic::ModuleConfig_MapReportSettings& _internal_map_report_settings() const;
  ::meshtastic::ModuleConfig_MapReportSettings* PROTOBUF_NONNULL _internal_mutable_map_report_settings();

  public:
  // bool enabled = 1;
  void clear_enabled() ;
  bool enabled() const;
  void set_enabled(bool value);

  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);

  public:
  // bool encryption_enabled = 5;
  void clear_encryption_enabled() ;
  bool encryption_enabled() const;
  void set_encryption_enabled(bool value);

  private:
  bool _internal_encryption_enabled() const;
  void _internal_set_encryption_enabled(bool value);

  public:
  // bool json_enabled = 6;
  void clear_json_enabled() ;
  bool json_enabled() const;
  void set_json_enabled(bool value);

  private:
  bool _internal_json_enabled() const;
  void _internal_set_json_enabled(bool value);

  public:
  // bool tls_enabled = 7;
  void clear_tls_enabled() ;
  bool tls_enabled() const;
  void set_tls_enabled(bool value);

  private:
  bool _internal_tls_enabled() const;
  void _internal_set_tls_enabled(bool value);

  public:
  // bool proxy_to_client_enabled = 9;
  void clear_proxy_to_client_enabled() ;
  bool proxy_to_client_enabled() const;
  void set_proxy_to_client_enabled(bool value);

  private:
  bool _internal_proxy_to_client_enabled() const;
  void _internal_set_proxy_to_client_enabled(bool value);

  public:
  // bool map_reporting_enabled = 10;
  void clear_map_reporting_enabled() ;
  bool map_reporting_enabled() const;
  void set_map_reporting_enabled(bool value);

  private:
  bool _internal_map_reporting_enabled() const;
  void _internal_set_map_reporting_enabled(bool value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.ModuleConfig.MQTTConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 11,
                                   1, 78,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ModuleConfig_MQTTConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::ArenaStringPtr username_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    ::google::protobuf::internal::ArenaStringPtr root_;
    ::meshtastic::ModuleConfig_MapReportSettings* PROTOBUF_NULLABLE map_report_settings_;
    bool enabled_;
    bool encryption_enabled_;
    bool json_enabled_;
    bool tls_enabled_;
    bool proxy_to_client_enabled_;
    bool map_reporting_enabled_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fmodule_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_MQTTConfig_class_data_;
// -------------------------------------------------------------------

class ModuleConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.ModuleConfig) */ {
 public:
  inline ModuleConfig() : ModuleConfig(nullptr) {}
  ~ModuleConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModuleConfig* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModuleConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModuleConfig(::google::protobuf::internal::ConstantInitialized);

  inline ModuleConfig(const ModuleConfig& from) : ModuleConfig(nullptr, from) {}
  inline ModuleConfig(ModuleConfig&& from) noexcept
      : ModuleConfig(nullptr, ::std::move(from)) {}
  inline ModuleConfig& operator=(const ModuleConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleConfig& operator=(ModuleConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleConfig& default_instance() {
    return *reinterpret_cast<const ModuleConfig*>(
        &_ModuleConfig_default_instance_);
  }
  enum PayloadVariantCase {
    kMqtt = 1,
    kSerial = 2,
    kExternalNotification = 3,
    kStoreForward = 4,
    kRangeTest = 5,
    kTelemetry = 6,
    kCannedMessage = 7,
    kAudio = 8,
    kRemoteHardware = 9,
    kNeighborInfo = 10,
    kAmbientLighting = 11,
    kDetectionSensor = 12,
    kPaxcounter = 13,
    PAYLOAD_VARIANT_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(ModuleConfig& a, ModuleConfig& b) { a.Swap(&b); }
  inline void Swap(ModuleConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleConfig* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModuleConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModuleConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModuleConfig& from) { ModuleConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModuleConfig* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.ModuleConfig"; }

 protected:
  explicit ModuleConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ModuleConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ModuleConfig& from);
  ModuleConfig(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ModuleConfig&& from) noexcept
      : ModuleConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using MQTTConfig = ModuleConfig_MQTTConfig;
  using MapReportSettings = ModuleConfig_MapReportSettings;
  using RemoteHardwareConfig = ModuleConfig_RemoteHardwareConfig;
  using NeighborInfoConfig = ModuleConfig_NeighborInfoConfig;
  using DetectionSensorConfig = ModuleConfig_DetectionSensorConfig;
  using AudioConfig = ModuleConfig_AudioConfig;
  using PaxcounterConfig = ModuleConfig_PaxcounterConfig;
  using SerialConfig = ModuleConfig_SerialConfig;
  using ExternalNotificationConfig = ModuleConfig_ExternalNotificationConfig;
  using StoreForwardConfig = ModuleConfig_StoreForwardConfig;
  using RangeTestConfig = ModuleConfig_RangeTestConfig;
  using TelemetryConfig = ModuleConfig_TelemetryConfig;
  using CannedMessageConfig = ModuleConfig_CannedMessageConfig;
  using AmbientLightingConfig = ModuleConfig_AmbientLightingConfig;

  // accessors -------------------------------------------------------
  enum : int {
    kMqttFieldNumber = 1,
    kSerialFieldNumber = 2,
    kExternalNotificationFieldNumber = 3,
    kStoreForwardFieldNumber = 4,
    kRangeTestFieldNumber = 5,
    kTelemetryFieldNumber = 6,
    kCannedMessageFieldNumber = 7,
    kAudioFieldNumber = 8,
    kRemoteHardwareFieldNumber = 9,
    kNeighborInfoFieldNumber = 10,
    kAmbientLightingFieldNumber = 11,
    kDetectionSensorFieldNumber = 12,
    kPaxcounterFieldNumber = 13,
  };
  // .meshtastic.ModuleConfig.MQTTConfig mqtt = 1;
  bool has_mqtt() const;
  private:
  bool _internal_has_mqtt() const;

  public:
  void clear_mqtt() ;
  const ::meshtastic::ModuleConfig_MQTTConfig& mqtt() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NULLABLE release_mqtt();
  ::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NONNULL mutable_mqtt();
  void set_allocated_mqtt(::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_mqtt(::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NULLABLE unsafe_arena_release_mqtt();

  private:
  const ::meshtastic::ModuleConfig_MQTTConfig& _internal_mqtt() const;
  ::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NONNULL _internal_mutable_mqtt();

  public:
  // .meshtastic.ModuleConfig.SerialConfig serial = 2;
  bool has_serial() const;
  private:
  bool _internal_has_serial() const;

  public:
  void clear_serial() ;
  const ::meshtastic::ModuleConfig_SerialConfig& serial() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NULLABLE release_serial();
  ::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NONNULL mutable_serial();
  void set_allocated_serial(::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_serial(::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NULLABLE unsafe_arena_release_serial();

  private:
  const ::meshtastic::ModuleConfig_SerialConfig& _internal_serial() const;
  ::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NONNULL _internal_mutable_serial();

  public:
  // .meshtastic.ModuleConfig.ExternalNotificationConfig external_notification = 3;
  bool has_external_notification() const;
  private:
  bool _internal_has_external_notification() const;

  public:
  void clear_external_notification() ;
  const ::meshtastic::ModuleConfig_ExternalNotificationConfig& external_notification() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NULLABLE release_external_notification();
  ::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NONNULL mutable_external_notification();
  void set_allocated_external_notification(::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_external_notification(::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NULLABLE unsafe_arena_release_external_notification();

  private:
  const ::meshtastic::ModuleConfig_ExternalNotificationConfig& _internal_external_notification() const;
  ::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NONNULL _internal_mutable_external_notification();

  public:
  // .meshtastic.ModuleConfig.StoreForwardConfig store_forward = 4;
  bool has_store_forward() const;
  private:
  bool _internal_has_store_forward() const;

  public:
  void clear_store_forward() ;
  const ::meshtastic::ModuleConfig_StoreForwardConfig& store_forward() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NULLABLE release_store_forward();
  ::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NONNULL mutable_store_forward();
  void set_allocated_store_forward(::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_store_forward(::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NULLABLE unsafe_arena_release_store_forward();

  private:
  const ::meshtastic::ModuleConfig_StoreForwardConfig& _internal_store_forward() const;
  ::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NONNULL _internal_mutable_store_forward();

  public:
  // .meshtastic.ModuleConfig.RangeTestConfig range_test = 5;
  bool has_range_test() const;
  private:
  bool _internal_has_range_test() const;

  public:
  void clear_range_test() ;
  const ::meshtastic::ModuleConfig_RangeTestConfig& range_test() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NULLABLE release_range_test();
  ::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NONNULL mutable_range_test();
  void set_allocated_range_test(::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_range_test(::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NULLABLE unsafe_arena_release_range_test();

  private:
  const ::meshtastic::ModuleConfig_RangeTestConfig& _internal_range_test() const;
  ::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NONNULL _internal_mutable_range_test();

  public:
  // .meshtastic.ModuleConfig.TelemetryConfig telemetry = 6;
  bool has_telemetry() const;
  private:
  bool _internal_has_telemetry() const;

  public:
  void clear_telemetry() ;
  const ::meshtastic::ModuleConfig_TelemetryConfig& telemetry() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NULLABLE release_telemetry();
  ::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NONNULL mutable_telemetry();
  void set_allocated_telemetry(::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_telemetry(::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NULLABLE unsafe_arena_release_telemetry();

  private:
  const ::meshtastic::ModuleConfig_TelemetryConfig& _internal_telemetry() const;
  ::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NONNULL _internal_mutable_telemetry();

  public:
  // .meshtastic.ModuleConfig.CannedMessageConfig canned_message = 7;
  bool has_canned_message() const;
  private:
  bool _internal_has_canned_message() const;

  public:
  void clear_canned_message() ;
  const ::meshtastic::ModuleConfig_CannedMessageConfig& canned_message() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NULLABLE release_canned_message();
  ::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NONNULL mutable_canned_message();
  void set_allocated_canned_message(::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_canned_message(::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NULLABLE unsafe_arena_release_canned_message();

  private:
  const ::meshtastic::ModuleConfig_CannedMessageConfig& _internal_canned_message() const;
  ::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NONNULL _internal_mutable_canned_message();

  public:
  // .meshtastic.ModuleConfig.AudioConfig audio = 8;
  bool has_audio() const;
  private:
  bool _internal_has_audio() const;

  public:
  void clear_audio() ;
  const ::meshtastic::ModuleConfig_AudioConfig& audio() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NULLABLE release_audio();
  ::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NONNULL mutable_audio();
  void set_allocated_audio(::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_audio(::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NULLABLE unsafe_arena_release_audio();

  private:
  const ::meshtastic::ModuleConfig_AudioConfig& _internal_audio() const;
  ::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NONNULL _internal_mutable_audio();

  public:
  // .meshtastic.ModuleConfig.RemoteHardwareConfig remote_hardware = 9;
  bool has_remote_hardware() const;
  private:
  bool _internal_has_remote_hardware() const;

  public:
  void clear_remote_hardware() ;
  const ::meshtastic::ModuleConfig_RemoteHardwareConfig& remote_hardware() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NULLABLE release_remote_hardware();
  ::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NONNULL mutable_remote_hardware();
  void set_allocated_remote_hardware(::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_remote_hardware(::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NULLABLE unsafe_arena_release_remote_hardware();

  private:
  const ::meshtastic::ModuleConfig_RemoteHardwareConfig& _internal_remote_hardware() const;
  ::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NONNULL _internal_mutable_remote_hardware();

  public:
  // .meshtastic.ModuleConfig.NeighborInfoConfig neighbor_info = 10;
  bool has_neighbor_info() const;
  private:
  bool _internal_has_neighbor_info() const;

  public:
  void clear_neighbor_info() ;
  const ::meshtastic::ModuleConfig_NeighborInfoConfig& neighbor_info() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NULLABLE release_neighbor_info();
  ::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NONNULL mutable_neighbor_info();
  void set_allocated_neighbor_info(::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_neighbor_info(::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NULLABLE unsafe_arena_release_neighbor_info();

  private:
  const ::meshtastic::ModuleConfig_NeighborInfoConfig& _internal_neighbor_info() const;
  ::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NONNULL _internal_mutable_neighbor_info();

  public:
  // .meshtastic.ModuleConfig.AmbientLightingConfig ambient_lighting = 11;
  bool has_ambient_lighting() const;
  private:
  bool _internal_has_ambient_lighting() const;

  public:
  void clear_ambient_lighting() ;
  const ::meshtastic::ModuleConfig_AmbientLightingConfig& ambient_lighting() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NULLABLE release_ambient_lighting();
  ::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NONNULL mutable_ambient_lighting();
  void set_allocated_ambient_lighting(::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_ambient_lighting(::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NULLABLE unsafe_arena_release_ambient_lighting();

  private:
  const ::meshtastic::ModuleConfig_AmbientLightingConfig& _internal_ambient_lighting() const;
  ::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NONNULL _internal_mutable_ambient_lighting();

  public:
  // .meshtastic.ModuleConfig.DetectionSensorConfig detection_sensor = 12;
  bool has_detection_sensor() const;
  private:
  bool _internal_has_detection_sensor() const;

  public:
  void clear_detection_sensor() ;
  const ::meshtastic::ModuleConfig_DetectionSensorConfig& detection_sensor() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NULLABLE release_detection_sensor();
  ::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NONNULL mutable_detection_sensor();
  void set_allocated_detection_sensor(::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_detection_sensor(::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NULLABLE unsafe_arena_release_detection_sensor();

  private:
  const ::meshtastic::ModuleConfig_DetectionSensorConfig& _internal_detection_sensor() const;
  ::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NONNULL _internal_mutable_detection_sensor();

  public:
  // .meshtastic.ModuleConfig.PaxcounterConfig paxcounter = 13;
  bool has_paxcounter() const;
  private:
  bool _internal_has_paxcounter() const;

  public:
  void clear_paxcounter() ;
  const ::meshtastic::ModuleConfig_PaxcounterConfig& paxcounter() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NULLABLE release_paxcounter();
  ::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NONNULL mutable_paxcounter();
  void set_allocated_paxcounter(::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_paxcounter(::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NULLABLE unsafe_arena_release_paxcounter();

  private:
  const ::meshtastic::ModuleConfig_PaxcounterConfig& _internal_paxcounter() const;
  ::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NONNULL _internal_mutable_paxcounter();

  public:
  void clear_payload_variant();
  PayloadVariantCase payload_variant_case() const;
  // @@protoc_insertion_point(class_scope:meshtastic.ModuleConfig)
 private:
  class _Internal;
  void set_has_mqtt();
  void set_has_serial();
  void set_has_external_notification();
  void set_has_store_forward();
  void set_has_range_test();
  void set_has_telemetry();
  void set_has_canned_message();
  void set_has_audio();
  void set_has_remote_hardware();
  void set_has_neighbor_info();
  void set_has_ambient_lighting();
  void set_has_detection_sensor();
  void set_has_paxcounter();
  inline bool has_payload_variant() const;
  inline void clear_has_payload_variant();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 13,
                                   13, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ModuleConfig& from_msg);
    union PayloadVariantUnion {
      constexpr PayloadVariantUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE mqtt_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE serial_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE external_notification_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE store_forward_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE range_test_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE telemetry_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE canned_message_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE audio_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE remote_hardware_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE neighbor_info_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE ambient_lighting_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE detection_sensor_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE paxcounter_;
    } payload_variant_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fmodule_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ModuleConfig_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ModuleConfig_MQTTConfig

// bool enabled = 1;
inline void ModuleConfig_MQTTConfig::clear_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline bool ModuleConfig_MQTTConfig::enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.MQTTConfig.enabled)
  return _internal_enabled();
}
inline void ModuleConfig_MQTTConfig::set_enabled(bool value) {
  _internal_set_enabled(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.MQTTConfig.enabled)
}
inline bool ModuleConfig_MQTTConfig::_internal_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enabled_;
}
inline void ModuleConfig_MQTTConfig::_internal_set_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = value;
}

// string address = 2;
inline void ModuleConfig_MQTTConfig::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ModuleConfig_MQTTConfig::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.MQTTConfig.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ModuleConfig_MQTTConfig::set_address(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.MQTTConfig.address)
}
inline ::std::string* PROTOBUF_NONNULL ModuleConfig_MQTTConfig::mutable_address()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.MQTTConfig.address)
  return _s;
}
inline const ::std::string& ModuleConfig_MQTTConfig::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void ModuleConfig_MQTTConfig::_internal_set_address(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.address_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ModuleConfig_MQTTConfig::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.address_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ModuleConfig_MQTTConfig::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.MQTTConfig.address)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.address_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.address_.Set("", GetArena());
  }
  return released;
}
inline void ModuleConfig_MQTTConfig::set_allocated_address(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.MQTTConfig.address)
}

// string username = 3;
inline void ModuleConfig_MQTTConfig::clear_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& ModuleConfig_MQTTConfig::username() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.MQTTConfig.username)
  return _internal_username();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ModuleConfig_MQTTConfig::set_username(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.username_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.MQTTConfig.username)
}
inline ::std::string* PROTOBUF_NONNULL ModuleConfig_MQTTConfig::mutable_username()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_username();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.MQTTConfig.username)
  return _s;
}
inline const ::std::string& ModuleConfig_MQTTConfig::_internal_username() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.username_.Get();
}
inline void ModuleConfig_MQTTConfig::_internal_set_username(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.username_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ModuleConfig_MQTTConfig::_internal_mutable_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.username_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ModuleConfig_MQTTConfig::release_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.MQTTConfig.username)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.username_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.username_.Set("", GetArena());
  }
  return released;
}
inline void ModuleConfig_MQTTConfig::set_allocated_username(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.username_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.username_.IsDefault()) {
    _impl_.username_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.MQTTConfig.username)
}

// string password = 4;
inline void ModuleConfig_MQTTConfig::clear_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& ModuleConfig_MQTTConfig::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.MQTTConfig.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ModuleConfig_MQTTConfig::set_password(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.MQTTConfig.password)
}
inline ::std::string* PROTOBUF_NONNULL ModuleConfig_MQTTConfig::mutable_password()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.MQTTConfig.password)
  return _s;
}
inline const ::std::string& ModuleConfig_MQTTConfig::_internal_password() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.password_.Get();
}
inline void ModuleConfig_MQTTConfig::_internal_set_password(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.password_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ModuleConfig_MQTTConfig::_internal_mutable_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.password_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ModuleConfig_MQTTConfig::release_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.MQTTConfig.password)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.password_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.password_.Set("", GetArena());
  }
  return released;
}
inline void ModuleConfig_MQTTConfig::set_allocated_password(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.password_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.password_.IsDefault()) {
    _impl_.password_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.MQTTConfig.password)
}

// bool encryption_enabled = 5;
inline void ModuleConfig_MQTTConfig::clear_encryption_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encryption_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline bool ModuleConfig_MQTTConfig::encryption_enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.MQTTConfig.encryption_enabled)
  return _internal_encryption_enabled();
}
inline void ModuleConfig_MQTTConfig::set_encryption_enabled(bool value) {
  _internal_set_encryption_enabled(value);
  _impl_._has_bits_[0] |= 0x00000040U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.MQTTConfig.encryption_enabled)
}
inline bool ModuleConfig_MQTTConfig::_internal_encryption_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.encryption_enabled_;
}
inline void ModuleConfig_MQTTConfig::_internal_set_encryption_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encryption_enabled_ = value;
}

// bool json_enabled = 6;
inline void ModuleConfig_MQTTConfig::clear_json_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.json_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000080U;
}
inline bool ModuleConfig_MQTTConfig::json_enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.MQTTConfig.json_enabled)
  return _internal_json_enabled();
}
inline void ModuleConfig_MQTTConfig::set_json_enabled(bool value) {
  _internal_set_json_enabled(value);
  _impl_._has_bits_[0] |= 0x00000080U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.MQTTConfig.json_enabled)
}
inline bool ModuleConfig_MQTTConfig::_internal_json_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.json_enabled_;
}
inline void ModuleConfig_MQTTConfig::_internal_set_json_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.json_enabled_ = value;
}

// bool tls_enabled = 7;
inline void ModuleConfig_MQTTConfig::clear_tls_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tls_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000100U;
}
inline bool ModuleConfig_MQTTConfig::tls_enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.MQTTConfig.tls_enabled)
  return _internal_tls_enabled();
}
inline void ModuleConfig_MQTTConfig::set_tls_enabled(bool value) {
  _internal_set_tls_enabled(value);
  _impl_._has_bits_[0] |= 0x00000100U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.MQTTConfig.tls_enabled)
}
inline bool ModuleConfig_MQTTConfig::_internal_tls_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tls_enabled_;
}
inline void ModuleConfig_MQTTConfig::_internal_set_tls_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tls_enabled_ = value;
}

// string root = 8;
inline void ModuleConfig_MQTTConfig::clear_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::std::string& ModuleConfig_MQTTConfig::root() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.MQTTConfig.root)
  return _internal_root();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ModuleConfig_MQTTConfig::set_root(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.root_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.MQTTConfig.root)
}
inline ::std::string* PROTOBUF_NONNULL ModuleConfig_MQTTConfig::mutable_root()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_root();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.MQTTConfig.root)
  return _s;
}
inline const ::std::string& ModuleConfig_MQTTConfig::_internal_root() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.root_.Get();
}
inline void ModuleConfig_MQTTConfig::_internal_set_root(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.root_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ModuleConfig_MQTTConfig::_internal_mutable_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  return _impl_.root_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ModuleConfig_MQTTConfig::release_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.MQTTConfig.root)
  if ((_impl_._has_bits_[0] & 0x00000008U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008U;
  auto* released = _impl_.root_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.root_.Set("", GetArena());
  }
  return released;
}
inline void ModuleConfig_MQTTConfig::set_allocated_root(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  _impl_.root_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.root_.IsDefault()) {
    _impl_.root_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.MQTTConfig.root)
}

// bool proxy_to_client_enabled = 9;
inline void ModuleConfig_MQTTConfig::clear_proxy_to_client_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proxy_to_client_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000200U;
}
inline bool ModuleConfig_MQTTConfig::proxy_to_client_enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.MQTTConfig.proxy_to_client_enabled)
  return _internal_proxy_to_client_enabled();
}
inline void ModuleConfig_MQTTConfig::set_proxy_to_client_enabled(bool value) {
  _internal_set_proxy_to_client_enabled(value);
  _impl_._has_bits_[0] |= 0x00000200U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.MQTTConfig.proxy_to_client_enabled)
}
inline bool ModuleConfig_MQTTConfig::_internal_proxy_to_client_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proxy_to_client_enabled_;
}
inline void ModuleConfig_MQTTConfig::_internal_set_proxy_to_client_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proxy_to_client_enabled_ = value;
}

// bool map_reporting_enabled = 10;
inline void ModuleConfig_MQTTConfig::clear_map_reporting_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_reporting_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000400U;
}
inline bool ModuleConfig_MQTTConfig::map_reporting_enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.MQTTConfig.map_reporting_enabled)
  return _internal_map_reporting_enabled();
}
inline void ModuleConfig_MQTTConfig::set_map_reporting_enabled(bool value) {
  _internal_set_map_reporting_enabled(value);
  _impl_._has_bits_[0] |= 0x00000400U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.MQTTConfig.map_reporting_enabled)
}
inline bool ModuleConfig_MQTTConfig::_internal_map_reporting_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_reporting_enabled_;
}
inline void ModuleConfig_MQTTConfig::_internal_set_map_reporting_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_reporting_enabled_ = value;
}

// .meshtastic.ModuleConfig.MapReportSettings map_report_settings = 11;
inline bool ModuleConfig_MQTTConfig::has_map_report_settings() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.map_report_settings_ != nullptr);
  return value;
}
inline void ModuleConfig_MQTTConfig::clear_map_report_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.map_report_settings_ != nullptr) _impl_.map_report_settings_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline const ::meshtastic::ModuleConfig_MapReportSettings& ModuleConfig_MQTTConfig::_internal_map_report_settings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::ModuleConfig_MapReportSettings* p = _impl_.map_report_settings_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::ModuleConfig_MapReportSettings&>(::meshtastic::_ModuleConfig_MapReportSettings_default_instance_);
}
inline const ::meshtastic::ModuleConfig_MapReportSettings& ModuleConfig_MQTTConfig::map_report_settings() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.MQTTConfig.map_report_settings)
  return _internal_map_report_settings();
}
inline void ModuleConfig_MQTTConfig::unsafe_arena_set_allocated_map_report_settings(
    ::meshtastic::ModuleConfig_MapReportSettings* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.map_report_settings_);
  }
  _impl_.map_report_settings_ = reinterpret_cast<::meshtastic::ModuleConfig_MapReportSettings*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.ModuleConfig.MQTTConfig.map_report_settings)
}
inline ::meshtastic::ModuleConfig_MapReportSettings* PROTOBUF_NULLABLE ModuleConfig_MQTTConfig::release_map_report_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010U;
  ::meshtastic::ModuleConfig_MapReportSettings* released = _impl_.map_report_settings_;
  _impl_.map_report_settings_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::ModuleConfig_MapReportSettings* PROTOBUF_NULLABLE ModuleConfig_MQTTConfig::unsafe_arena_release_map_report_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.MQTTConfig.map_report_settings)

  _impl_._has_bits_[0] &= ~0x00000010U;
  ::meshtastic::ModuleConfig_MapReportSettings* temp = _impl_.map_report_settings_;
  _impl_.map_report_settings_ = nullptr;
  return temp;
}
inline ::meshtastic::ModuleConfig_MapReportSettings* PROTOBUF_NONNULL ModuleConfig_MQTTConfig::_internal_mutable_map_report_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.map_report_settings_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_MapReportSettings>(GetArena());
    _impl_.map_report_settings_ = reinterpret_cast<::meshtastic::ModuleConfig_MapReportSettings*>(p);
  }
  return _impl_.map_report_settings_;
}
inline ::meshtastic::ModuleConfig_MapReportSettings* PROTOBUF_NONNULL ModuleConfig_MQTTConfig::mutable_map_report_settings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010U;
  ::meshtastic::ModuleConfig_MapReportSettings* _msg = _internal_mutable_map_report_settings();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.MQTTConfig.map_report_settings)
  return _msg;
}
inline void ModuleConfig_MQTTConfig::set_allocated_map_report_settings(::meshtastic::ModuleConfig_MapReportSettings* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.map_report_settings_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }

  _impl_.map_report_settings_ = reinterpret_cast<::meshtastic::ModuleConfig_MapReportSettings*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.MQTTConfig.map_report_settings)
}

// -------------------------------------------------------------------

// ModuleConfig_MapReportSettings

// uint32 publish_interval_secs = 1;
inline void ModuleConfig_MapReportSettings::clear_publish_interval_secs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.publish_interval_secs_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::uint32_t ModuleConfig_MapReportSettings::publish_interval_secs() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.MapReportSettings.publish_interval_secs)
  return _internal_publish_interval_secs();
}
inline void ModuleConfig_MapReportSettings::set_publish_interval_secs(::uint32_t value) {
  _internal_set_publish_interval_secs(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.MapReportSettings.publish_interval_secs)
}
inline ::uint32_t ModuleConfig_MapReportSettings::_internal_publish_interval_secs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.publish_interval_secs_;
}
inline void ModuleConfig_MapReportSettings::_internal_set_publish_interval_secs(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.publish_interval_secs_ = value;
}

// uint32 position_precision = 2;
inline void ModuleConfig_MapReportSettings::clear_position_precision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_precision_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint32_t ModuleConfig_MapReportSettings::position_precision() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.MapReportSettings.position_precision)
  return _internal_position_precision();
}
inline void ModuleConfig_MapReportSettings::set_position_precision(::uint32_t value) {
  _internal_set_position_precision(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.MapReportSettings.position_precision)
}
inline ::uint32_t ModuleConfig_MapReportSettings::_internal_position_precision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.position_precision_;
}
inline void ModuleConfig_MapReportSettings::_internal_set_position_precision(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_precision_ = value;
}

// bool should_report_location = 3;
inline void ModuleConfig_MapReportSettings::clear_should_report_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.should_report_location_ = false;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline bool ModuleConfig_MapReportSettings::should_report_location() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.MapReportSettings.should_report_location)
  return _internal_should_report_location();
}
inline void ModuleConfig_MapReportSettings::set_should_report_location(bool value) {
  _internal_set_should_report_location(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.MapReportSettings.should_report_location)
}
inline bool ModuleConfig_MapReportSettings::_internal_should_report_location() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.should_report_location_;
}
inline void ModuleConfig_MapReportSettings::_internal_set_should_report_location(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.should_report_location_ = value;
}

// -------------------------------------------------------------------

// ModuleConfig_RemoteHardwareConfig

// bool enabled = 1;
inline void ModuleConfig_RemoteHardwareConfig::clear_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline bool ModuleConfig_RemoteHardwareConfig::enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.RemoteHardwareConfig.enabled)
  return _internal_enabled();
}
inline void ModuleConfig_RemoteHardwareConfig::set_enabled(bool value) {
  _internal_set_enabled(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.RemoteHardwareConfig.enabled)
}
inline bool ModuleConfig_RemoteHardwareConfig::_internal_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enabled_;
}
inline void ModuleConfig_RemoteHardwareConfig::_internal_set_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = value;
}

// bool allow_undefined_pin_access = 2;
inline void ModuleConfig_RemoteHardwareConfig::clear_allow_undefined_pin_access() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allow_undefined_pin_access_ = false;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline bool ModuleConfig_RemoteHardwareConfig::allow_undefined_pin_access() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.RemoteHardwareConfig.allow_undefined_pin_access)
  return _internal_allow_undefined_pin_access();
}
inline void ModuleConfig_RemoteHardwareConfig::set_allow_undefined_pin_access(bool value) {
  _internal_set_allow_undefined_pin_access(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.RemoteHardwareConfig.allow_undefined_pin_access)
}
inline bool ModuleConfig_RemoteHardwareConfig::_internal_allow_undefined_pin_access() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allow_undefined_pin_access_;
}
inline void ModuleConfig_RemoteHardwareConfig::_internal_set_allow_undefined_pin_access(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allow_undefined_pin_access_ = value;
}

// repeated .meshtastic.RemoteHardwarePin available_pins = 3;
inline int ModuleConfig_RemoteHardwareConfig::_internal_available_pins_size() const {
  return _internal_available_pins().size();
}
inline int ModuleConfig_RemoteHardwareConfig::available_pins_size() const {
  return _internal_available_pins_size();
}
inline void ModuleConfig_RemoteHardwareConfig::clear_available_pins() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.available_pins_.Clear();
}
inline ::meshtastic::RemoteHardwarePin* PROTOBUF_NONNULL ModuleConfig_RemoteHardwareConfig::mutable_available_pins(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.RemoteHardwareConfig.available_pins)
  return _internal_mutable_available_pins()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::meshtastic::RemoteHardwarePin>* PROTOBUF_NONNULL ModuleConfig_RemoteHardwareConfig::mutable_available_pins()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:meshtastic.ModuleConfig.RemoteHardwareConfig.available_pins)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_available_pins();
}
inline const ::meshtastic::RemoteHardwarePin& ModuleConfig_RemoteHardwareConfig::available_pins(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.RemoteHardwareConfig.available_pins)
  return _internal_available_pins().Get(index);
}
inline ::meshtastic::RemoteHardwarePin* PROTOBUF_NONNULL ModuleConfig_RemoteHardwareConfig::add_available_pins()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::meshtastic::RemoteHardwarePin* _add = _internal_mutable_available_pins()->Add();
  // @@protoc_insertion_point(field_add:meshtastic.ModuleConfig.RemoteHardwareConfig.available_pins)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::meshtastic::RemoteHardwarePin>& ModuleConfig_RemoteHardwareConfig::available_pins() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:meshtastic.ModuleConfig.RemoteHardwareConfig.available_pins)
  return _internal_available_pins();
}
inline const ::google::protobuf::RepeatedPtrField<::meshtastic::RemoteHardwarePin>&
ModuleConfig_RemoteHardwareConfig::_internal_available_pins() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.available_pins_;
}
inline ::google::protobuf::RepeatedPtrField<::meshtastic::RemoteHardwarePin>* PROTOBUF_NONNULL
ModuleConfig_RemoteHardwareConfig::_internal_mutable_available_pins() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.available_pins_;
}

// -------------------------------------------------------------------

// ModuleConfig_NeighborInfoConfig

// bool enabled = 1;
inline void ModuleConfig_NeighborInfoConfig::clear_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline bool ModuleConfig_NeighborInfoConfig::enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.NeighborInfoConfig.enabled)
  return _internal_enabled();
}
inline void ModuleConfig_NeighborInfoConfig::set_enabled(bool value) {
  _internal_set_enabled(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.NeighborInfoConfig.enabled)
}
inline bool ModuleConfig_NeighborInfoConfig::_internal_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enabled_;
}
inline void ModuleConfig_NeighborInfoConfig::_internal_set_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = value;
}

// uint32 update_interval = 2;
inline void ModuleConfig_NeighborInfoConfig::clear_update_interval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.update_interval_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::uint32_t ModuleConfig_NeighborInfoConfig::update_interval() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.NeighborInfoConfig.update_interval)
  return _internal_update_interval();
}
inline void ModuleConfig_NeighborInfoConfig::set_update_interval(::uint32_t value) {
  _internal_set_update_interval(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.NeighborInfoConfig.update_interval)
}
inline ::uint32_t ModuleConfig_NeighborInfoConfig::_internal_update_interval() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.update_interval_;
}
inline void ModuleConfig_NeighborInfoConfig::_internal_set_update_interval(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.update_interval_ = value;
}

// bool transmit_over_lora = 3;
inline void ModuleConfig_NeighborInfoConfig::clear_transmit_over_lora() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transmit_over_lora_ = false;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline bool ModuleConfig_NeighborInfoConfig::transmit_over_lora() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.NeighborInfoConfig.transmit_over_lora)
  return _internal_transmit_over_lora();
}
inline void ModuleConfig_NeighborInfoConfig::set_transmit_over_lora(bool value) {
  _internal_set_transmit_over_lora(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.NeighborInfoConfig.transmit_over_lora)
}
inline bool ModuleConfig_NeighborInfoConfig::_internal_transmit_over_lora() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transmit_over_lora_;
}
inline void ModuleConfig_NeighborInfoConfig::_internal_set_transmit_over_lora(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transmit_over_lora_ = value;
}

// -------------------------------------------------------------------

// ModuleConfig_DetectionSensorConfig

// bool enabled = 1;
inline void ModuleConfig_DetectionSensorConfig::clear_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline bool ModuleConfig_DetectionSensorConfig::enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.DetectionSensorConfig.enabled)
  return _internal_enabled();
}
inline void ModuleConfig_DetectionSensorConfig::set_enabled(bool value) {
  _internal_set_enabled(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.DetectionSensorConfig.enabled)
}
inline bool ModuleConfig_DetectionSensorConfig::_internal_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enabled_;
}
inline void ModuleConfig_DetectionSensorConfig::_internal_set_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = value;
}

// uint32 minimum_broadcast_secs = 2;
inline void ModuleConfig_DetectionSensorConfig::clear_minimum_broadcast_secs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minimum_broadcast_secs_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint32_t ModuleConfig_DetectionSensorConfig::minimum_broadcast_secs() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.DetectionSensorConfig.minimum_broadcast_secs)
  return _internal_minimum_broadcast_secs();
}
inline void ModuleConfig_DetectionSensorConfig::set_minimum_broadcast_secs(::uint32_t value) {
  _internal_set_minimum_broadcast_secs(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.DetectionSensorConfig.minimum_broadcast_secs)
}
inline ::uint32_t ModuleConfig_DetectionSensorConfig::_internal_minimum_broadcast_secs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.minimum_broadcast_secs_;
}
inline void ModuleConfig_DetectionSensorConfig::_internal_set_minimum_broadcast_secs(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minimum_broadcast_secs_ = value;
}

// uint32 state_broadcast_secs = 3;
inline void ModuleConfig_DetectionSensorConfig::clear_state_broadcast_secs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_broadcast_secs_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint32_t ModuleConfig_DetectionSensorConfig::state_broadcast_secs() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.DetectionSensorConfig.state_broadcast_secs)
  return _internal_state_broadcast_secs();
}
inline void ModuleConfig_DetectionSensorConfig::set_state_broadcast_secs(::uint32_t value) {
  _internal_set_state_broadcast_secs(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.DetectionSensorConfig.state_broadcast_secs)
}
inline ::uint32_t ModuleConfig_DetectionSensorConfig::_internal_state_broadcast_secs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.state_broadcast_secs_;
}
inline void ModuleConfig_DetectionSensorConfig::_internal_set_state_broadcast_secs(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_broadcast_secs_ = value;
}

// bool send_bell = 4;
inline void ModuleConfig_DetectionSensorConfig::clear_send_bell() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.send_bell_ = false;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline bool ModuleConfig_DetectionSensorConfig::send_bell() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.DetectionSensorConfig.send_bell)
  return _internal_send_bell();
}
inline void ModuleConfig_DetectionSensorConfig::set_send_bell(bool value) {
  _internal_set_send_bell(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.DetectionSensorConfig.send_bell)
}
inline bool ModuleConfig_DetectionSensorConfig::_internal_send_bell() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.send_bell_;
}
inline void ModuleConfig_DetectionSensorConfig::_internal_set_send_bell(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.send_bell_ = value;
}

// string name = 5;
inline void ModuleConfig_DetectionSensorConfig::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ModuleConfig_DetectionSensorConfig::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.DetectionSensorConfig.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ModuleConfig_DetectionSensorConfig::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.DetectionSensorConfig.name)
}
inline ::std::string* PROTOBUF_NONNULL ModuleConfig_DetectionSensorConfig::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.DetectionSensorConfig.name)
  return _s;
}
inline const ::std::string& ModuleConfig_DetectionSensorConfig::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ModuleConfig_DetectionSensorConfig::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ModuleConfig_DetectionSensorConfig::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ModuleConfig_DetectionSensorConfig::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.DetectionSensorConfig.name)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void ModuleConfig_DetectionSensorConfig::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.DetectionSensorConfig.name)
}

// uint32 monitor_pin = 6;
inline void ModuleConfig_DetectionSensorConfig::clear_monitor_pin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monitor_pin_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline ::uint32_t ModuleConfig_DetectionSensorConfig::monitor_pin() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.DetectionSensorConfig.monitor_pin)
  return _internal_monitor_pin();
}
inline void ModuleConfig_DetectionSensorConfig::set_monitor_pin(::uint32_t value) {
  _internal_set_monitor_pin(value);
  _impl_._has_bits_[0] |= 0x00000040U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.DetectionSensorConfig.monitor_pin)
}
inline ::uint32_t ModuleConfig_DetectionSensorConfig::_internal_monitor_pin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.monitor_pin_;
}
inline void ModuleConfig_DetectionSensorConfig::_internal_set_monitor_pin(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monitor_pin_ = value;
}

// .meshtastic.ModuleConfig.DetectionSensorConfig.TriggerType detection_trigger_type = 7;
inline void ModuleConfig_DetectionSensorConfig::clear_detection_trigger_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.detection_trigger_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080U;
}
inline ::meshtastic::ModuleConfig_DetectionSensorConfig_TriggerType ModuleConfig_DetectionSensorConfig::detection_trigger_type() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.DetectionSensorConfig.detection_trigger_type)
  return _internal_detection_trigger_type();
}
inline void ModuleConfig_DetectionSensorConfig::set_detection_trigger_type(::meshtastic::ModuleConfig_DetectionSensorConfig_TriggerType value) {
  _internal_set_detection_trigger_type(value);
  _impl_._has_bits_[0] |= 0x00000080U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.DetectionSensorConfig.detection_trigger_type)
}
inline ::meshtastic::ModuleConfig_DetectionSensorConfig_TriggerType ModuleConfig_DetectionSensorConfig::_internal_detection_trigger_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::meshtastic::ModuleConfig_DetectionSensorConfig_TriggerType>(_impl_.detection_trigger_type_);
}
inline void ModuleConfig_DetectionSensorConfig::_internal_set_detection_trigger_type(::meshtastic::ModuleConfig_DetectionSensorConfig_TriggerType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.detection_trigger_type_ = value;
}

// bool use_pullup = 8;
inline void ModuleConfig_DetectionSensorConfig::clear_use_pullup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_pullup_ = false;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline bool ModuleConfig_DetectionSensorConfig::use_pullup() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.DetectionSensorConfig.use_pullup)
  return _internal_use_pullup();
}
inline void ModuleConfig_DetectionSensorConfig::set_use_pullup(bool value) {
  _internal_set_use_pullup(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.DetectionSensorConfig.use_pullup)
}
inline bool ModuleConfig_DetectionSensorConfig::_internal_use_pullup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_pullup_;
}
inline void ModuleConfig_DetectionSensorConfig::_internal_set_use_pullup(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_pullup_ = value;
}

// -------------------------------------------------------------------

// ModuleConfig_AudioConfig

// bool codec2_enabled = 1;
inline void ModuleConfig_AudioConfig::clear_codec2_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.codec2_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline bool ModuleConfig_AudioConfig::codec2_enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.AudioConfig.codec2_enabled)
  return _internal_codec2_enabled();
}
inline void ModuleConfig_AudioConfig::set_codec2_enabled(bool value) {
  _internal_set_codec2_enabled(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.AudioConfig.codec2_enabled)
}
inline bool ModuleConfig_AudioConfig::_internal_codec2_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.codec2_enabled_;
}
inline void ModuleConfig_AudioConfig::_internal_set_codec2_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.codec2_enabled_ = value;
}

// uint32 ptt_pin = 2;
inline void ModuleConfig_AudioConfig::clear_ptt_pin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ptt_pin_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint32_t ModuleConfig_AudioConfig::ptt_pin() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.AudioConfig.ptt_pin)
  return _internal_ptt_pin();
}
inline void ModuleConfig_AudioConfig::set_ptt_pin(::uint32_t value) {
  _internal_set_ptt_pin(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.AudioConfig.ptt_pin)
}
inline ::uint32_t ModuleConfig_AudioConfig::_internal_ptt_pin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ptt_pin_;
}
inline void ModuleConfig_AudioConfig::_internal_set_ptt_pin(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ptt_pin_ = value;
}

// .meshtastic.ModuleConfig.AudioConfig.Audio_Baud bitrate = 3;
inline void ModuleConfig_AudioConfig::clear_bitrate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bitrate_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::meshtastic::ModuleConfig_AudioConfig_Audio_Baud ModuleConfig_AudioConfig::bitrate() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.AudioConfig.bitrate)
  return _internal_bitrate();
}
inline void ModuleConfig_AudioConfig::set_bitrate(::meshtastic::ModuleConfig_AudioConfig_Audio_Baud value) {
  _internal_set_bitrate(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.AudioConfig.bitrate)
}
inline ::meshtastic::ModuleConfig_AudioConfig_Audio_Baud ModuleConfig_AudioConfig::_internal_bitrate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::meshtastic::ModuleConfig_AudioConfig_Audio_Baud>(_impl_.bitrate_);
}
inline void ModuleConfig_AudioConfig::_internal_set_bitrate(::meshtastic::ModuleConfig_AudioConfig_Audio_Baud value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bitrate_ = value;
}

// uint32 i2s_ws = 4;
inline void ModuleConfig_AudioConfig::clear_i2s_ws() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i2s_ws_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint32_t ModuleConfig_AudioConfig::i2s_ws() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.AudioConfig.i2s_ws)
  return _internal_i2s_ws();
}
inline void ModuleConfig_AudioConfig::set_i2s_ws(::uint32_t value) {
  _internal_set_i2s_ws(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.AudioConfig.i2s_ws)
}
inline ::uint32_t ModuleConfig_AudioConfig::_internal_i2s_ws() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.i2s_ws_;
}
inline void ModuleConfig_AudioConfig::_internal_set_i2s_ws(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i2s_ws_ = value;
}

// uint32 i2s_sd = 5;
inline void ModuleConfig_AudioConfig::clear_i2s_sd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i2s_sd_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::uint32_t ModuleConfig_AudioConfig::i2s_sd() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.AudioConfig.i2s_sd)
  return _internal_i2s_sd();
}
inline void ModuleConfig_AudioConfig::set_i2s_sd(::uint32_t value) {
  _internal_set_i2s_sd(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.AudioConfig.i2s_sd)
}
inline ::uint32_t ModuleConfig_AudioConfig::_internal_i2s_sd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.i2s_sd_;
}
inline void ModuleConfig_AudioConfig::_internal_set_i2s_sd(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i2s_sd_ = value;
}

// uint32 i2s_din = 6;
inline void ModuleConfig_AudioConfig::clear_i2s_din() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i2s_din_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline ::uint32_t ModuleConfig_AudioConfig::i2s_din() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.AudioConfig.i2s_din)
  return _internal_i2s_din();
}
inline void ModuleConfig_AudioConfig::set_i2s_din(::uint32_t value) {
  _internal_set_i2s_din(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.AudioConfig.i2s_din)
}
inline ::uint32_t ModuleConfig_AudioConfig::_internal_i2s_din() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.i2s_din_;
}
inline void ModuleConfig_AudioConfig::_internal_set_i2s_din(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i2s_din_ = value;
}

// uint32 i2s_sck = 7;
inline void ModuleConfig_AudioConfig::clear_i2s_sck() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i2s_sck_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline ::uint32_t ModuleConfig_AudioConfig::i2s_sck() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.AudioConfig.i2s_sck)
  return _internal_i2s_sck();
}
inline void ModuleConfig_AudioConfig::set_i2s_sck(::uint32_t value) {
  _internal_set_i2s_sck(value);
  _impl_._has_bits_[0] |= 0x00000040U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.AudioConfig.i2s_sck)
}
inline ::uint32_t ModuleConfig_AudioConfig::_internal_i2s_sck() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.i2s_sck_;
}
inline void ModuleConfig_AudioConfig::_internal_set_i2s_sck(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i2s_sck_ = value;
}

// -------------------------------------------------------------------

// ModuleConfig_PaxcounterConfig

// bool enabled = 1;
inline void ModuleConfig_PaxcounterConfig::clear_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline bool ModuleConfig_PaxcounterConfig::enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.PaxcounterConfig.enabled)
  return _internal_enabled();
}
inline void ModuleConfig_PaxcounterConfig::set_enabled(bool value) {
  _internal_set_enabled(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.PaxcounterConfig.enabled)
}
inline bool ModuleConfig_PaxcounterConfig::_internal_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enabled_;
}
inline void ModuleConfig_PaxcounterConfig::_internal_set_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = value;
}

// uint32 paxcounter_update_interval = 2;
inline void ModuleConfig_PaxcounterConfig::clear_paxcounter_update_interval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.paxcounter_update_interval_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint32_t ModuleConfig_PaxcounterConfig::paxcounter_update_interval() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.PaxcounterConfig.paxcounter_update_interval)
  return _internal_paxcounter_update_interval();
}
inline void ModuleConfig_PaxcounterConfig::set_paxcounter_update_interval(::uint32_t value) {
  _internal_set_paxcounter_update_interval(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.PaxcounterConfig.paxcounter_update_interval)
}
inline ::uint32_t ModuleConfig_PaxcounterConfig::_internal_paxcounter_update_interval() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.paxcounter_update_interval_;
}
inline void ModuleConfig_PaxcounterConfig::_internal_set_paxcounter_update_interval(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.paxcounter_update_interval_ = value;
}

// int32 wifi_threshold = 3;
inline void ModuleConfig_PaxcounterConfig::clear_wifi_threshold() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wifi_threshold_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int32_t ModuleConfig_PaxcounterConfig::wifi_threshold() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.PaxcounterConfig.wifi_threshold)
  return _internal_wifi_threshold();
}
inline void ModuleConfig_PaxcounterConfig::set_wifi_threshold(::int32_t value) {
  _internal_set_wifi_threshold(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.PaxcounterConfig.wifi_threshold)
}
inline ::int32_t ModuleConfig_PaxcounterConfig::_internal_wifi_threshold() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wifi_threshold_;
}
inline void ModuleConfig_PaxcounterConfig::_internal_set_wifi_threshold(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wifi_threshold_ = value;
}

// int32 ble_threshold = 4;
inline void ModuleConfig_PaxcounterConfig::clear_ble_threshold() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ble_threshold_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::int32_t ModuleConfig_PaxcounterConfig::ble_threshold() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.PaxcounterConfig.ble_threshold)
  return _internal_ble_threshold();
}
inline void ModuleConfig_PaxcounterConfig::set_ble_threshold(::int32_t value) {
  _internal_set_ble_threshold(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.PaxcounterConfig.ble_threshold)
}
inline ::int32_t ModuleConfig_PaxcounterConfig::_internal_ble_threshold() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ble_threshold_;
}
inline void ModuleConfig_PaxcounterConfig::_internal_set_ble_threshold(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ble_threshold_ = value;
}

// -------------------------------------------------------------------

// ModuleConfig_SerialConfig

// bool enabled = 1;
inline void ModuleConfig_SerialConfig::clear_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline bool ModuleConfig_SerialConfig::enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.SerialConfig.enabled)
  return _internal_enabled();
}
inline void ModuleConfig_SerialConfig::set_enabled(bool value) {
  _internal_set_enabled(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.SerialConfig.enabled)
}
inline bool ModuleConfig_SerialConfig::_internal_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enabled_;
}
inline void ModuleConfig_SerialConfig::_internal_set_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = value;
}

// bool echo = 2;
inline void ModuleConfig_SerialConfig::clear_echo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.echo_ = false;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline bool ModuleConfig_SerialConfig::echo() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.SerialConfig.echo)
  return _internal_echo();
}
inline void ModuleConfig_SerialConfig::set_echo(bool value) {
  _internal_set_echo(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.SerialConfig.echo)
}
inline bool ModuleConfig_SerialConfig::_internal_echo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.echo_;
}
inline void ModuleConfig_SerialConfig::_internal_set_echo(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.echo_ = value;
}

// uint32 rxd = 3;
inline void ModuleConfig_SerialConfig::clear_rxd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rxd_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::uint32_t ModuleConfig_SerialConfig::rxd() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.SerialConfig.rxd)
  return _internal_rxd();
}
inline void ModuleConfig_SerialConfig::set_rxd(::uint32_t value) {
  _internal_set_rxd(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.SerialConfig.rxd)
}
inline ::uint32_t ModuleConfig_SerialConfig::_internal_rxd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rxd_;
}
inline void ModuleConfig_SerialConfig::_internal_set_rxd(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rxd_ = value;
}

// uint32 txd = 4;
inline void ModuleConfig_SerialConfig::clear_txd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txd_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::uint32_t ModuleConfig_SerialConfig::txd() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.SerialConfig.txd)
  return _internal_txd();
}
inline void ModuleConfig_SerialConfig::set_txd(::uint32_t value) {
  _internal_set_txd(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.SerialConfig.txd)
}
inline ::uint32_t ModuleConfig_SerialConfig::_internal_txd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.txd_;
}
inline void ModuleConfig_SerialConfig::_internal_set_txd(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txd_ = value;
}

// .meshtastic.ModuleConfig.SerialConfig.Serial_Baud baud = 5;
inline void ModuleConfig_SerialConfig::clear_baud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.baud_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline ::meshtastic::ModuleConfig_SerialConfig_Serial_Baud ModuleConfig_SerialConfig::baud() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.SerialConfig.baud)
  return _internal_baud();
}
inline void ModuleConfig_SerialConfig::set_baud(::meshtastic::ModuleConfig_SerialConfig_Serial_Baud value) {
  _internal_set_baud(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.SerialConfig.baud)
}
inline ::meshtastic::ModuleConfig_SerialConfig_Serial_Baud ModuleConfig_SerialConfig::_internal_baud() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::meshtastic::ModuleConfig_SerialConfig_Serial_Baud>(_impl_.baud_);
}
inline void ModuleConfig_SerialConfig::_internal_set_baud(::meshtastic::ModuleConfig_SerialConfig_Serial_Baud value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.baud_ = value;
}

// uint32 timeout = 6;
inline void ModuleConfig_SerialConfig::clear_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline ::uint32_t ModuleConfig_SerialConfig::timeout() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.SerialConfig.timeout)
  return _internal_timeout();
}
inline void ModuleConfig_SerialConfig::set_timeout(::uint32_t value) {
  _internal_set_timeout(value);
  _impl_._has_bits_[0] |= 0x00000040U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.SerialConfig.timeout)
}
inline ::uint32_t ModuleConfig_SerialConfig::_internal_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timeout_;
}
inline void ModuleConfig_SerialConfig::_internal_set_timeout(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = value;
}

// .meshtastic.ModuleConfig.SerialConfig.Serial_Mode mode = 7;
inline void ModuleConfig_SerialConfig::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080U;
}
inline ::meshtastic::ModuleConfig_SerialConfig_Serial_Mode ModuleConfig_SerialConfig::mode() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.SerialConfig.mode)
  return _internal_mode();
}
inline void ModuleConfig_SerialConfig::set_mode(::meshtastic::ModuleConfig_SerialConfig_Serial_Mode value) {
  _internal_set_mode(value);
  _impl_._has_bits_[0] |= 0x00000080U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.SerialConfig.mode)
}
inline ::meshtastic::ModuleConfig_SerialConfig_Serial_Mode ModuleConfig_SerialConfig::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::meshtastic::ModuleConfig_SerialConfig_Serial_Mode>(_impl_.mode_);
}
inline void ModuleConfig_SerialConfig::_internal_set_mode(::meshtastic::ModuleConfig_SerialConfig_Serial_Mode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// bool override_console_serial_port = 8;
inline void ModuleConfig_SerialConfig::clear_override_console_serial_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.override_console_serial_port_ = false;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline bool ModuleConfig_SerialConfig::override_console_serial_port() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.SerialConfig.override_console_serial_port)
  return _internal_override_console_serial_port();
}
inline void ModuleConfig_SerialConfig::set_override_console_serial_port(bool value) {
  _internal_set_override_console_serial_port(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.SerialConfig.override_console_serial_port)
}
inline bool ModuleConfig_SerialConfig::_internal_override_console_serial_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.override_console_serial_port_;
}
inline void ModuleConfig_SerialConfig::_internal_set_override_console_serial_port(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.override_console_serial_port_ = value;
}

// -------------------------------------------------------------------

// ModuleConfig_ExternalNotificationConfig

// bool enabled = 1;
inline void ModuleConfig_ExternalNotificationConfig::clear_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline bool ModuleConfig_ExternalNotificationConfig::enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.ExternalNotificationConfig.enabled)
  return _internal_enabled();
}
inline void ModuleConfig_ExternalNotificationConfig::set_enabled(bool value) {
  _internal_set_enabled(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.ExternalNotificationConfig.enabled)
}
inline bool ModuleConfig_ExternalNotificationConfig::_internal_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enabled_;
}
inline void ModuleConfig_ExternalNotificationConfig::_internal_set_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = value;
}

// uint32 output_ms = 2;
inline void ModuleConfig_ExternalNotificationConfig::clear_output_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_ms_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::uint32_t ModuleConfig_ExternalNotificationConfig::output_ms() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.ExternalNotificationConfig.output_ms)
  return _internal_output_ms();
}
inline void ModuleConfig_ExternalNotificationConfig::set_output_ms(::uint32_t value) {
  _internal_set_output_ms(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.ExternalNotificationConfig.output_ms)
}
inline ::uint32_t ModuleConfig_ExternalNotificationConfig::_internal_output_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_ms_;
}
inline void ModuleConfig_ExternalNotificationConfig::_internal_set_output_ms(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_ms_ = value;
}

// uint32 output = 3;
inline void ModuleConfig_ExternalNotificationConfig::clear_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint32_t ModuleConfig_ExternalNotificationConfig::output() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.ExternalNotificationConfig.output)
  return _internal_output();
}
inline void ModuleConfig_ExternalNotificationConfig::set_output(::uint32_t value) {
  _internal_set_output(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.ExternalNotificationConfig.output)
}
inline ::uint32_t ModuleConfig_ExternalNotificationConfig::_internal_output() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_;
}
inline void ModuleConfig_ExternalNotificationConfig::_internal_set_output(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_ = value;
}

// uint32 output_vibra = 8;
inline void ModuleConfig_ExternalNotificationConfig::clear_output_vibra() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_vibra_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline ::uint32_t ModuleConfig_ExternalNotificationConfig::output_vibra() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.ExternalNotificationConfig.output_vibra)
  return _internal_output_vibra();
}
inline void ModuleConfig_ExternalNotificationConfig::set_output_vibra(::uint32_t value) {
  _internal_set_output_vibra(value);
  _impl_._has_bits_[0] |= 0x00000040U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.ExternalNotificationConfig.output_vibra)
}
inline ::uint32_t ModuleConfig_ExternalNotificationConfig::_internal_output_vibra() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_vibra_;
}
inline void ModuleConfig_ExternalNotificationConfig::_internal_set_output_vibra(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_vibra_ = value;
}

// uint32 output_buzzer = 9;
inline void ModuleConfig_ExternalNotificationConfig::clear_output_buzzer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_buzzer_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080U;
}
inline ::uint32_t ModuleConfig_ExternalNotificationConfig::output_buzzer() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.ExternalNotificationConfig.output_buzzer)
  return _internal_output_buzzer();
}
inline void ModuleConfig_ExternalNotificationConfig::set_output_buzzer(::uint32_t value) {
  _internal_set_output_buzzer(value);
  _impl_._has_bits_[0] |= 0x00000080U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.ExternalNotificationConfig.output_buzzer)
}
inline ::uint32_t ModuleConfig_ExternalNotificationConfig::_internal_output_buzzer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_buzzer_;
}
inline void ModuleConfig_ExternalNotificationConfig::_internal_set_output_buzzer(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_buzzer_ = value;
}

// bool active = 4;
inline void ModuleConfig_ExternalNotificationConfig::clear_active() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_ = false;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline bool ModuleConfig_ExternalNotificationConfig::active() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.ExternalNotificationConfig.active)
  return _internal_active();
}
inline void ModuleConfig_ExternalNotificationConfig::set_active(bool value) {
  _internal_set_active(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.ExternalNotificationConfig.active)
}
inline bool ModuleConfig_ExternalNotificationConfig::_internal_active() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.active_;
}
inline void ModuleConfig_ExternalNotificationConfig::_internal_set_active(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_ = value;
}

// bool alert_message = 5;
inline void ModuleConfig_ExternalNotificationConfig::clear_alert_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_message_ = false;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline bool ModuleConfig_ExternalNotificationConfig::alert_message() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.ExternalNotificationConfig.alert_message)
  return _internal_alert_message();
}
inline void ModuleConfig_ExternalNotificationConfig::set_alert_message(bool value) {
  _internal_set_alert_message(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.ExternalNotificationConfig.alert_message)
}
inline bool ModuleConfig_ExternalNotificationConfig::_internal_alert_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alert_message_;
}
inline void ModuleConfig_ExternalNotificationConfig::_internal_set_alert_message(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_message_ = value;
}

// bool alert_message_vibra = 10;
inline void ModuleConfig_ExternalNotificationConfig::clear_alert_message_vibra() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_message_vibra_ = false;
  _impl_._has_bits_[0] &= ~0x00000200U;
}
inline bool ModuleConfig_ExternalNotificationConfig::alert_message_vibra() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.ExternalNotificationConfig.alert_message_vibra)
  return _internal_alert_message_vibra();
}
inline void ModuleConfig_ExternalNotificationConfig::set_alert_message_vibra(bool value) {
  _internal_set_alert_message_vibra(value);
  _impl_._has_bits_[0] |= 0x00000200U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.ExternalNotificationConfig.alert_message_vibra)
}
inline bool ModuleConfig_ExternalNotificationConfig::_internal_alert_message_vibra() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alert_message_vibra_;
}
inline void ModuleConfig_ExternalNotificationConfig::_internal_set_alert_message_vibra(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_message_vibra_ = value;
}

// bool alert_message_buzzer = 11;
inline void ModuleConfig_ExternalNotificationConfig::clear_alert_message_buzzer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_message_buzzer_ = false;
  _impl_._has_bits_[0] &= ~0x00000400U;
}
inline bool ModuleConfig_ExternalNotificationConfig::alert_message_buzzer() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.ExternalNotificationConfig.alert_message_buzzer)
  return _internal_alert_message_buzzer();
}
inline void ModuleConfig_ExternalNotificationConfig::set_alert_message_buzzer(bool value) {
  _internal_set_alert_message_buzzer(value);
  _impl_._has_bits_[0] |= 0x00000400U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.ExternalNotificationConfig.alert_message_buzzer)
}
inline bool ModuleConfig_ExternalNotificationConfig::_internal_alert_message_buzzer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alert_message_buzzer_;
}
inline void ModuleConfig_ExternalNotificationConfig::_internal_set_alert_message_buzzer(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_message_buzzer_ = value;
}

// bool alert_bell = 6;
inline void ModuleConfig_ExternalNotificationConfig::clear_alert_bell() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_bell_ = false;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline bool ModuleConfig_ExternalNotificationConfig::alert_bell() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.ExternalNotificationConfig.alert_bell)
  return _internal_alert_bell();
}
inline void ModuleConfig_ExternalNotificationConfig::set_alert_bell(bool value) {
  _internal_set_alert_bell(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.ExternalNotificationConfig.alert_bell)
}
inline bool ModuleConfig_ExternalNotificationConfig::_internal_alert_bell() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alert_bell_;
}
inline void ModuleConfig_ExternalNotificationConfig::_internal_set_alert_bell(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_bell_ = value;
}

// bool alert_bell_vibra = 12;
inline void ModuleConfig_ExternalNotificationConfig::clear_alert_bell_vibra() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_bell_vibra_ = false;
  _impl_._has_bits_[0] &= ~0x00000800U;
}
inline bool ModuleConfig_ExternalNotificationConfig::alert_bell_vibra() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.ExternalNotificationConfig.alert_bell_vibra)
  return _internal_alert_bell_vibra();
}
inline void ModuleConfig_ExternalNotificationConfig::set_alert_bell_vibra(bool value) {
  _internal_set_alert_bell_vibra(value);
  _impl_._has_bits_[0] |= 0x00000800U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.ExternalNotificationConfig.alert_bell_vibra)
}
inline bool ModuleConfig_ExternalNotificationConfig::_internal_alert_bell_vibra() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alert_bell_vibra_;
}
inline void ModuleConfig_ExternalNotificationConfig::_internal_set_alert_bell_vibra(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_bell_vibra_ = value;
}

// bool alert_bell_buzzer = 13;
inline void ModuleConfig_ExternalNotificationConfig::clear_alert_bell_buzzer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_bell_buzzer_ = false;
  _impl_._has_bits_[0] &= ~0x00002000U;
}
inline bool ModuleConfig_ExternalNotificationConfig::alert_bell_buzzer() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.ExternalNotificationConfig.alert_bell_buzzer)
  return _internal_alert_bell_buzzer();
}
inline void ModuleConfig_ExternalNotificationConfig::set_alert_bell_buzzer(bool value) {
  _internal_set_alert_bell_buzzer(value);
  _impl_._has_bits_[0] |= 0x00002000U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.ExternalNotificationConfig.alert_bell_buzzer)
}
inline bool ModuleConfig_ExternalNotificationConfig::_internal_alert_bell_buzzer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alert_bell_buzzer_;
}
inline void ModuleConfig_ExternalNotificationConfig::_internal_set_alert_bell_buzzer(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_bell_buzzer_ = value;
}

// bool use_pwm = 7;
inline void ModuleConfig_ExternalNotificationConfig::clear_use_pwm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_pwm_ = false;
  _impl_._has_bits_[0] &= ~0x00000100U;
}
inline bool ModuleConfig_ExternalNotificationConfig::use_pwm() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.ExternalNotificationConfig.use_pwm)
  return _internal_use_pwm();
}
inline void ModuleConfig_ExternalNotificationConfig::set_use_pwm(bool value) {
  _internal_set_use_pwm(value);
  _impl_._has_bits_[0] |= 0x00000100U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.ExternalNotificationConfig.use_pwm)
}
inline bool ModuleConfig_ExternalNotificationConfig::_internal_use_pwm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_pwm_;
}
inline void ModuleConfig_ExternalNotificationConfig::_internal_set_use_pwm(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_pwm_ = value;
}

// uint32 nag_timeout = 14;
inline void ModuleConfig_ExternalNotificationConfig::clear_nag_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nag_timeout_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000U;
}
inline ::uint32_t ModuleConfig_ExternalNotificationConfig::nag_timeout() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.ExternalNotificationConfig.nag_timeout)
  return _internal_nag_timeout();
}
inline void ModuleConfig_ExternalNotificationConfig::set_nag_timeout(::uint32_t value) {
  _internal_set_nag_timeout(value);
  _impl_._has_bits_[0] |= 0x00001000U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.ExternalNotificationConfig.nag_timeout)
}
inline ::uint32_t ModuleConfig_ExternalNotificationConfig::_internal_nag_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nag_timeout_;
}
inline void ModuleConfig_ExternalNotificationConfig::_internal_set_nag_timeout(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nag_timeout_ = value;
}

// bool use_i2s_as_buzzer = 15;
inline void ModuleConfig_ExternalNotificationConfig::clear_use_i2s_as_buzzer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_i2s_as_buzzer_ = false;
  _impl_._has_bits_[0] &= ~0x00004000U;
}
inline bool ModuleConfig_ExternalNotificationConfig::use_i2s_as_buzzer() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.ExternalNotificationConfig.use_i2s_as_buzzer)
  return _internal_use_i2s_as_buzzer();
}
inline void ModuleConfig_ExternalNotificationConfig::set_use_i2s_as_buzzer(bool value) {
  _internal_set_use_i2s_as_buzzer(value);
  _impl_._has_bits_[0] |= 0x00004000U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.ExternalNotificationConfig.use_i2s_as_buzzer)
}
inline bool ModuleConfig_ExternalNotificationConfig::_internal_use_i2s_as_buzzer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_i2s_as_buzzer_;
}
inline void ModuleConfig_ExternalNotificationConfig::_internal_set_use_i2s_as_buzzer(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_i2s_as_buzzer_ = value;
}

// -------------------------------------------------------------------

// ModuleConfig_StoreForwardConfig

// bool enabled = 1;
inline void ModuleConfig_StoreForwardConfig::clear_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline bool ModuleConfig_StoreForwardConfig::enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.StoreForwardConfig.enabled)
  return _internal_enabled();
}
inline void ModuleConfig_StoreForwardConfig::set_enabled(bool value) {
  _internal_set_enabled(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.StoreForwardConfig.enabled)
}
inline bool ModuleConfig_StoreForwardConfig::_internal_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enabled_;
}
inline void ModuleConfig_StoreForwardConfig::_internal_set_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = value;
}

// bool heartbeat = 2;
inline void ModuleConfig_StoreForwardConfig::clear_heartbeat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heartbeat_ = false;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline bool ModuleConfig_StoreForwardConfig::heartbeat() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.StoreForwardConfig.heartbeat)
  return _internal_heartbeat();
}
inline void ModuleConfig_StoreForwardConfig::set_heartbeat(bool value) {
  _internal_set_heartbeat(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.StoreForwardConfig.heartbeat)
}
inline bool ModuleConfig_StoreForwardConfig::_internal_heartbeat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.heartbeat_;
}
inline void ModuleConfig_StoreForwardConfig::_internal_set_heartbeat(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heartbeat_ = value;
}

// uint32 records = 3;
inline void ModuleConfig_StoreForwardConfig::clear_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.records_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::uint32_t ModuleConfig_StoreForwardConfig::records() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.StoreForwardConfig.records)
  return _internal_records();
}
inline void ModuleConfig_StoreForwardConfig::set_records(::uint32_t value) {
  _internal_set_records(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.StoreForwardConfig.records)
}
inline ::uint32_t ModuleConfig_StoreForwardConfig::_internal_records() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.records_;
}
inline void ModuleConfig_StoreForwardConfig::_internal_set_records(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.records_ = value;
}

// uint32 history_return_max = 4;
inline void ModuleConfig_StoreForwardConfig::clear_history_return_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.history_return_max_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::uint32_t ModuleConfig_StoreForwardConfig::history_return_max() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.StoreForwardConfig.history_return_max)
  return _internal_history_return_max();
}
inline void ModuleConfig_StoreForwardConfig::set_history_return_max(::uint32_t value) {
  _internal_set_history_return_max(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.StoreForwardConfig.history_return_max)
}
inline ::uint32_t ModuleConfig_StoreForwardConfig::_internal_history_return_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.history_return_max_;
}
inline void ModuleConfig_StoreForwardConfig::_internal_set_history_return_max(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.history_return_max_ = value;
}

// uint32 history_return_window = 5;
inline void ModuleConfig_StoreForwardConfig::clear_history_return_window() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.history_return_window_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline ::uint32_t ModuleConfig_StoreForwardConfig::history_return_window() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.StoreForwardConfig.history_return_window)
  return _internal_history_return_window();
}
inline void ModuleConfig_StoreForwardConfig::set_history_return_window(::uint32_t value) {
  _internal_set_history_return_window(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.StoreForwardConfig.history_return_window)
}
inline ::uint32_t ModuleConfig_StoreForwardConfig::_internal_history_return_window() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.history_return_window_;
}
inline void ModuleConfig_StoreForwardConfig::_internal_set_history_return_window(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.history_return_window_ = value;
}

// bool is_server = 6;
inline void ModuleConfig_StoreForwardConfig::clear_is_server() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_server_ = false;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline bool ModuleConfig_StoreForwardConfig::is_server() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.StoreForwardConfig.is_server)
  return _internal_is_server();
}
inline void ModuleConfig_StoreForwardConfig::set_is_server(bool value) {
  _internal_set_is_server(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.StoreForwardConfig.is_server)
}
inline bool ModuleConfig_StoreForwardConfig::_internal_is_server() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_server_;
}
inline void ModuleConfig_StoreForwardConfig::_internal_set_is_server(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_server_ = value;
}

// -------------------------------------------------------------------

// ModuleConfig_RangeTestConfig

// bool enabled = 1;
inline void ModuleConfig_RangeTestConfig::clear_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline bool ModuleConfig_RangeTestConfig::enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.RangeTestConfig.enabled)
  return _internal_enabled();
}
inline void ModuleConfig_RangeTestConfig::set_enabled(bool value) {
  _internal_set_enabled(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.RangeTestConfig.enabled)
}
inline bool ModuleConfig_RangeTestConfig::_internal_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enabled_;
}
inline void ModuleConfig_RangeTestConfig::_internal_set_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = value;
}

// uint32 sender = 2;
inline void ModuleConfig_RangeTestConfig::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::uint32_t ModuleConfig_RangeTestConfig::sender() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.RangeTestConfig.sender)
  return _internal_sender();
}
inline void ModuleConfig_RangeTestConfig::set_sender(::uint32_t value) {
  _internal_set_sender(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.RangeTestConfig.sender)
}
inline ::uint32_t ModuleConfig_RangeTestConfig::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_;
}
inline void ModuleConfig_RangeTestConfig::_internal_set_sender(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_ = value;
}

// bool save = 3;
inline void ModuleConfig_RangeTestConfig::clear_save() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.save_ = false;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline bool ModuleConfig_RangeTestConfig::save() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.RangeTestConfig.save)
  return _internal_save();
}
inline void ModuleConfig_RangeTestConfig::set_save(bool value) {
  _internal_set_save(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.RangeTestConfig.save)
}
inline bool ModuleConfig_RangeTestConfig::_internal_save() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.save_;
}
inline void ModuleConfig_RangeTestConfig::_internal_set_save(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.save_ = value;
}

// bool clear_on_reboot = 4;
inline void ModuleConfig_RangeTestConfig::clear_clear_on_reboot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clear_on_reboot_ = false;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline bool ModuleConfig_RangeTestConfig::clear_on_reboot() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.RangeTestConfig.clear_on_reboot)
  return _internal_clear_on_reboot();
}
inline void ModuleConfig_RangeTestConfig::set_clear_on_reboot(bool value) {
  _internal_set_clear_on_reboot(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.RangeTestConfig.clear_on_reboot)
}
inline bool ModuleConfig_RangeTestConfig::_internal_clear_on_reboot() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.clear_on_reboot_;
}
inline void ModuleConfig_RangeTestConfig::_internal_set_clear_on_reboot(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clear_on_reboot_ = value;
}

// -------------------------------------------------------------------

// ModuleConfig_TelemetryConfig

// uint32 device_update_interval = 1;
inline void ModuleConfig_TelemetryConfig::clear_device_update_interval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_update_interval_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::uint32_t ModuleConfig_TelemetryConfig::device_update_interval() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.TelemetryConfig.device_update_interval)
  return _internal_device_update_interval();
}
inline void ModuleConfig_TelemetryConfig::set_device_update_interval(::uint32_t value) {
  _internal_set_device_update_interval(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.TelemetryConfig.device_update_interval)
}
inline ::uint32_t ModuleConfig_TelemetryConfig::_internal_device_update_interval() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_update_interval_;
}
inline void ModuleConfig_TelemetryConfig::_internal_set_device_update_interval(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_update_interval_ = value;
}

// uint32 environment_update_interval = 2;
inline void ModuleConfig_TelemetryConfig::clear_environment_update_interval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.environment_update_interval_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint32_t ModuleConfig_TelemetryConfig::environment_update_interval() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.TelemetryConfig.environment_update_interval)
  return _internal_environment_update_interval();
}
inline void ModuleConfig_TelemetryConfig::set_environment_update_interval(::uint32_t value) {
  _internal_set_environment_update_interval(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.TelemetryConfig.environment_update_interval)
}
inline ::uint32_t ModuleConfig_TelemetryConfig::_internal_environment_update_interval() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.environment_update_interval_;
}
inline void ModuleConfig_TelemetryConfig::_internal_set_environment_update_interval(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.environment_update_interval_ = value;
}

// bool environment_measurement_enabled = 3;
inline void ModuleConfig_TelemetryConfig::clear_environment_measurement_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.environment_measurement_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline bool ModuleConfig_TelemetryConfig::environment_measurement_enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.TelemetryConfig.environment_measurement_enabled)
  return _internal_environment_measurement_enabled();
}
inline void ModuleConfig_TelemetryConfig::set_environment_measurement_enabled(bool value) {
  _internal_set_environment_measurement_enabled(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.TelemetryConfig.environment_measurement_enabled)
}
inline bool ModuleConfig_TelemetryConfig::_internal_environment_measurement_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.environment_measurement_enabled_;
}
inline void ModuleConfig_TelemetryConfig::_internal_set_environment_measurement_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.environment_measurement_enabled_ = value;
}

// bool environment_screen_enabled = 4;
inline void ModuleConfig_TelemetryConfig::clear_environment_screen_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.environment_screen_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline bool ModuleConfig_TelemetryConfig::environment_screen_enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.TelemetryConfig.environment_screen_enabled)
  return _internal_environment_screen_enabled();
}
inline void ModuleConfig_TelemetryConfig::set_environment_screen_enabled(bool value) {
  _internal_set_environment_screen_enabled(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.TelemetryConfig.environment_screen_enabled)
}
inline bool ModuleConfig_TelemetryConfig::_internal_environment_screen_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.environment_screen_enabled_;
}
inline void ModuleConfig_TelemetryConfig::_internal_set_environment_screen_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.environment_screen_enabled_ = value;
}

// bool environment_display_fahrenheit = 5;
inline void ModuleConfig_TelemetryConfig::clear_environment_display_fahrenheit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.environment_display_fahrenheit_ = false;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline bool ModuleConfig_TelemetryConfig::environment_display_fahrenheit() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.TelemetryConfig.environment_display_fahrenheit)
  return _internal_environment_display_fahrenheit();
}
inline void ModuleConfig_TelemetryConfig::set_environment_display_fahrenheit(bool value) {
  _internal_set_environment_display_fahrenheit(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.TelemetryConfig.environment_display_fahrenheit)
}
inline bool ModuleConfig_TelemetryConfig::_internal_environment_display_fahrenheit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.environment_display_fahrenheit_;
}
inline void ModuleConfig_TelemetryConfig::_internal_set_environment_display_fahrenheit(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.environment_display_fahrenheit_ = value;
}

// bool air_quality_enabled = 6;
inline void ModuleConfig_TelemetryConfig::clear_air_quality_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.air_quality_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline bool ModuleConfig_TelemetryConfig::air_quality_enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.TelemetryConfig.air_quality_enabled)
  return _internal_air_quality_enabled();
}
inline void ModuleConfig_TelemetryConfig::set_air_quality_enabled(bool value) {
  _internal_set_air_quality_enabled(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.TelemetryConfig.air_quality_enabled)
}
inline bool ModuleConfig_TelemetryConfig::_internal_air_quality_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.air_quality_enabled_;
}
inline void ModuleConfig_TelemetryConfig::_internal_set_air_quality_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.air_quality_enabled_ = value;
}

// uint32 air_quality_interval = 7;
inline void ModuleConfig_TelemetryConfig::clear_air_quality_interval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.air_quality_interval_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline ::uint32_t ModuleConfig_TelemetryConfig::air_quality_interval() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.TelemetryConfig.air_quality_interval)
  return _internal_air_quality_interval();
}
inline void ModuleConfig_TelemetryConfig::set_air_quality_interval(::uint32_t value) {
  _internal_set_air_quality_interval(value);
  _impl_._has_bits_[0] |= 0x00000040U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.TelemetryConfig.air_quality_interval)
}
inline ::uint32_t ModuleConfig_TelemetryConfig::_internal_air_quality_interval() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.air_quality_interval_;
}
inline void ModuleConfig_TelemetryConfig::_internal_set_air_quality_interval(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.air_quality_interval_ = value;
}

// bool power_measurement_enabled = 8;
inline void ModuleConfig_TelemetryConfig::clear_power_measurement_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.power_measurement_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000100U;
}
inline bool ModuleConfig_TelemetryConfig::power_measurement_enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.TelemetryConfig.power_measurement_enabled)
  return _internal_power_measurement_enabled();
}
inline void ModuleConfig_TelemetryConfig::set_power_measurement_enabled(bool value) {
  _internal_set_power_measurement_enabled(value);
  _impl_._has_bits_[0] |= 0x00000100U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.TelemetryConfig.power_measurement_enabled)
}
inline bool ModuleConfig_TelemetryConfig::_internal_power_measurement_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.power_measurement_enabled_;
}
inline void ModuleConfig_TelemetryConfig::_internal_set_power_measurement_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.power_measurement_enabled_ = value;
}

// uint32 power_update_interval = 9;
inline void ModuleConfig_TelemetryConfig::clear_power_update_interval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.power_update_interval_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080U;
}
inline ::uint32_t ModuleConfig_TelemetryConfig::power_update_interval() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.TelemetryConfig.power_update_interval)
  return _internal_power_update_interval();
}
inline void ModuleConfig_TelemetryConfig::set_power_update_interval(::uint32_t value) {
  _internal_set_power_update_interval(value);
  _impl_._has_bits_[0] |= 0x00000080U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.TelemetryConfig.power_update_interval)
}
inline ::uint32_t ModuleConfig_TelemetryConfig::_internal_power_update_interval() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.power_update_interval_;
}
inline void ModuleConfig_TelemetryConfig::_internal_set_power_update_interval(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.power_update_interval_ = value;
}

// bool power_screen_enabled = 10;
inline void ModuleConfig_TelemetryConfig::clear_power_screen_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.power_screen_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000200U;
}
inline bool ModuleConfig_TelemetryConfig::power_screen_enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.TelemetryConfig.power_screen_enabled)
  return _internal_power_screen_enabled();
}
inline void ModuleConfig_TelemetryConfig::set_power_screen_enabled(bool value) {
  _internal_set_power_screen_enabled(value);
  _impl_._has_bits_[0] |= 0x00000200U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.TelemetryConfig.power_screen_enabled)
}
inline bool ModuleConfig_TelemetryConfig::_internal_power_screen_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.power_screen_enabled_;
}
inline void ModuleConfig_TelemetryConfig::_internal_set_power_screen_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.power_screen_enabled_ = value;
}

// bool health_measurement_enabled = 11;
inline void ModuleConfig_TelemetryConfig::clear_health_measurement_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_measurement_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000400U;
}
inline bool ModuleConfig_TelemetryConfig::health_measurement_enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.TelemetryConfig.health_measurement_enabled)
  return _internal_health_measurement_enabled();
}
inline void ModuleConfig_TelemetryConfig::set_health_measurement_enabled(bool value) {
  _internal_set_health_measurement_enabled(value);
  _impl_._has_bits_[0] |= 0x00000400U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.TelemetryConfig.health_measurement_enabled)
}
inline bool ModuleConfig_TelemetryConfig::_internal_health_measurement_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.health_measurement_enabled_;
}
inline void ModuleConfig_TelemetryConfig::_internal_set_health_measurement_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_measurement_enabled_ = value;
}

// uint32 health_update_interval = 12;
inline void ModuleConfig_TelemetryConfig::clear_health_update_interval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_update_interval_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000U;
}
inline ::uint32_t ModuleConfig_TelemetryConfig::health_update_interval() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.TelemetryConfig.health_update_interval)
  return _internal_health_update_interval();
}
inline void ModuleConfig_TelemetryConfig::set_health_update_interval(::uint32_t value) {
  _internal_set_health_update_interval(value);
  _impl_._has_bits_[0] |= 0x00001000U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.TelemetryConfig.health_update_interval)
}
inline ::uint32_t ModuleConfig_TelemetryConfig::_internal_health_update_interval() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.health_update_interval_;
}
inline void ModuleConfig_TelemetryConfig::_internal_set_health_update_interval(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_update_interval_ = value;
}

// bool health_screen_enabled = 13;
inline void ModuleConfig_TelemetryConfig::clear_health_screen_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_screen_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000800U;
}
inline bool ModuleConfig_TelemetryConfig::health_screen_enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.TelemetryConfig.health_screen_enabled)
  return _internal_health_screen_enabled();
}
inline void ModuleConfig_TelemetryConfig::set_health_screen_enabled(bool value) {
  _internal_set_health_screen_enabled(value);
  _impl_._has_bits_[0] |= 0x00000800U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.TelemetryConfig.health_screen_enabled)
}
inline bool ModuleConfig_TelemetryConfig::_internal_health_screen_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.health_screen_enabled_;
}
inline void ModuleConfig_TelemetryConfig::_internal_set_health_screen_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_screen_enabled_ = value;
}

// -------------------------------------------------------------------

// ModuleConfig_CannedMessageConfig

// bool rotary1_enabled = 1;
inline void ModuleConfig_CannedMessageConfig::clear_rotary1_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rotary1_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000080U;
}
inline bool ModuleConfig_CannedMessageConfig::rotary1_enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.CannedMessageConfig.rotary1_enabled)
  return _internal_rotary1_enabled();
}
inline void ModuleConfig_CannedMessageConfig::set_rotary1_enabled(bool value) {
  _internal_set_rotary1_enabled(value);
  _impl_._has_bits_[0] |= 0x00000080U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.CannedMessageConfig.rotary1_enabled)
}
inline bool ModuleConfig_CannedMessageConfig::_internal_rotary1_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rotary1_enabled_;
}
inline void ModuleConfig_CannedMessageConfig::_internal_set_rotary1_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rotary1_enabled_ = value;
}

// uint32 inputbroker_pin_a = 2;
inline void ModuleConfig_CannedMessageConfig::clear_inputbroker_pin_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inputbroker_pin_a_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint32_t ModuleConfig_CannedMessageConfig::inputbroker_pin_a() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.CannedMessageConfig.inputbroker_pin_a)
  return _internal_inputbroker_pin_a();
}
inline void ModuleConfig_CannedMessageConfig::set_inputbroker_pin_a(::uint32_t value) {
  _internal_set_inputbroker_pin_a(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.CannedMessageConfig.inputbroker_pin_a)
}
inline ::uint32_t ModuleConfig_CannedMessageConfig::_internal_inputbroker_pin_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inputbroker_pin_a_;
}
inline void ModuleConfig_CannedMessageConfig::_internal_set_inputbroker_pin_a(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inputbroker_pin_a_ = value;
}

// uint32 inputbroker_pin_b = 3;
inline void ModuleConfig_CannedMessageConfig::clear_inputbroker_pin_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inputbroker_pin_b_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint32_t ModuleConfig_CannedMessageConfig::inputbroker_pin_b() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.CannedMessageConfig.inputbroker_pin_b)
  return _internal_inputbroker_pin_b();
}
inline void ModuleConfig_CannedMessageConfig::set_inputbroker_pin_b(::uint32_t value) {
  _internal_set_inputbroker_pin_b(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.CannedMessageConfig.inputbroker_pin_b)
}
inline ::uint32_t ModuleConfig_CannedMessageConfig::_internal_inputbroker_pin_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inputbroker_pin_b_;
}
inline void ModuleConfig_CannedMessageConfig::_internal_set_inputbroker_pin_b(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inputbroker_pin_b_ = value;
}

// uint32 inputbroker_pin_press = 4;
inline void ModuleConfig_CannedMessageConfig::clear_inputbroker_pin_press() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inputbroker_pin_press_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint32_t ModuleConfig_CannedMessageConfig::inputbroker_pin_press() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.CannedMessageConfig.inputbroker_pin_press)
  return _internal_inputbroker_pin_press();
}
inline void ModuleConfig_CannedMessageConfig::set_inputbroker_pin_press(::uint32_t value) {
  _internal_set_inputbroker_pin_press(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.CannedMessageConfig.inputbroker_pin_press)
}
inline ::uint32_t ModuleConfig_CannedMessageConfig::_internal_inputbroker_pin_press() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inputbroker_pin_press_;
}
inline void ModuleConfig_CannedMessageConfig::_internal_set_inputbroker_pin_press(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inputbroker_pin_press_ = value;
}

// .meshtastic.ModuleConfig.CannedMessageConfig.InputEventChar inputbroker_event_cw = 5;
inline void ModuleConfig_CannedMessageConfig::clear_inputbroker_event_cw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inputbroker_event_cw_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar ModuleConfig_CannedMessageConfig::inputbroker_event_cw() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.CannedMessageConfig.inputbroker_event_cw)
  return _internal_inputbroker_event_cw();
}
inline void ModuleConfig_CannedMessageConfig::set_inputbroker_event_cw(::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar value) {
  _internal_set_inputbroker_event_cw(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.CannedMessageConfig.inputbroker_event_cw)
}
inline ::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar ModuleConfig_CannedMessageConfig::_internal_inputbroker_event_cw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar>(_impl_.inputbroker_event_cw_);
}
inline void ModuleConfig_CannedMessageConfig::_internal_set_inputbroker_event_cw(::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inputbroker_event_cw_ = value;
}

// .meshtastic.ModuleConfig.CannedMessageConfig.InputEventChar inputbroker_event_ccw = 6;
inline void ModuleConfig_CannedMessageConfig::clear_inputbroker_event_ccw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inputbroker_event_ccw_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline ::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar ModuleConfig_CannedMessageConfig::inputbroker_event_ccw() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.CannedMessageConfig.inputbroker_event_ccw)
  return _internal_inputbroker_event_ccw();
}
inline void ModuleConfig_CannedMessageConfig::set_inputbroker_event_ccw(::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar value) {
  _internal_set_inputbroker_event_ccw(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.CannedMessageConfig.inputbroker_event_ccw)
}
inline ::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar ModuleConfig_CannedMessageConfig::_internal_inputbroker_event_ccw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar>(_impl_.inputbroker_event_ccw_);
}
inline void ModuleConfig_CannedMessageConfig::_internal_set_inputbroker_event_ccw(::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inputbroker_event_ccw_ = value;
}

// .meshtastic.ModuleConfig.CannedMessageConfig.InputEventChar inputbroker_event_press = 7;
inline void ModuleConfig_CannedMessageConfig::clear_inputbroker_event_press() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inputbroker_event_press_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline ::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar ModuleConfig_CannedMessageConfig::inputbroker_event_press() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.CannedMessageConfig.inputbroker_event_press)
  return _internal_inputbroker_event_press();
}
inline void ModuleConfig_CannedMessageConfig::set_inputbroker_event_press(::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar value) {
  _internal_set_inputbroker_event_press(value);
  _impl_._has_bits_[0] |= 0x00000040U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.CannedMessageConfig.inputbroker_event_press)
}
inline ::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar ModuleConfig_CannedMessageConfig::_internal_inputbroker_event_press() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar>(_impl_.inputbroker_event_press_);
}
inline void ModuleConfig_CannedMessageConfig::_internal_set_inputbroker_event_press(::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inputbroker_event_press_ = value;
}

// bool updown1_enabled = 8;
inline void ModuleConfig_CannedMessageConfig::clear_updown1_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updown1_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000100U;
}
inline bool ModuleConfig_CannedMessageConfig::updown1_enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.CannedMessageConfig.updown1_enabled)
  return _internal_updown1_enabled();
}
inline void ModuleConfig_CannedMessageConfig::set_updown1_enabled(bool value) {
  _internal_set_updown1_enabled(value);
  _impl_._has_bits_[0] |= 0x00000100U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.CannedMessageConfig.updown1_enabled)
}
inline bool ModuleConfig_CannedMessageConfig::_internal_updown1_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updown1_enabled_;
}
inline void ModuleConfig_CannedMessageConfig::_internal_set_updown1_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updown1_enabled_ = value;
}

// bool enabled = 9 [deprecated = true];
inline void ModuleConfig_CannedMessageConfig::clear_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000200U;
}
inline bool ModuleConfig_CannedMessageConfig::enabled() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.CannedMessageConfig.enabled)
  return _internal_enabled();
}
inline void ModuleConfig_CannedMessageConfig::set_enabled(bool value) {
  _internal_set_enabled(value);
  _impl_._has_bits_[0] |= 0x00000200U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.CannedMessageConfig.enabled)
}
inline bool ModuleConfig_CannedMessageConfig::_internal_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enabled_;
}
inline void ModuleConfig_CannedMessageConfig::_internal_set_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = value;
}

// string allow_input_source = 10 [deprecated = true];
inline void ModuleConfig_CannedMessageConfig::clear_allow_input_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allow_input_source_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ModuleConfig_CannedMessageConfig::allow_input_source() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.CannedMessageConfig.allow_input_source)
  return _internal_allow_input_source();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ModuleConfig_CannedMessageConfig::set_allow_input_source(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.allow_input_source_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.CannedMessageConfig.allow_input_source)
}
inline ::std::string* PROTOBUF_NONNULL ModuleConfig_CannedMessageConfig::mutable_allow_input_source()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_allow_input_source();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.CannedMessageConfig.allow_input_source)
  return _s;
}
inline const ::std::string& ModuleConfig_CannedMessageConfig::_internal_allow_input_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allow_input_source_.Get();
}
inline void ModuleConfig_CannedMessageConfig::_internal_set_allow_input_source(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.allow_input_source_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ModuleConfig_CannedMessageConfig::_internal_mutable_allow_input_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.allow_input_source_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ModuleConfig_CannedMessageConfig::release_allow_input_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.CannedMessageConfig.allow_input_source)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.allow_input_source_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.allow_input_source_.Set("", GetArena());
  }
  return released;
}
inline void ModuleConfig_CannedMessageConfig::set_allocated_allow_input_source(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.allow_input_source_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.allow_input_source_.IsDefault()) {
    _impl_.allow_input_source_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ModuleConfig.CannedMessageConfig.allow_input_source)
}

// bool send_bell = 11;
inline void ModuleConfig_CannedMessageConfig::clear_send_bell() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.send_bell_ = false;
  _impl_._has_bits_[0] &= ~0x00000400U;
}
inline bool ModuleConfig_CannedMessageConfig::send_bell() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.CannedMessageConfig.send_bell)
  return _internal_send_bell();
}
inline void ModuleConfig_CannedMessageConfig::set_send_bell(bool value) {
  _internal_set_send_bell(value);
  _impl_._has_bits_[0] |= 0x00000400U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.CannedMessageConfig.send_bell)
}
inline bool ModuleConfig_CannedMessageConfig::_internal_send_bell() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.send_bell_;
}
inline void ModuleConfig_CannedMessageConfig::_internal_set_send_bell(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.send_bell_ = value;
}

// -------------------------------------------------------------------

// ModuleConfig_AmbientLightingConfig

// bool led_state = 1;
inline void ModuleConfig_AmbientLightingConfig::clear_led_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.led_state_ = false;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline bool ModuleConfig_AmbientLightingConfig::led_state() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.AmbientLightingConfig.led_state)
  return _internal_led_state();
}
inline void ModuleConfig_AmbientLightingConfig::set_led_state(bool value) {
  _internal_set_led_state(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.AmbientLightingConfig.led_state)
}
inline bool ModuleConfig_AmbientLightingConfig::_internal_led_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.led_state_;
}
inline void ModuleConfig_AmbientLightingConfig::_internal_set_led_state(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.led_state_ = value;
}

// uint32 current = 2;
inline void ModuleConfig_AmbientLightingConfig::clear_current() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint32_t ModuleConfig_AmbientLightingConfig::current() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.AmbientLightingConfig.current)
  return _internal_current();
}
inline void ModuleConfig_AmbientLightingConfig::set_current(::uint32_t value) {
  _internal_set_current(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.AmbientLightingConfig.current)
}
inline ::uint32_t ModuleConfig_AmbientLightingConfig::_internal_current() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_;
}
inline void ModuleConfig_AmbientLightingConfig::_internal_set_current(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_ = value;
}

// uint32 red = 3;
inline void ModuleConfig_AmbientLightingConfig::clear_red() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.red_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint32_t ModuleConfig_AmbientLightingConfig::red() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.AmbientLightingConfig.red)
  return _internal_red();
}
inline void ModuleConfig_AmbientLightingConfig::set_red(::uint32_t value) {
  _internal_set_red(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.AmbientLightingConfig.red)
}
inline ::uint32_t ModuleConfig_AmbientLightingConfig::_internal_red() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.red_;
}
inline void ModuleConfig_AmbientLightingConfig::_internal_set_red(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.red_ = value;
}

// uint32 green = 4;
inline void ModuleConfig_AmbientLightingConfig::clear_green() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.green_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint32_t ModuleConfig_AmbientLightingConfig::green() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.AmbientLightingConfig.green)
  return _internal_green();
}
inline void ModuleConfig_AmbientLightingConfig::set_green(::uint32_t value) {
  _internal_set_green(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.AmbientLightingConfig.green)
}
inline ::uint32_t ModuleConfig_AmbientLightingConfig::_internal_green() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.green_;
}
inline void ModuleConfig_AmbientLightingConfig::_internal_set_green(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.green_ = value;
}

// uint32 blue = 5;
inline void ModuleConfig_AmbientLightingConfig::clear_blue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blue_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::uint32_t ModuleConfig_AmbientLightingConfig::blue() const {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.AmbientLightingConfig.blue)
  return _internal_blue();
}
inline void ModuleConfig_AmbientLightingConfig::set_blue(::uint32_t value) {
  _internal_set_blue(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:meshtastic.ModuleConfig.AmbientLightingConfig.blue)
}
inline ::uint32_t ModuleConfig_AmbientLightingConfig::_internal_blue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.blue_;
}
inline void ModuleConfig_AmbientLightingConfig::_internal_set_blue(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blue_ = value;
}

// -------------------------------------------------------------------

// ModuleConfig

// .meshtastic.ModuleConfig.MQTTConfig mqtt = 1;
inline bool ModuleConfig::has_mqtt() const {
  return payload_variant_case() == kMqtt;
}
inline bool ModuleConfig::_internal_has_mqtt() const {
  return payload_variant_case() == kMqtt;
}
inline void ModuleConfig::set_has_mqtt() {
  _impl_._oneof_case_[0] = kMqtt;
}
inline void ModuleConfig::clear_mqtt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kMqtt) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.mqtt_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.mqtt_);
    }
    clear_has_payload_variant();
  }
}
inline ::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NULLABLE ModuleConfig::release_mqtt() {
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.mqtt)
  if (payload_variant_case() == kMqtt) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_MQTTConfig*>(_impl_.payload_variant_.mqtt_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_variant_.mqtt_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::meshtastic::ModuleConfig_MQTTConfig& ModuleConfig::_internal_mqtt() const {
  return payload_variant_case() == kMqtt ? *reinterpret_cast<::meshtastic::ModuleConfig_MQTTConfig*>(_impl_.payload_variant_.mqtt_) : reinterpret_cast<::meshtastic::ModuleConfig_MQTTConfig&>(::meshtastic::_ModuleConfig_MQTTConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_MQTTConfig& ModuleConfig::mqtt() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.mqtt)
  return _internal_mqtt();
}
inline ::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NULLABLE ModuleConfig::unsafe_arena_release_mqtt() {
  // @@protoc_insertion_point(field_unsafe_arena_release:meshtastic.ModuleConfig.mqtt)
  if (payload_variant_case() == kMqtt) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_MQTTConfig*>(_impl_.payload_variant_.mqtt_);
    _impl_.payload_variant_.mqtt_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ModuleConfig::unsafe_arena_set_allocated_mqtt(
    ::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload_variant();
  if (value) {
    set_has_mqtt();
    _impl_.payload_variant_.mqtt_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.ModuleConfig.mqtt)
}
inline ::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NONNULL ModuleConfig::_internal_mutable_mqtt() {
  if (payload_variant_case() != kMqtt) {
    clear_payload_variant();
    set_has_mqtt();
    _impl_.payload_variant_.mqtt_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_MQTTConfig>(GetArena()));
  }
  return reinterpret_cast<::meshtastic::ModuleConfig_MQTTConfig*>(_impl_.payload_variant_.mqtt_);
}
inline ::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NONNULL ModuleConfig::mutable_mqtt()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::meshtastic::ModuleConfig_MQTTConfig* _msg = _internal_mutable_mqtt();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.mqtt)
  return _msg;
}

// .meshtastic.ModuleConfig.SerialConfig serial = 2;
inline bool ModuleConfig::has_serial() const {
  return payload_variant_case() == kSerial;
}
inline bool ModuleConfig::_internal_has_serial() const {
  return payload_variant_case() == kSerial;
}
inline void ModuleConfig::set_has_serial() {
  _impl_._oneof_case_[0] = kSerial;
}
inline void ModuleConfig::clear_serial() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kSerial) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.serial_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.serial_);
    }
    clear_has_payload_variant();
  }
}
inline ::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NULLABLE ModuleConfig::release_serial() {
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.serial)
  if (payload_variant_case() == kSerial) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_SerialConfig*>(_impl_.payload_variant_.serial_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_variant_.serial_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::meshtastic::ModuleConfig_SerialConfig& ModuleConfig::_internal_serial() const {
  return payload_variant_case() == kSerial ? *reinterpret_cast<::meshtastic::ModuleConfig_SerialConfig*>(_impl_.payload_variant_.serial_) : reinterpret_cast<::meshtastic::ModuleConfig_SerialConfig&>(::meshtastic::_ModuleConfig_SerialConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_SerialConfig& ModuleConfig::serial() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.serial)
  return _internal_serial();
}
inline ::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NULLABLE ModuleConfig::unsafe_arena_release_serial() {
  // @@protoc_insertion_point(field_unsafe_arena_release:meshtastic.ModuleConfig.serial)
  if (payload_variant_case() == kSerial) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_SerialConfig*>(_impl_.payload_variant_.serial_);
    _impl_.payload_variant_.serial_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ModuleConfig::unsafe_arena_set_allocated_serial(
    ::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload_variant();
  if (value) {
    set_has_serial();
    _impl_.payload_variant_.serial_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.ModuleConfig.serial)
}
inline ::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NONNULL ModuleConfig::_internal_mutable_serial() {
  if (payload_variant_case() != kSerial) {
    clear_payload_variant();
    set_has_serial();
    _impl_.payload_variant_.serial_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_SerialConfig>(GetArena()));
  }
  return reinterpret_cast<::meshtastic::ModuleConfig_SerialConfig*>(_impl_.payload_variant_.serial_);
}
inline ::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NONNULL ModuleConfig::mutable_serial()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::meshtastic::ModuleConfig_SerialConfig* _msg = _internal_mutable_serial();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.serial)
  return _msg;
}

// .meshtastic.ModuleConfig.ExternalNotificationConfig external_notification = 3;
inline bool ModuleConfig::has_external_notification() const {
  return payload_variant_case() == kExternalNotification;
}
inline bool ModuleConfig::_internal_has_external_notification() const {
  return payload_variant_case() == kExternalNotification;
}
inline void ModuleConfig::set_has_external_notification() {
  _impl_._oneof_case_[0] = kExternalNotification;
}
inline void ModuleConfig::clear_external_notification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kExternalNotification) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.external_notification_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.external_notification_);
    }
    clear_has_payload_variant();
  }
}
inline ::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NULLABLE ModuleConfig::release_external_notification() {
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.external_notification)
  if (payload_variant_case() == kExternalNotification) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_ExternalNotificationConfig*>(_impl_.payload_variant_.external_notification_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_variant_.external_notification_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::meshtastic::ModuleConfig_ExternalNotificationConfig& ModuleConfig::_internal_external_notification() const {
  return payload_variant_case() == kExternalNotification ? *reinterpret_cast<::meshtastic::ModuleConfig_ExternalNotificationConfig*>(_impl_.payload_variant_.external_notification_) : reinterpret_cast<::meshtastic::ModuleConfig_ExternalNotificationConfig&>(::meshtastic::_ModuleConfig_ExternalNotificationConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_ExternalNotificationConfig& ModuleConfig::external_notification() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.external_notification)
  return _internal_external_notification();
}
inline ::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NULLABLE ModuleConfig::unsafe_arena_release_external_notification() {
  // @@protoc_insertion_point(field_unsafe_arena_release:meshtastic.ModuleConfig.external_notification)
  if (payload_variant_case() == kExternalNotification) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_ExternalNotificationConfig*>(_impl_.payload_variant_.external_notification_);
    _impl_.payload_variant_.external_notification_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ModuleConfig::unsafe_arena_set_allocated_external_notification(
    ::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload_variant();
  if (value) {
    set_has_external_notification();
    _impl_.payload_variant_.external_notification_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.ModuleConfig.external_notification)
}
inline ::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NONNULL ModuleConfig::_internal_mutable_external_notification() {
  if (payload_variant_case() != kExternalNotification) {
    clear_payload_variant();
    set_has_external_notification();
    _impl_.payload_variant_.external_notification_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_ExternalNotificationConfig>(GetArena()));
  }
  return reinterpret_cast<::meshtastic::ModuleConfig_ExternalNotificationConfig*>(_impl_.payload_variant_.external_notification_);
}
inline ::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NONNULL ModuleConfig::mutable_external_notification()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::meshtastic::ModuleConfig_ExternalNotificationConfig* _msg = _internal_mutable_external_notification();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.external_notification)
  return _msg;
}

// .meshtastic.ModuleConfig.StoreForwardConfig store_forward = 4;
inline bool ModuleConfig::has_store_forward() const {
  return payload_variant_case() == kStoreForward;
}
inline bool ModuleConfig::_internal_has_store_forward() const {
  return payload_variant_case() == kStoreForward;
}
inline void ModuleConfig::set_has_store_forward() {
  _impl_._oneof_case_[0] = kStoreForward;
}
inline void ModuleConfig::clear_store_forward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kStoreForward) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.store_forward_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.store_forward_);
    }
    clear_has_payload_variant();
  }
}
inline ::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NULLABLE ModuleConfig::release_store_forward() {
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.store_forward)
  if (payload_variant_case() == kStoreForward) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_StoreForwardConfig*>(_impl_.payload_variant_.store_forward_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_variant_.store_forward_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::meshtastic::ModuleConfig_StoreForwardConfig& ModuleConfig::_internal_store_forward() const {
  return payload_variant_case() == kStoreForward ? *reinterpret_cast<::meshtastic::ModuleConfig_StoreForwardConfig*>(_impl_.payload_variant_.store_forward_) : reinterpret_cast<::meshtastic::ModuleConfig_StoreForwardConfig&>(::meshtastic::_ModuleConfig_StoreForwardConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_StoreForwardConfig& ModuleConfig::store_forward() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.store_forward)
  return _internal_store_forward();
}
inline ::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NULLABLE ModuleConfig::unsafe_arena_release_store_forward() {
  // @@protoc_insertion_point(field_unsafe_arena_release:meshtastic.ModuleConfig.store_forward)
  if (payload_variant_case() == kStoreForward) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_StoreForwardConfig*>(_impl_.payload_variant_.store_forward_);
    _impl_.payload_variant_.store_forward_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ModuleConfig::unsafe_arena_set_allocated_store_forward(
    ::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload_variant();
  if (value) {
    set_has_store_forward();
    _impl_.payload_variant_.store_forward_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.ModuleConfig.store_forward)
}
inline ::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NONNULL ModuleConfig::_internal_mutable_store_forward() {
  if (payload_variant_case() != kStoreForward) {
    clear_payload_variant();
    set_has_store_forward();
    _impl_.payload_variant_.store_forward_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_StoreForwardConfig>(GetArena()));
  }
  return reinterpret_cast<::meshtastic::ModuleConfig_StoreForwardConfig*>(_impl_.payload_variant_.store_forward_);
}
inline ::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NONNULL ModuleConfig::mutable_store_forward()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::meshtastic::ModuleConfig_StoreForwardConfig* _msg = _internal_mutable_store_forward();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.store_forward)
  return _msg;
}

// .meshtastic.ModuleConfig.RangeTestConfig range_test = 5;
inline bool ModuleConfig::has_range_test() const {
  return payload_variant_case() == kRangeTest;
}
inline bool ModuleConfig::_internal_has_range_test() const {
  return payload_variant_case() == kRangeTest;
}
inline void ModuleConfig::set_has_range_test() {
  _impl_._oneof_case_[0] = kRangeTest;
}
inline void ModuleConfig::clear_range_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kRangeTest) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.range_test_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.range_test_);
    }
    clear_has_payload_variant();
  }
}
inline ::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NULLABLE ModuleConfig::release_range_test() {
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.range_test)
  if (payload_variant_case() == kRangeTest) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_RangeTestConfig*>(_impl_.payload_variant_.range_test_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_variant_.range_test_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::meshtastic::ModuleConfig_RangeTestConfig& ModuleConfig::_internal_range_test() const {
  return payload_variant_case() == kRangeTest ? *reinterpret_cast<::meshtastic::ModuleConfig_RangeTestConfig*>(_impl_.payload_variant_.range_test_) : reinterpret_cast<::meshtastic::ModuleConfig_RangeTestConfig&>(::meshtastic::_ModuleConfig_RangeTestConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_RangeTestConfig& ModuleConfig::range_test() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.range_test)
  return _internal_range_test();
}
inline ::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NULLABLE ModuleConfig::unsafe_arena_release_range_test() {
  // @@protoc_insertion_point(field_unsafe_arena_release:meshtastic.ModuleConfig.range_test)
  if (payload_variant_case() == kRangeTest) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_RangeTestConfig*>(_impl_.payload_variant_.range_test_);
    _impl_.payload_variant_.range_test_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ModuleConfig::unsafe_arena_set_allocated_range_test(
    ::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload_variant();
  if (value) {
    set_has_range_test();
    _impl_.payload_variant_.range_test_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.ModuleConfig.range_test)
}
inline ::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NONNULL ModuleConfig::_internal_mutable_range_test() {
  if (payload_variant_case() != kRangeTest) {
    clear_payload_variant();
    set_has_range_test();
    _impl_.payload_variant_.range_test_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_RangeTestConfig>(GetArena()));
  }
  return reinterpret_cast<::meshtastic::ModuleConfig_RangeTestConfig*>(_impl_.payload_variant_.range_test_);
}
inline ::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NONNULL ModuleConfig::mutable_range_test()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::meshtastic::ModuleConfig_RangeTestConfig* _msg = _internal_mutable_range_test();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.range_test)
  return _msg;
}

// .meshtastic.ModuleConfig.TelemetryConfig telemetry = 6;
inline bool ModuleConfig::has_telemetry() const {
  return payload_variant_case() == kTelemetry;
}
inline bool ModuleConfig::_internal_has_telemetry() const {
  return payload_variant_case() == kTelemetry;
}
inline void ModuleConfig::set_has_telemetry() {
  _impl_._oneof_case_[0] = kTelemetry;
}
inline void ModuleConfig::clear_telemetry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kTelemetry) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.telemetry_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.telemetry_);
    }
    clear_has_payload_variant();
  }
}
inline ::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NULLABLE ModuleConfig::release_telemetry() {
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.telemetry)
  if (payload_variant_case() == kTelemetry) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_TelemetryConfig*>(_impl_.payload_variant_.telemetry_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_variant_.telemetry_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::meshtastic::ModuleConfig_TelemetryConfig& ModuleConfig::_internal_telemetry() const {
  return payload_variant_case() == kTelemetry ? *reinterpret_cast<::meshtastic::ModuleConfig_TelemetryConfig*>(_impl_.payload_variant_.telemetry_) : reinterpret_cast<::meshtastic::ModuleConfig_TelemetryConfig&>(::meshtastic::_ModuleConfig_TelemetryConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_TelemetryConfig& ModuleConfig::telemetry() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.telemetry)
  return _internal_telemetry();
}
inline ::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NULLABLE ModuleConfig::unsafe_arena_release_telemetry() {
  // @@protoc_insertion_point(field_unsafe_arena_release:meshtastic.ModuleConfig.telemetry)
  if (payload_variant_case() == kTelemetry) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_TelemetryConfig*>(_impl_.payload_variant_.telemetry_);
    _impl_.payload_variant_.telemetry_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ModuleConfig::unsafe_arena_set_allocated_telemetry(
    ::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload_variant();
  if (value) {
    set_has_telemetry();
    _impl_.payload_variant_.telemetry_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.ModuleConfig.telemetry)
}
inline ::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NONNULL ModuleConfig::_internal_mutable_telemetry() {
  if (payload_variant_case() != kTelemetry) {
    clear_payload_variant();
    set_has_telemetry();
    _impl_.payload_variant_.telemetry_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_TelemetryConfig>(GetArena()));
  }
  return reinterpret_cast<::meshtastic::ModuleConfig_TelemetryConfig*>(_impl_.payload_variant_.telemetry_);
}
inline ::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NONNULL ModuleConfig::mutable_telemetry()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::meshtastic::ModuleConfig_TelemetryConfig* _msg = _internal_mutable_telemetry();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.telemetry)
  return _msg;
}

// .meshtastic.ModuleConfig.CannedMessageConfig canned_message = 7;
inline bool ModuleConfig::has_canned_message() const {
  return payload_variant_case() == kCannedMessage;
}
inline bool ModuleConfig::_internal_has_canned_message() const {
  return payload_variant_case() == kCannedMessage;
}
inline void ModuleConfig::set_has_canned_message() {
  _impl_._oneof_case_[0] = kCannedMessage;
}
inline void ModuleConfig::clear_canned_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kCannedMessage) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.canned_message_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.canned_message_);
    }
    clear_has_payload_variant();
  }
}
inline ::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NULLABLE ModuleConfig::release_canned_message() {
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.canned_message)
  if (payload_variant_case() == kCannedMessage) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_CannedMessageConfig*>(_impl_.payload_variant_.canned_message_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_variant_.canned_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::meshtastic::ModuleConfig_CannedMessageConfig& ModuleConfig::_internal_canned_message() const {
  return payload_variant_case() == kCannedMessage ? *reinterpret_cast<::meshtastic::ModuleConfig_CannedMessageConfig*>(_impl_.payload_variant_.canned_message_) : reinterpret_cast<::meshtastic::ModuleConfig_CannedMessageConfig&>(::meshtastic::_ModuleConfig_CannedMessageConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_CannedMessageConfig& ModuleConfig::canned_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.canned_message)
  return _internal_canned_message();
}
inline ::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NULLABLE ModuleConfig::unsafe_arena_release_canned_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:meshtastic.ModuleConfig.canned_message)
  if (payload_variant_case() == kCannedMessage) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_CannedMessageConfig*>(_impl_.payload_variant_.canned_message_);
    _impl_.payload_variant_.canned_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ModuleConfig::unsafe_arena_set_allocated_canned_message(
    ::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload_variant();
  if (value) {
    set_has_canned_message();
    _impl_.payload_variant_.canned_message_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.ModuleConfig.canned_message)
}
inline ::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NONNULL ModuleConfig::_internal_mutable_canned_message() {
  if (payload_variant_case() != kCannedMessage) {
    clear_payload_variant();
    set_has_canned_message();
    _impl_.payload_variant_.canned_message_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_CannedMessageConfig>(GetArena()));
  }
  return reinterpret_cast<::meshtastic::ModuleConfig_CannedMessageConfig*>(_impl_.payload_variant_.canned_message_);
}
inline ::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NONNULL ModuleConfig::mutable_canned_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::meshtastic::ModuleConfig_CannedMessageConfig* _msg = _internal_mutable_canned_message();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.canned_message)
  return _msg;
}

// .meshtastic.ModuleConfig.AudioConfig audio = 8;
inline bool ModuleConfig::has_audio() const {
  return payload_variant_case() == kAudio;
}
inline bool ModuleConfig::_internal_has_audio() const {
  return payload_variant_case() == kAudio;
}
inline void ModuleConfig::set_has_audio() {
  _impl_._oneof_case_[0] = kAudio;
}
inline void ModuleConfig::clear_audio() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kAudio) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.audio_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.audio_);
    }
    clear_has_payload_variant();
  }
}
inline ::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NULLABLE ModuleConfig::release_audio() {
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.audio)
  if (payload_variant_case() == kAudio) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_AudioConfig*>(_impl_.payload_variant_.audio_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_variant_.audio_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::meshtastic::ModuleConfig_AudioConfig& ModuleConfig::_internal_audio() const {
  return payload_variant_case() == kAudio ? *reinterpret_cast<::meshtastic::ModuleConfig_AudioConfig*>(_impl_.payload_variant_.audio_) : reinterpret_cast<::meshtastic::ModuleConfig_AudioConfig&>(::meshtastic::_ModuleConfig_AudioConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_AudioConfig& ModuleConfig::audio() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.audio)
  return _internal_audio();
}
inline ::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NULLABLE ModuleConfig::unsafe_arena_release_audio() {
  // @@protoc_insertion_point(field_unsafe_arena_release:meshtastic.ModuleConfig.audio)
  if (payload_variant_case() == kAudio) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_AudioConfig*>(_impl_.payload_variant_.audio_);
    _impl_.payload_variant_.audio_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ModuleConfig::unsafe_arena_set_allocated_audio(
    ::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload_variant();
  if (value) {
    set_has_audio();
    _impl_.payload_variant_.audio_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.ModuleConfig.audio)
}
inline ::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NONNULL ModuleConfig::_internal_mutable_audio() {
  if (payload_variant_case() != kAudio) {
    clear_payload_variant();
    set_has_audio();
    _impl_.payload_variant_.audio_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_AudioConfig>(GetArena()));
  }
  return reinterpret_cast<::meshtastic::ModuleConfig_AudioConfig*>(_impl_.payload_variant_.audio_);
}
inline ::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NONNULL ModuleConfig::mutable_audio()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::meshtastic::ModuleConfig_AudioConfig* _msg = _internal_mutable_audio();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.audio)
  return _msg;
}

// .meshtastic.ModuleConfig.RemoteHardwareConfig remote_hardware = 9;
inline bool ModuleConfig::has_remote_hardware() const {
  return payload_variant_case() == kRemoteHardware;
}
inline bool ModuleConfig::_internal_has_remote_hardware() const {
  return payload_variant_case() == kRemoteHardware;
}
inline void ModuleConfig::set_has_remote_hardware() {
  _impl_._oneof_case_[0] = kRemoteHardware;
}
inline void ModuleConfig::clear_remote_hardware() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kRemoteHardware) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.remote_hardware_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.remote_hardware_);
    }
    clear_has_payload_variant();
  }
}
inline ::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NULLABLE ModuleConfig::release_remote_hardware() {
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.remote_hardware)
  if (payload_variant_case() == kRemoteHardware) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_RemoteHardwareConfig*>(_impl_.payload_variant_.remote_hardware_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_variant_.remote_hardware_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::meshtastic::ModuleConfig_RemoteHardwareConfig& ModuleConfig::_internal_remote_hardware() const {
  return payload_variant_case() == kRemoteHardware ? *reinterpret_cast<::meshtastic::ModuleConfig_RemoteHardwareConfig*>(_impl_.payload_variant_.remote_hardware_) : reinterpret_cast<::meshtastic::ModuleConfig_RemoteHardwareConfig&>(::meshtastic::_ModuleConfig_RemoteHardwareConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_RemoteHardwareConfig& ModuleConfig::remote_hardware() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.remote_hardware)
  return _internal_remote_hardware();
}
inline ::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NULLABLE ModuleConfig::unsafe_arena_release_remote_hardware() {
  // @@protoc_insertion_point(field_unsafe_arena_release:meshtastic.ModuleConfig.remote_hardware)
  if (payload_variant_case() == kRemoteHardware) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_RemoteHardwareConfig*>(_impl_.payload_variant_.remote_hardware_);
    _impl_.payload_variant_.remote_hardware_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ModuleConfig::unsafe_arena_set_allocated_remote_hardware(
    ::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload_variant();
  if (value) {
    set_has_remote_hardware();
    _impl_.payload_variant_.remote_hardware_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.ModuleConfig.remote_hardware)
}
inline ::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NONNULL ModuleConfig::_internal_mutable_remote_hardware() {
  if (payload_variant_case() != kRemoteHardware) {
    clear_payload_variant();
    set_has_remote_hardware();
    _impl_.payload_variant_.remote_hardware_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_RemoteHardwareConfig>(GetArena()));
  }
  return reinterpret_cast<::meshtastic::ModuleConfig_RemoteHardwareConfig*>(_impl_.payload_variant_.remote_hardware_);
}
inline ::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NONNULL ModuleConfig::mutable_remote_hardware()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::meshtastic::ModuleConfig_RemoteHardwareConfig* _msg = _internal_mutable_remote_hardware();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.remote_hardware)
  return _msg;
}

// .meshtastic.ModuleConfig.NeighborInfoConfig neighbor_info = 10;
inline bool ModuleConfig::has_neighbor_info() const {
  return payload_variant_case() == kNeighborInfo;
}
inline bool ModuleConfig::_internal_has_neighbor_info() const {
  return payload_variant_case() == kNeighborInfo;
}
inline void ModuleConfig::set_has_neighbor_info() {
  _impl_._oneof_case_[0] = kNeighborInfo;
}
inline void ModuleConfig::clear_neighbor_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kNeighborInfo) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.neighbor_info_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.neighbor_info_);
    }
    clear_has_payload_variant();
  }
}
inline ::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NULLABLE ModuleConfig::release_neighbor_info() {
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.neighbor_info)
  if (payload_variant_case() == kNeighborInfo) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_NeighborInfoConfig*>(_impl_.payload_variant_.neighbor_info_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_variant_.neighbor_info_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::meshtastic::ModuleConfig_NeighborInfoConfig& ModuleConfig::_internal_neighbor_info() const {
  return payload_variant_case() == kNeighborInfo ? *reinterpret_cast<::meshtastic::ModuleConfig_NeighborInfoConfig*>(_impl_.payload_variant_.neighbor_info_) : reinterpret_cast<::meshtastic::ModuleConfig_NeighborInfoConfig&>(::meshtastic::_ModuleConfig_NeighborInfoConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_NeighborInfoConfig& ModuleConfig::neighbor_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.neighbor_info)
  return _internal_neighbor_info();
}
inline ::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NULLABLE ModuleConfig::unsafe_arena_release_neighbor_info() {
  // @@protoc_insertion_point(field_unsafe_arena_release:meshtastic.ModuleConfig.neighbor_info)
  if (payload_variant_case() == kNeighborInfo) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_NeighborInfoConfig*>(_impl_.payload_variant_.neighbor_info_);
    _impl_.payload_variant_.neighbor_info_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ModuleConfig::unsafe_arena_set_allocated_neighbor_info(
    ::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload_variant();
  if (value) {
    set_has_neighbor_info();
    _impl_.payload_variant_.neighbor_info_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.ModuleConfig.neighbor_info)
}
inline ::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NONNULL ModuleConfig::_internal_mutable_neighbor_info() {
  if (payload_variant_case() != kNeighborInfo) {
    clear_payload_variant();
    set_has_neighbor_info();
    _impl_.payload_variant_.neighbor_info_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_NeighborInfoConfig>(GetArena()));
  }
  return reinterpret_cast<::meshtastic::ModuleConfig_NeighborInfoConfig*>(_impl_.payload_variant_.neighbor_info_);
}
inline ::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NONNULL ModuleConfig::mutable_neighbor_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::meshtastic::ModuleConfig_NeighborInfoConfig* _msg = _internal_mutable_neighbor_info();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.neighbor_info)
  return _msg;
}

// .meshtastic.ModuleConfig.AmbientLightingConfig ambient_lighting = 11;
inline bool ModuleConfig::has_ambient_lighting() const {
  return payload_variant_case() == kAmbientLighting;
}
inline bool ModuleConfig::_internal_has_ambient_lighting() const {
  return payload_variant_case() == kAmbientLighting;
}
inline void ModuleConfig::set_has_ambient_lighting() {
  _impl_._oneof_case_[0] = kAmbientLighting;
}
inline void ModuleConfig::clear_ambient_lighting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kAmbientLighting) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.ambient_lighting_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.ambient_lighting_);
    }
    clear_has_payload_variant();
  }
}
inline ::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NULLABLE ModuleConfig::release_ambient_lighting() {
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.ambient_lighting)
  if (payload_variant_case() == kAmbientLighting) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_AmbientLightingConfig*>(_impl_.payload_variant_.ambient_lighting_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_variant_.ambient_lighting_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::meshtastic::ModuleConfig_AmbientLightingConfig& ModuleConfig::_internal_ambient_lighting() const {
  return payload_variant_case() == kAmbientLighting ? *reinterpret_cast<::meshtastic::ModuleConfig_AmbientLightingConfig*>(_impl_.payload_variant_.ambient_lighting_) : reinterpret_cast<::meshtastic::ModuleConfig_AmbientLightingConfig&>(::meshtastic::_ModuleConfig_AmbientLightingConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_AmbientLightingConfig& ModuleConfig::ambient_lighting() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.ambient_lighting)
  return _internal_ambient_lighting();
}
inline ::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NULLABLE ModuleConfig::unsafe_arena_release_ambient_lighting() {
  // @@protoc_insertion_point(field_unsafe_arena_release:meshtastic.ModuleConfig.ambient_lighting)
  if (payload_variant_case() == kAmbientLighting) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_AmbientLightingConfig*>(_impl_.payload_variant_.ambient_lighting_);
    _impl_.payload_variant_.ambient_lighting_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ModuleConfig::unsafe_arena_set_allocated_ambient_lighting(
    ::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload_variant();
  if (value) {
    set_has_ambient_lighting();
    _impl_.payload_variant_.ambient_lighting_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.ModuleConfig.ambient_lighting)
}
inline ::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NONNULL ModuleConfig::_internal_mutable_ambient_lighting() {
  if (payload_variant_case() != kAmbientLighting) {
    clear_payload_variant();
    set_has_ambient_lighting();
    _impl_.payload_variant_.ambient_lighting_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_AmbientLightingConfig>(GetArena()));
  }
  return reinterpret_cast<::meshtastic::ModuleConfig_AmbientLightingConfig*>(_impl_.payload_variant_.ambient_lighting_);
}
inline ::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NONNULL ModuleConfig::mutable_ambient_lighting()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::meshtastic::ModuleConfig_AmbientLightingConfig* _msg = _internal_mutable_ambient_lighting();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.ambient_lighting)
  return _msg;
}

// .meshtastic.ModuleConfig.DetectionSensorConfig detection_sensor = 12;
inline bool ModuleConfig::has_detection_sensor() const {
  return payload_variant_case() == kDetectionSensor;
}
inline bool ModuleConfig::_internal_has_detection_sensor() const {
  return payload_variant_case() == kDetectionSensor;
}
inline void ModuleConfig::set_has_detection_sensor() {
  _impl_._oneof_case_[0] = kDetectionSensor;
}
inline void ModuleConfig::clear_detection_sensor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kDetectionSensor) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.detection_sensor_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.detection_sensor_);
    }
    clear_has_payload_variant();
  }
}
inline ::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NULLABLE ModuleConfig::release_detection_sensor() {
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.detection_sensor)
  if (payload_variant_case() == kDetectionSensor) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_DetectionSensorConfig*>(_impl_.payload_variant_.detection_sensor_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_variant_.detection_sensor_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::meshtastic::ModuleConfig_DetectionSensorConfig& ModuleConfig::_internal_detection_sensor() const {
  return payload_variant_case() == kDetectionSensor ? *reinterpret_cast<::meshtastic::ModuleConfig_DetectionSensorConfig*>(_impl_.payload_variant_.detection_sensor_) : reinterpret_cast<::meshtastic::ModuleConfig_DetectionSensorConfig&>(::meshtastic::_ModuleConfig_DetectionSensorConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_DetectionSensorConfig& ModuleConfig::detection_sensor() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.detection_sensor)
  return _internal_detection_sensor();
}
inline ::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NULLABLE ModuleConfig::unsafe_arena_release_detection_sensor() {
  // @@protoc_insertion_point(field_unsafe_arena_release:meshtastic.ModuleConfig.detection_sensor)
  if (payload_variant_case() == kDetectionSensor) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_DetectionSensorConfig*>(_impl_.payload_variant_.detection_sensor_);
    _impl_.payload_variant_.detection_sensor_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ModuleConfig::unsafe_arena_set_allocated_detection_sensor(
    ::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload_variant();
  if (value) {
    set_has_detection_sensor();
    _impl_.payload_variant_.detection_sensor_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.ModuleConfig.detection_sensor)
}
inline ::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NONNULL ModuleConfig::_internal_mutable_detection_sensor() {
  if (payload_variant_case() != kDetectionSensor) {
    clear_payload_variant();
    set_has_detection_sensor();
    _impl_.payload_variant_.detection_sensor_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_DetectionSensorConfig>(GetArena()));
  }
  return reinterpret_cast<::meshtastic::ModuleConfig_DetectionSensorConfig*>(_impl_.payload_variant_.detection_sensor_);
}
inline ::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NONNULL ModuleConfig::mutable_detection_sensor()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::meshtastic::ModuleConfig_DetectionSensorConfig* _msg = _internal_mutable_detection_sensor();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.detection_sensor)
  return _msg;
}

// .meshtastic.ModuleConfig.PaxcounterConfig paxcounter = 13;
inline bool ModuleConfig::has_paxcounter() const {
  return payload_variant_case() == kPaxcounter;
}
inline bool ModuleConfig::_internal_has_paxcounter() const {
  return payload_variant_case() == kPaxcounter;
}
inline void ModuleConfig::set_has_paxcounter() {
  _impl_._oneof_case_[0] = kPaxcounter;
}
inline void ModuleConfig::clear_paxcounter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kPaxcounter) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.paxcounter_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.paxcounter_);
    }
    clear_has_payload_variant();
  }
}
inline ::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NULLABLE ModuleConfig::release_paxcounter() {
  // @@protoc_insertion_point(field_release:meshtastic.ModuleConfig.paxcounter)
  if (payload_variant_case() == kPaxcounter) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_PaxcounterConfig*>(_impl_.payload_variant_.paxcounter_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_variant_.paxcounter_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::meshtastic::ModuleConfig_PaxcounterConfig& ModuleConfig::_internal_paxcounter() const {
  return payload_variant_case() == kPaxcounter ? *reinterpret_cast<::meshtastic::ModuleConfig_PaxcounterConfig*>(_impl_.payload_variant_.paxcounter_) : reinterpret_cast<::meshtastic::ModuleConfig_PaxcounterConfig&>(::meshtastic::_ModuleConfig_PaxcounterConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_PaxcounterConfig& ModuleConfig::paxcounter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ModuleConfig.paxcounter)
  return _internal_paxcounter();
}
inline ::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NULLABLE ModuleConfig::unsafe_arena_release_paxcounter() {
  // @@protoc_insertion_point(field_unsafe_arena_release:meshtastic.ModuleConfig.paxcounter)
  if (payload_variant_case() == kPaxcounter) {
    clear_has_payload_variant();
    auto* temp = reinterpret_cast<::meshtastic::ModuleConfig_PaxcounterConfig*>(_impl_.payload_variant_.paxcounter_);
    _impl_.payload_variant_.paxcounter_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ModuleConfig::unsafe_arena_set_allocated_paxcounter(
    ::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload_variant();
  if (value) {
    set_has_paxcounter();
    _impl_.payload_variant_.paxcounter_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.ModuleConfig.paxcounter)
}
inline ::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NONNULL ModuleConfig::_internal_mutable_paxcounter() {
  if (payload_variant_case() != kPaxcounter) {
    clear_payload_variant();
    set_has_paxcounter();
    _impl_.payload_variant_.paxcounter_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_PaxcounterConfig>(GetArena()));
  }
  return reinterpret_cast<::meshtastic::ModuleConfig_PaxcounterConfig*>(_impl_.payload_variant_.paxcounter_);
}
inline ::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NONNULL ModuleConfig::mutable_paxcounter()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::meshtastic::ModuleConfig_PaxcounterConfig* _msg = _internal_mutable_paxcounter();
  // @@protoc_insertion_point(field_mutable:meshtastic.ModuleConfig.paxcounter)
  return _msg;
}

inline bool ModuleConfig::has_payload_variant() const {
  return payload_variant_case() != PAYLOAD_VARIANT_NOT_SET;
}
inline void ModuleConfig::clear_has_payload_variant() {
  _impl_._oneof_case_[0] = PAYLOAD_VARIANT_NOT_SET;
}
inline ModuleConfig::PayloadVariantCase ModuleConfig::payload_variant_case() const {
  return ModuleConfig::PayloadVariantCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// RemoteHardwarePin

// uint32 gpio_pin = 1;
inline void RemoteHardwarePin::clear_gpio_pin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gpio_pin_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint32_t RemoteHardwarePin::gpio_pin() const {
  // @@protoc_insertion_point(field_get:meshtastic.RemoteHardwarePin.gpio_pin)
  return _internal_gpio_pin();
}
inline void RemoteHardwarePin::set_gpio_pin(::uint32_t value) {
  _internal_set_gpio_pin(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.RemoteHardwarePin.gpio_pin)
}
inline ::uint32_t RemoteHardwarePin::_internal_gpio_pin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gpio_pin_;
}
inline void RemoteHardwarePin::_internal_set_gpio_pin(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gpio_pin_ = value;
}

// string name = 2;
inline void RemoteHardwarePin::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& RemoteHardwarePin::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.RemoteHardwarePin.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RemoteHardwarePin::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.RemoteHardwarePin.name)
}
inline ::std::string* PROTOBUF_NONNULL RemoteHardwarePin::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:meshtastic.RemoteHardwarePin.name)
  return _s;
}
inline const ::std::string& RemoteHardwarePin::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void RemoteHardwarePin::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RemoteHardwarePin::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RemoteHardwarePin::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.RemoteHardwarePin.name)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void RemoteHardwarePin::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.RemoteHardwarePin.name)
}

// .meshtastic.RemoteHardwarePinType type = 3;
inline void RemoteHardwarePin::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::meshtastic::RemoteHardwarePinType RemoteHardwarePin::type() const {
  // @@protoc_insertion_point(field_get:meshtastic.RemoteHardwarePin.type)
  return _internal_type();
}
inline void RemoteHardwarePin::set_type(::meshtastic::RemoteHardwarePinType value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:meshtastic.RemoteHardwarePin.type)
}
inline ::meshtastic::RemoteHardwarePinType RemoteHardwarePin::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::meshtastic::RemoteHardwarePinType>(_impl_.type_);
}
inline void RemoteHardwarePin::_internal_set_type(::meshtastic::RemoteHardwarePinType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace meshtastic


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::meshtastic::ModuleConfig_DetectionSensorConfig_TriggerType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::meshtastic::ModuleConfig_DetectionSensorConfig_TriggerType>() {
  return ::meshtastic::ModuleConfig_DetectionSensorConfig_TriggerType_descriptor();
}
template <>
struct is_proto_enum<::meshtastic::ModuleConfig_AudioConfig_Audio_Baud> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::meshtastic::ModuleConfig_AudioConfig_Audio_Baud>() {
  return ::meshtastic::ModuleConfig_AudioConfig_Audio_Baud_descriptor();
}
template <>
struct is_proto_enum<::meshtastic::ModuleConfig_SerialConfig_Serial_Baud> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::meshtastic::ModuleConfig_SerialConfig_Serial_Baud>() {
  return ::meshtastic::ModuleConfig_SerialConfig_Serial_Baud_descriptor();
}
template <>
struct is_proto_enum<::meshtastic::ModuleConfig_SerialConfig_Serial_Mode> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::meshtastic::ModuleConfig_SerialConfig_Serial_Mode>() {
  return ::meshtastic::ModuleConfig_SerialConfig_Serial_Mode_descriptor();
}
template <>
struct is_proto_enum<::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar>() {
  return ::meshtastic::ModuleConfig_CannedMessageConfig_InputEventChar_descriptor();
}
template <>
struct is_proto_enum<::meshtastic::RemoteHardwarePinType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::meshtastic::RemoteHardwarePinType>() {
  return ::meshtastic::RemoteHardwarePinType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // meshtastic_2fmodule_5fconfig_2eproto_2epb_2eh
