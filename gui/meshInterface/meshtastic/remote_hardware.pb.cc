// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: meshtastic/remote_hardware.proto
// Protobuf C++ Version: 6.32.0

#include "meshtastic/remote_hardware.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace meshtastic {

inline constexpr HardwareMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gpio_mask_{::uint64_t{0u}},
        gpio_value_{::uint64_t{0u}},
        type_{static_cast< ::meshtastic::HardwareMessage_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR HardwareMessage::HardwareMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HardwareMessage_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HardwareMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HardwareMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HardwareMessageDefaultTypeInternal() {}
  union {
    HardwareMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HardwareMessageDefaultTypeInternal _HardwareMessage_default_instance_;
}  // namespace meshtastic
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_meshtastic_2fremote_5fhardware_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_meshtastic_2fremote_5fhardware_2eproto = nullptr;
const ::uint32_t
    TableStruct_meshtastic_2fremote_5fhardware_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::HardwareMessage, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::HardwareMessage, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::HardwareMessage, _impl_.gpio_mask_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::HardwareMessage, _impl_.gpio_value_),
        2,
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::meshtastic::HardwareMessage)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::meshtastic::_HardwareMessage_default_instance_._instance,
};
const char descriptor_table_protodef_meshtastic_2fremote_5fhardware_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n meshtastic/remote_hardware.proto\022\nmesh"
    "tastic\"\326\001\n\017HardwareMessage\022.\n\004type\030\001 \001(\016"
    "2 .meshtastic.HardwareMessage.Type\022\021\n\tgp"
    "io_mask\030\002 \001(\004\022\022\n\ngpio_value\030\003 \001(\004\"l\n\004Typ"
    "e\022\t\n\005UNSET\020\000\022\017\n\013WRITE_GPIOS\020\001\022\017\n\013WATCH_G"
    "PIOS\020\002\022\021\n\rGPIOS_CHANGED\020\003\022\016\n\nREAD_GPIOS\020"
    "\004\022\024\n\020READ_GPIOS_REPLY\020\005Bc\n\023com.geeksvill"
    "e.meshB\016RemoteHardwareZ\"github.com/mesht"
    "astic/go/generated\252\002\024Meshtastic.Protobuf"
    "s\272\002\000b\006proto3"
};
static ::absl::once_flag descriptor_table_meshtastic_2fremote_5fhardware_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_meshtastic_2fremote_5fhardware_2eproto = {
    false,
    false,
    372,
    descriptor_table_protodef_meshtastic_2fremote_5fhardware_2eproto,
    "meshtastic/remote_hardware.proto",
    &descriptor_table_meshtastic_2fremote_5fhardware_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_meshtastic_2fremote_5fhardware_2eproto::offsets,
    file_level_enum_descriptors_meshtastic_2fremote_5fhardware_2eproto,
    file_level_service_descriptors_meshtastic_2fremote_5fhardware_2eproto,
};
namespace meshtastic {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL HardwareMessage_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_meshtastic_2fremote_5fhardware_2eproto);
  return file_level_enum_descriptors_meshtastic_2fremote_5fhardware_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t HardwareMessage_Type_internal_data_[] = {
    393216u, 0u, };
// ===================================================================

class HardwareMessage::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<HardwareMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HardwareMessage, _impl_._has_bits_);
};

HardwareMessage::HardwareMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HardwareMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.HardwareMessage)
}
HardwareMessage::HardwareMessage(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const HardwareMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HardwareMessage_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE HardwareMessage::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void HardwareMessage::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gpio_mask_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, gpio_mask_) +
               sizeof(Impl_::type_));
}
HardwareMessage::~HardwareMessage() {
  // @@protoc_insertion_point(destructor:meshtastic.HardwareMessage)
  SharedDtor(*this);
}
inline void HardwareMessage::SharedDtor(MessageLite& self) {
  HardwareMessage& this_ = static_cast<HardwareMessage&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL HardwareMessage::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HardwareMessage(arena);
}
constexpr auto HardwareMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HardwareMessage),
                                            alignof(HardwareMessage));
}
constexpr auto HardwareMessage::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HardwareMessage_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HardwareMessage::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HardwareMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HardwareMessage::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HardwareMessage>(), &HardwareMessage::ByteSizeLong,
              &HardwareMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HardwareMessage, _impl_._cached_size_),
          false,
      },
      &HardwareMessage::kDescriptorMethods,
      &descriptor_table_meshtastic_2fremote_5fhardware_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull HardwareMessage_class_data_ =
        HardwareMessage::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
HardwareMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HardwareMessage_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HardwareMessage_class_data_.tc_table);
  return HardwareMessage_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
HardwareMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HardwareMessage, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    HardwareMessage_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::HardwareMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .meshtastic.HardwareMessage.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HardwareMessage, _impl_.type_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(HardwareMessage, _impl_.type_)}},
    // uint64 gpio_mask = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HardwareMessage, _impl_.gpio_mask_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(HardwareMessage, _impl_.gpio_mask_)}},
    // uint64 gpio_value = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HardwareMessage, _impl_.gpio_value_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(HardwareMessage, _impl_.gpio_value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .meshtastic.HardwareMessage.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(HardwareMessage, _impl_.type_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // uint64 gpio_mask = 2;
    {PROTOBUF_FIELD_OFFSET(HardwareMessage, _impl_.gpio_mask_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 gpio_value = 3;
    {PROTOBUF_FIELD_OFFSET(HardwareMessage, _impl_.gpio_value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void HardwareMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.HardwareMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    ::memset(&_impl_.gpio_mask_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.type_) -
        reinterpret_cast<char*>(&_impl_.gpio_mask_)) + sizeof(_impl_.type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HardwareMessage::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HardwareMessage& this_ = static_cast<const HardwareMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HardwareMessage::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HardwareMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.HardwareMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .meshtastic.HardwareMessage.Type type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  // uint64 gpio_mask = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_gpio_mask() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this_._internal_gpio_mask(), target);
    }
  }

  // uint64 gpio_value = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_gpio_value() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          3, this_._internal_gpio_value(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.HardwareMessage)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HardwareMessage::ByteSizeLong(const MessageLite& base) {
  const HardwareMessage& this_ = static_cast<const HardwareMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HardwareMessage::ByteSizeLong() const {
  const HardwareMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.HardwareMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // uint64 gpio_mask = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_gpio_mask() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_gpio_mask());
      }
    }
    // uint64 gpio_value = 3;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_gpio_value() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_gpio_value());
      }
    }
    // .meshtastic.HardwareMessage.Type type = 1;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void HardwareMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HardwareMessage*>(&to_msg);
  auto& from = static_cast<const HardwareMessage&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.HardwareMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_gpio_mask() != 0) {
        _this->_impl_.gpio_mask_ = from._impl_.gpio_mask_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_gpio_value() != 0) {
        _this->_impl_.gpio_value_ = from._impl_.gpio_value_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HardwareMessage::CopyFrom(const HardwareMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.HardwareMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HardwareMessage::InternalSwap(HardwareMessage* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HardwareMessage, _impl_.type_)
      + sizeof(HardwareMessage::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(HardwareMessage, _impl_.gpio_mask_)>(
          reinterpret_cast<char*>(&_impl_.gpio_mask_),
          reinterpret_cast<char*>(&other->_impl_.gpio_mask_));
}

::google::protobuf::Metadata HardwareMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace meshtastic
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_meshtastic_2fremote_5fhardware_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
