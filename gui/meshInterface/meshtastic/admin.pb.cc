// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: meshtastic/admin.proto
// Protobuf C++ Version: 6.32.0

#include "meshtastic/admin.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace meshtastic {

inline constexpr KeyVerificationAdmin::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_type_{static_cast< ::meshtastic::KeyVerificationAdmin_MessageType >(0)},
        remote_nodenum_{0u},
        nonce_{::uint64_t{0u}},
        security_number_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR KeyVerificationAdmin::KeyVerificationAdmin(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(KeyVerificationAdmin_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct KeyVerificationAdminDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyVerificationAdminDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyVerificationAdminDefaultTypeInternal() {}
  union {
    KeyVerificationAdmin _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyVerificationAdminDefaultTypeInternal _KeyVerificationAdmin_default_instance_;

inline constexpr HamParameters::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        call_sign_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        short_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tx_power_{0},
        frequency_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HamParameters::HamParameters(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HamParameters_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HamParametersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HamParametersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HamParametersDefaultTypeInternal() {}
  union {
    HamParameters _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HamParametersDefaultTypeInternal _HamParameters_default_instance_;

inline constexpr AdminMessage_InputEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        event_code_{0u},
        kb_char_{0u},
        touch_x_{0u},
        touch_y_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AdminMessage_InputEvent::AdminMessage_InputEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AdminMessage_InputEvent_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AdminMessage_InputEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AdminMessage_InputEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AdminMessage_InputEventDefaultTypeInternal() {}
  union {
    AdminMessage_InputEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AdminMessage_InputEventDefaultTypeInternal _AdminMessage_InputEvent_default_instance_;

inline constexpr SharedContact::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        user_{nullptr},
        node_num_{0u},
        should_ignore_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SharedContact::SharedContact(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SharedContact_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SharedContactDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SharedContactDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SharedContactDefaultTypeInternal() {}
  union {
    SharedContact _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SharedContactDefaultTypeInternal _SharedContact_default_instance_;

inline constexpr NodeRemoteHardwarePinsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_remote_hardware_pins_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeRemoteHardwarePinsResponse::NodeRemoteHardwarePinsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NodeRemoteHardwarePinsResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeRemoteHardwarePinsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeRemoteHardwarePinsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeRemoteHardwarePinsResponseDefaultTypeInternal() {}
  union {
    NodeRemoteHardwarePinsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeRemoteHardwarePinsResponseDefaultTypeInternal _NodeRemoteHardwarePinsResponse_default_instance_;

inline constexpr AdminMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_passkey_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        payload_variant_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR AdminMessage::AdminMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AdminMessage_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AdminMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AdminMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AdminMessageDefaultTypeInternal() {}
  union {
    AdminMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AdminMessageDefaultTypeInternal _AdminMessage_default_instance_;
}  // namespace meshtastic
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_meshtastic_2fadmin_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_meshtastic_2fadmin_2eproto = nullptr;
const ::uint32_t
    TableStruct_meshtastic_2fadmin_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage_InputEvent, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage_InputEvent, _impl_.event_code_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage_InputEvent, _impl_.kb_char_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage_InputEvent, _impl_.touch_x_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage_InputEvent, _impl_.touch_y_),
        0,
        1,
        2,
        3,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_._oneof_case_[0]),
        60, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.session_passkey_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_.payload_variant_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::HamParameters, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::HamParameters, _impl_.call_sign_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::HamParameters, _impl_.tx_power_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::HamParameters, _impl_.frequency_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::HamParameters, _impl_.short_name_),
        0,
        2,
        3,
        1,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::NodeRemoteHardwarePinsResponse, _impl_.node_remote_hardware_pins_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::SharedContact, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::SharedContact, _impl_.node_num_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::SharedContact, _impl_.user_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::SharedContact, _impl_.should_ignore_),
        1,
        0,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::meshtastic::KeyVerificationAdmin, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::meshtastic::KeyVerificationAdmin, _impl_.message_type_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::KeyVerificationAdmin, _impl_.remote_nodenum_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::KeyVerificationAdmin, _impl_.nonce_),
        PROTOBUF_FIELD_OFFSET(::meshtastic::KeyVerificationAdmin, _impl_.security_number_),
        0,
        1,
        2,
        3,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::meshtastic::AdminMessage_InputEvent)},
        {11, sizeof(::meshtastic::AdminMessage)},
        {126, sizeof(::meshtastic::HamParameters)},
        {137, sizeof(::meshtastic::NodeRemoteHardwarePinsResponse)},
        {139, sizeof(::meshtastic::SharedContact)},
        {148, sizeof(::meshtastic::KeyVerificationAdmin)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::meshtastic::_AdminMessage_InputEvent_default_instance_._instance,
    &::meshtastic::_AdminMessage_default_instance_._instance,
    &::meshtastic::_HamParameters_default_instance_._instance,
    &::meshtastic::_NodeRemoteHardwarePinsResponse_default_instance_._instance,
    &::meshtastic::_SharedContact_default_instance_._instance,
    &::meshtastic::_KeyVerificationAdmin_default_instance_._instance,
};
const char descriptor_table_protodef_meshtastic_2fadmin_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\026meshtastic/admin.proto\022\nmeshtastic\032\030me"
    "shtastic/channel.proto\032\027meshtastic/confi"
    "g.proto\032\"meshtastic/connection_status.pr"
    "oto\032\032meshtastic/device_ui.proto\032\025meshtas"
    "tic/mesh.proto\032\036meshtastic/module_config"
    ".proto\"\326\030\n\014AdminMessage\022\027\n\017session_passk"
    "ey\030e \001(\014\022\035\n\023get_channel_request\030\001 \001(\rH\000\022"
    "3\n\024get_channel_response\030\002 \001(\0132\023.meshtast"
    "ic.ChannelH\000\022\033\n\021get_owner_request\030\003 \001(\010H"
    "\000\022.\n\022get_owner_response\030\004 \001(\0132\020.meshtast"
    "ic.UserH\000\022A\n\022get_config_request\030\005 \001(\0162#."
    "meshtastic.AdminMessage.ConfigTypeH\000\0221\n\023"
    "get_config_response\030\006 \001(\0132\022.meshtastic.C"
    "onfigH\000\022N\n\031get_module_config_request\030\007 \001"
    "(\0162).meshtastic.AdminMessage.ModuleConfi"
    "gTypeH\000\022>\n\032get_module_config_response\030\010 "
    "\001(\0132\030.meshtastic.ModuleConfigH\000\0224\n*get_c"
    "anned_message_module_messages_request\030\n "
    "\001(\010H\000\0225\n+get_canned_message_module_messa"
    "ges_response\030\013 \001(\tH\000\022%\n\033get_device_metad"
    "ata_request\030\014 \001(\010H\000\022B\n\034get_device_metada"
    "ta_response\030\r \001(\0132\032.meshtastic.DeviceMet"
    "adataH\000\022\036\n\024get_ringtone_request\030\016 \001(\010H\000\022"
    "\037\n\025get_ringtone_response\030\017 \001(\tH\000\022.\n$get_"
    "device_connection_status_request\030\020 \001(\010H\000"
    "\022S\n%get_device_connection_status_respons"
    "e\030\021 \001(\0132\".meshtastic.DeviceConnectionSta"
    "tusH\000\0221\n\014set_ham_mode\030\022 \001(\0132\031.meshtastic"
    ".HamParametersH\000\022/\n%get_node_remote_hard"
    "ware_pins_request\030\023 \001(\010H\000\022\\\n&get_node_re"
    "mote_hardware_pins_response\030\024 \001(\0132*.mesh"
    "tastic.NodeRemoteHardwarePinsResponseH\000\022"
    " \n\026enter_dfu_mode_request\030\025 \001(\010H\000\022\035\n\023del"
    "ete_file_request\030\026 \001(\tH\000\022\023\n\tset_scale\030\027 "
    "\001(\rH\000\022E\n\022backup_preferences\030\030 \001(\0162\'.mesh"
    "tastic.AdminMessage.BackupLocationH\000\022F\n\023"
    "restore_preferences\030\031 \001(\0162\'.meshtastic.A"
    "dminMessage.BackupLocationH\000\022L\n\031remove_b"
    "ackup_preferences\030\032 \001(\0162\'.meshtastic.Adm"
    "inMessage.BackupLocationH\000\022\?\n\020send_input"
    "_event\030\033 \001(\0132#.meshtastic.AdminMessage.I"
    "nputEventH\000\022%\n\tset_owner\030  \001(\0132\020.meshtas"
    "tic.UserH\000\022*\n\013set_channel\030! \001(\0132\023.meshta"
    "stic.ChannelH\000\022(\n\nset_config\030\" \001(\0132\022.mes"
    "htastic.ConfigH\000\0225\n\021set_module_config\030# "
    "\001(\0132\030.meshtastic.ModuleConfigH\000\022,\n\"set_c"
    "anned_message_module_messages\030$ \001(\tH\000\022\036\n"
    "\024set_ringtone_message\030% \001(\tH\000\022\033\n\021remove_"
    "by_nodenum\030& \001(\rH\000\022\033\n\021set_favorite_node\030"
    "\' \001(\rH\000\022\036\n\024remove_favorite_node\030( \001(\rH\000\022"
    "2\n\022set_fixed_position\030) \001(\0132\024.meshtastic"
    ".PositionH\000\022\037\n\025remove_fixed_position\030* \001"
    "(\010H\000\022\027\n\rset_time_only\030+ \001(\007H\000\022\037\n\025get_ui_"
    "config_request\030, \001(\010H\000\022<\n\026get_ui_config_"
    "response\030- \001(\0132\032.meshtastic.DeviceUIConf"
    "igH\000\0225\n\017store_ui_config\030. \001(\0132\032.meshtast"
    "ic.DeviceUIConfigH\000\022\032\n\020set_ignored_node\030"
    "/ \001(\rH\000\022\035\n\023remove_ignored_node\0300 \001(\rH\000\022\035"
    "\n\023begin_edit_settings\030@ \001(\010H\000\022\036\n\024commit_"
    "edit_settings\030A \001(\010H\000\0220\n\013add_contact\030B \001"
    "(\0132\031.meshtastic.SharedContactH\000\022<\n\020key_v"
    "erification\030C \001(\0132 .meshtastic.KeyVerifi"
    "cationAdminH\000\022\036\n\024factory_reset_device\030^ "
    "\001(\005H\000\022\034\n\022reboot_ota_seconds\030_ \001(\005H\000\022\030\n\016e"
    "xit_simulator\030` \001(\010H\000\022\030\n\016reboot_seconds\030"
    "a \001(\005H\000\022\032\n\020shutdown_seconds\030b \001(\005H\000\022\036\n\024f"
    "actory_reset_config\030c \001(\005H\000\022\026\n\014nodedb_re"
    "set\030d \001(\005H\000\032S\n\nInputEvent\022\022\n\nevent_code\030"
    "\001 \001(\r\022\017\n\007kb_char\030\002 \001(\r\022\017\n\007touch_x\030\003 \001(\r\022"
    "\017\n\007touch_y\030\004 \001(\r\"\326\001\n\nConfigType\022\021\n\rDEVIC"
    "E_CONFIG\020\000\022\023\n\017POSITION_CONFIG\020\001\022\020\n\014POWER"
    "_CONFIG\020\002\022\022\n\016NETWORK_CONFIG\020\003\022\022\n\016DISPLAY"
    "_CONFIG\020\004\022\017\n\013LORA_CONFIG\020\005\022\024\n\020BLUETOOTH_"
    "CONFIG\020\006\022\023\n\017SECURITY_CONFIG\020\007\022\025\n\021SESSION"
    "KEY_CONFIG\020\010\022\023\n\017DEVICEUI_CONFIG\020\t\"\273\002\n\020Mo"
    "duleConfigType\022\017\n\013MQTT_CONFIG\020\000\022\021\n\rSERIA"
    "L_CONFIG\020\001\022\023\n\017EXTNOTIF_CONFIG\020\002\022\027\n\023STORE"
    "FORWARD_CONFIG\020\003\022\024\n\020RANGETEST_CONFIG\020\004\022\024"
    "\n\020TELEMETRY_CONFIG\020\005\022\024\n\020CANNEDMSG_CONFIG"
    "\020\006\022\020\n\014AUDIO_CONFIG\020\007\022\031\n\025REMOTEHARDWARE_C"
    "ONFIG\020\010\022\027\n\023NEIGHBORINFO_CONFIG\020\t\022\032\n\026AMBI"
    "ENTLIGHTING_CONFIG\020\n\022\032\n\026DETECTIONSENSOR_"
    "CONFIG\020\013\022\025\n\021PAXCOUNTER_CONFIG\020\014\"#\n\016Backu"
    "pLocation\022\t\n\005FLASH\020\000\022\006\n\002SD\020\001B\021\n\017payload_"
    "variant\"[\n\rHamParameters\022\021\n\tcall_sign\030\001 "
    "\001(\t\022\020\n\010tx_power\030\002 \001(\005\022\021\n\tfrequency\030\003 \001(\002"
    "\022\022\n\nshort_name\030\004 \001(\t\"f\n\036NodeRemoteHardwa"
    "rePinsResponse\022D\n\031node_remote_hardware_p"
    "ins\030\001 \003(\0132!.meshtastic.NodeRemoteHardwar"
    "ePin\"X\n\rSharedContact\022\020\n\010node_num\030\001 \001(\r\022"
    "\036\n\004user\030\002 \001(\0132\020.meshtastic.User\022\025\n\rshoul"
    "d_ignore\030\003 \001(\010\"\234\002\n\024KeyVerificationAdmin\022"
    "B\n\014message_type\030\001 \001(\0162,.meshtastic.KeyVe"
    "rificationAdmin.MessageType\022\026\n\016remote_no"
    "denum\030\002 \001(\r\022\r\n\005nonce\030\003 \001(\004\022\034\n\017security_n"
    "umber\030\004 \001(\rH\000\210\001\001\"g\n\013MessageType\022\031\n\025INITI"
    "ATE_VERIFICATION\020\000\022\033\n\027PROVIDE_SECURITY_N"
    "UMBER\020\001\022\r\n\tDO_VERIFY\020\002\022\021\n\rDO_NOT_VERIFY\020"
    "\003B\022\n\020_security_numberB`\n\023com.geeksville."
    "meshB\013AdminProtosZ\"github.com/meshtastic"
    "/go/generated\252\002\024Meshtastic.Protobufs\272\002\000b"
    "\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_meshtastic_2fadmin_2eproto_deps[6] = {
        &::descriptor_table_meshtastic_2fchannel_2eproto,
        &::descriptor_table_meshtastic_2fconfig_2eproto,
        &::descriptor_table_meshtastic_2fconnection_5fstatus_2eproto,
        &::descriptor_table_meshtastic_2fdevice_5fui_2eproto,
        &::descriptor_table_meshtastic_2fmesh_2eproto,
        &::descriptor_table_meshtastic_2fmodule_5fconfig_2eproto,
};
static ::absl::once_flag descriptor_table_meshtastic_2fadmin_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_meshtastic_2fadmin_2eproto = {
    false,
    false,
    4047,
    descriptor_table_protodef_meshtastic_2fadmin_2eproto,
    "meshtastic/admin.proto",
    &descriptor_table_meshtastic_2fadmin_2eproto_once,
    descriptor_table_meshtastic_2fadmin_2eproto_deps,
    6,
    6,
    schemas,
    file_default_instances,
    TableStruct_meshtastic_2fadmin_2eproto::offsets,
    file_level_enum_descriptors_meshtastic_2fadmin_2eproto,
    file_level_service_descriptors_meshtastic_2fadmin_2eproto,
};
namespace meshtastic {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL AdminMessage_ConfigType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_meshtastic_2fadmin_2eproto);
  return file_level_enum_descriptors_meshtastic_2fadmin_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t AdminMessage_ConfigType_internal_data_[] = {
    655360u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL AdminMessage_ModuleConfigType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_meshtastic_2fadmin_2eproto);
  return file_level_enum_descriptors_meshtastic_2fadmin_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t AdminMessage_ModuleConfigType_internal_data_[] = {
    851968u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL AdminMessage_BackupLocation_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_meshtastic_2fadmin_2eproto);
  return file_level_enum_descriptors_meshtastic_2fadmin_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t AdminMessage_BackupLocation_internal_data_[] = {
    131072u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL KeyVerificationAdmin_MessageType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_meshtastic_2fadmin_2eproto);
  return file_level_enum_descriptors_meshtastic_2fadmin_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t KeyVerificationAdmin_MessageType_internal_data_[] = {
    262144u, 0u, };
// ===================================================================

class AdminMessage_InputEvent::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AdminMessage_InputEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AdminMessage_InputEvent, _impl_._has_bits_);
};

AdminMessage_InputEvent::AdminMessage_InputEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AdminMessage_InputEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.AdminMessage.InputEvent)
}
AdminMessage_InputEvent::AdminMessage_InputEvent(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const AdminMessage_InputEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AdminMessage_InputEvent_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE AdminMessage_InputEvent::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void AdminMessage_InputEvent::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, event_code_),
           0,
           offsetof(Impl_, touch_y_) -
               offsetof(Impl_, event_code_) +
               sizeof(Impl_::touch_y_));
}
AdminMessage_InputEvent::~AdminMessage_InputEvent() {
  // @@protoc_insertion_point(destructor:meshtastic.AdminMessage.InputEvent)
  SharedDtor(*this);
}
inline void AdminMessage_InputEvent::SharedDtor(MessageLite& self) {
  AdminMessage_InputEvent& this_ = static_cast<AdminMessage_InputEvent&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AdminMessage_InputEvent::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AdminMessage_InputEvent(arena);
}
constexpr auto AdminMessage_InputEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AdminMessage_InputEvent),
                                            alignof(AdminMessage_InputEvent));
}
constexpr auto AdminMessage_InputEvent::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AdminMessage_InputEvent_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AdminMessage_InputEvent::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AdminMessage_InputEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AdminMessage_InputEvent::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AdminMessage_InputEvent>(), &AdminMessage_InputEvent::ByteSizeLong,
              &AdminMessage_InputEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AdminMessage_InputEvent, _impl_._cached_size_),
          false,
      },
      &AdminMessage_InputEvent::kDescriptorMethods,
      &descriptor_table_meshtastic_2fadmin_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AdminMessage_InputEvent_class_data_ =
        AdminMessage_InputEvent::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AdminMessage_InputEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AdminMessage_InputEvent_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AdminMessage_InputEvent_class_data_.tc_table);
  return AdminMessage_InputEvent_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
AdminMessage_InputEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AdminMessage_InputEvent, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    AdminMessage_InputEvent_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::AdminMessage_InputEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 touch_y = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AdminMessage_InputEvent, _impl_.touch_y_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(AdminMessage_InputEvent, _impl_.touch_y_)}},
    // uint32 event_code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AdminMessage_InputEvent, _impl_.event_code_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AdminMessage_InputEvent, _impl_.event_code_)}},
    // uint32 kb_char = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AdminMessage_InputEvent, _impl_.kb_char_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(AdminMessage_InputEvent, _impl_.kb_char_)}},
    // uint32 touch_x = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AdminMessage_InputEvent, _impl_.touch_x_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(AdminMessage_InputEvent, _impl_.touch_x_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 event_code = 1;
    {PROTOBUF_FIELD_OFFSET(AdminMessage_InputEvent, _impl_.event_code_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 kb_char = 2;
    {PROTOBUF_FIELD_OFFSET(AdminMessage_InputEvent, _impl_.kb_char_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 touch_x = 3;
    {PROTOBUF_FIELD_OFFSET(AdminMessage_InputEvent, _impl_.touch_x_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 touch_y = 4;
    {PROTOBUF_FIELD_OFFSET(AdminMessage_InputEvent, _impl_.touch_y_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void AdminMessage_InputEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.AdminMessage.InputEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    ::memset(&_impl_.event_code_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.touch_y_) -
        reinterpret_cast<char*>(&_impl_.event_code_)) + sizeof(_impl_.touch_y_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AdminMessage_InputEvent::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AdminMessage_InputEvent& this_ = static_cast<const AdminMessage_InputEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AdminMessage_InputEvent::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AdminMessage_InputEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.AdminMessage.InputEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 event_code = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_event_code() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_event_code(), target);
    }
  }

  // uint32 kb_char = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_kb_char() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_kb_char(), target);
    }
  }

  // uint32 touch_x = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_touch_x() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_touch_x(), target);
    }
  }

  // uint32 touch_y = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_touch_y() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          4, this_._internal_touch_y(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.AdminMessage.InputEvent)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AdminMessage_InputEvent::ByteSizeLong(const MessageLite& base) {
  const AdminMessage_InputEvent& this_ = static_cast<const AdminMessage_InputEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AdminMessage_InputEvent::ByteSizeLong() const {
  const AdminMessage_InputEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.AdminMessage.InputEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // uint32 event_code = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_event_code() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_event_code());
      }
    }
    // uint32 kb_char = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_kb_char() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_kb_char());
      }
    }
    // uint32 touch_x = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_touch_x() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_touch_x());
      }
    }
    // uint32 touch_y = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_touch_y() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_touch_y());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AdminMessage_InputEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AdminMessage_InputEvent*>(&to_msg);
  auto& from = static_cast<const AdminMessage_InputEvent&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.AdminMessage.InputEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_event_code() != 0) {
        _this->_impl_.event_code_ = from._impl_.event_code_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_kb_char() != 0) {
        _this->_impl_.kb_char_ = from._impl_.kb_char_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_touch_x() != 0) {
        _this->_impl_.touch_x_ = from._impl_.touch_x_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_touch_y() != 0) {
        _this->_impl_.touch_y_ = from._impl_.touch_y_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AdminMessage_InputEvent::CopyFrom(const AdminMessage_InputEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.AdminMessage.InputEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AdminMessage_InputEvent::InternalSwap(AdminMessage_InputEvent* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AdminMessage_InputEvent, _impl_.touch_y_)
      + sizeof(AdminMessage_InputEvent::_impl_.touch_y_)
      - PROTOBUF_FIELD_OFFSET(AdminMessage_InputEvent, _impl_.event_code_)>(
          reinterpret_cast<char*>(&_impl_.event_code_),
          reinterpret_cast<char*>(&other->_impl_.event_code_));
}

::google::protobuf::Metadata AdminMessage_InputEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AdminMessage::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AdminMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::meshtastic::AdminMessage, _impl_._oneof_case_);
};

void AdminMessage::set_allocated_get_channel_response(::meshtastic::Channel* PROTOBUF_NULLABLE get_channel_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (get_channel_response) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(get_channel_response)->GetArena();
    if (message_arena != submessage_arena) {
      get_channel_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_channel_response, submessage_arena);
    }
    set_has_get_channel_response();
    _impl_.payload_variant_.get_channel_response_ = get_channel_response;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.AdminMessage.get_channel_response)
}
void AdminMessage::clear_get_channel_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kGetChannelResponse) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.get_channel_response_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.get_channel_response_);
    }
    clear_has_payload_variant();
  }
}
void AdminMessage::set_allocated_get_owner_response(::meshtastic::User* PROTOBUF_NULLABLE get_owner_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (get_owner_response) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(get_owner_response)->GetArena();
    if (message_arena != submessage_arena) {
      get_owner_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_owner_response, submessage_arena);
    }
    set_has_get_owner_response();
    _impl_.payload_variant_.get_owner_response_ = get_owner_response;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.AdminMessage.get_owner_response)
}
void AdminMessage::clear_get_owner_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kGetOwnerResponse) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.get_owner_response_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.get_owner_response_);
    }
    clear_has_payload_variant();
  }
}
void AdminMessage::set_allocated_get_config_response(::meshtastic::Config* PROTOBUF_NULLABLE get_config_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (get_config_response) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(get_config_response)->GetArena();
    if (message_arena != submessage_arena) {
      get_config_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_config_response, submessage_arena);
    }
    set_has_get_config_response();
    _impl_.payload_variant_.get_config_response_ = get_config_response;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.AdminMessage.get_config_response)
}
void AdminMessage::clear_get_config_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kGetConfigResponse) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.get_config_response_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.get_config_response_);
    }
    clear_has_payload_variant();
  }
}
void AdminMessage::set_allocated_get_module_config_response(::meshtastic::ModuleConfig* PROTOBUF_NULLABLE get_module_config_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (get_module_config_response) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(get_module_config_response)->GetArena();
    if (message_arena != submessage_arena) {
      get_module_config_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_module_config_response, submessage_arena);
    }
    set_has_get_module_config_response();
    _impl_.payload_variant_.get_module_config_response_ = get_module_config_response;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.AdminMessage.get_module_config_response)
}
void AdminMessage::clear_get_module_config_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kGetModuleConfigResponse) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.get_module_config_response_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.get_module_config_response_);
    }
    clear_has_payload_variant();
  }
}
void AdminMessage::set_allocated_get_device_metadata_response(::meshtastic::DeviceMetadata* PROTOBUF_NULLABLE get_device_metadata_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (get_device_metadata_response) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(get_device_metadata_response)->GetArena();
    if (message_arena != submessage_arena) {
      get_device_metadata_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_device_metadata_response, submessage_arena);
    }
    set_has_get_device_metadata_response();
    _impl_.payload_variant_.get_device_metadata_response_ = get_device_metadata_response;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.AdminMessage.get_device_metadata_response)
}
void AdminMessage::clear_get_device_metadata_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kGetDeviceMetadataResponse) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.get_device_metadata_response_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.get_device_metadata_response_);
    }
    clear_has_payload_variant();
  }
}
void AdminMessage::set_allocated_get_device_connection_status_response(::meshtastic::DeviceConnectionStatus* PROTOBUF_NULLABLE get_device_connection_status_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (get_device_connection_status_response) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(get_device_connection_status_response)->GetArena();
    if (message_arena != submessage_arena) {
      get_device_connection_status_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_device_connection_status_response, submessage_arena);
    }
    set_has_get_device_connection_status_response();
    _impl_.payload_variant_.get_device_connection_status_response_ = get_device_connection_status_response;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.AdminMessage.get_device_connection_status_response)
}
void AdminMessage::clear_get_device_connection_status_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kGetDeviceConnectionStatusResponse) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.get_device_connection_status_response_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.get_device_connection_status_response_);
    }
    clear_has_payload_variant();
  }
}
void AdminMessage::set_allocated_set_ham_mode(::meshtastic::HamParameters* PROTOBUF_NULLABLE set_ham_mode) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (set_ham_mode) {
    ::google::protobuf::Arena* submessage_arena = set_ham_mode->GetArena();
    if (message_arena != submessage_arena) {
      set_ham_mode = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_ham_mode, submessage_arena);
    }
    set_has_set_ham_mode();
    _impl_.payload_variant_.set_ham_mode_ = set_ham_mode;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.AdminMessage.set_ham_mode)
}
void AdminMessage::set_allocated_get_node_remote_hardware_pins_response(::meshtastic::NodeRemoteHardwarePinsResponse* PROTOBUF_NULLABLE get_node_remote_hardware_pins_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (get_node_remote_hardware_pins_response) {
    ::google::protobuf::Arena* submessage_arena = get_node_remote_hardware_pins_response->GetArena();
    if (message_arena != submessage_arena) {
      get_node_remote_hardware_pins_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_node_remote_hardware_pins_response, submessage_arena);
    }
    set_has_get_node_remote_hardware_pins_response();
    _impl_.payload_variant_.get_node_remote_hardware_pins_response_ = get_node_remote_hardware_pins_response;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.AdminMessage.get_node_remote_hardware_pins_response)
}
void AdminMessage::set_allocated_send_input_event(::meshtastic::AdminMessage_InputEvent* PROTOBUF_NULLABLE send_input_event) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (send_input_event) {
    ::google::protobuf::Arena* submessage_arena = send_input_event->GetArena();
    if (message_arena != submessage_arena) {
      send_input_event = ::google::protobuf::internal::GetOwnedMessage(message_arena, send_input_event, submessage_arena);
    }
    set_has_send_input_event();
    _impl_.payload_variant_.send_input_event_ = send_input_event;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.AdminMessage.send_input_event)
}
void AdminMessage::set_allocated_set_owner(::meshtastic::User* PROTOBUF_NULLABLE set_owner) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (set_owner) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(set_owner)->GetArena();
    if (message_arena != submessage_arena) {
      set_owner = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_owner, submessage_arena);
    }
    set_has_set_owner();
    _impl_.payload_variant_.set_owner_ = set_owner;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.AdminMessage.set_owner)
}
void AdminMessage::clear_set_owner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kSetOwner) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.set_owner_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.set_owner_);
    }
    clear_has_payload_variant();
  }
}
void AdminMessage::set_allocated_set_channel(::meshtastic::Channel* PROTOBUF_NULLABLE set_channel) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (set_channel) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(set_channel)->GetArena();
    if (message_arena != submessage_arena) {
      set_channel = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_channel, submessage_arena);
    }
    set_has_set_channel();
    _impl_.payload_variant_.set_channel_ = set_channel;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.AdminMessage.set_channel)
}
void AdminMessage::clear_set_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kSetChannel) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.set_channel_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.set_channel_);
    }
    clear_has_payload_variant();
  }
}
void AdminMessage::set_allocated_set_config(::meshtastic::Config* PROTOBUF_NULLABLE set_config) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (set_config) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(set_config)->GetArena();
    if (message_arena != submessage_arena) {
      set_config = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_config, submessage_arena);
    }
    set_has_set_config();
    _impl_.payload_variant_.set_config_ = set_config;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.AdminMessage.set_config)
}
void AdminMessage::clear_set_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kSetConfig) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.set_config_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.set_config_);
    }
    clear_has_payload_variant();
  }
}
void AdminMessage::set_allocated_set_module_config(::meshtastic::ModuleConfig* PROTOBUF_NULLABLE set_module_config) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (set_module_config) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(set_module_config)->GetArena();
    if (message_arena != submessage_arena) {
      set_module_config = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_module_config, submessage_arena);
    }
    set_has_set_module_config();
    _impl_.payload_variant_.set_module_config_ = set_module_config;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.AdminMessage.set_module_config)
}
void AdminMessage::clear_set_module_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kSetModuleConfig) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.set_module_config_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.set_module_config_);
    }
    clear_has_payload_variant();
  }
}
void AdminMessage::set_allocated_set_fixed_position(::meshtastic::Position* PROTOBUF_NULLABLE set_fixed_position) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (set_fixed_position) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(set_fixed_position)->GetArena();
    if (message_arena != submessage_arena) {
      set_fixed_position = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_fixed_position, submessage_arena);
    }
    set_has_set_fixed_position();
    _impl_.payload_variant_.set_fixed_position_ = set_fixed_position;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.AdminMessage.set_fixed_position)
}
void AdminMessage::clear_set_fixed_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kSetFixedPosition) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.set_fixed_position_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.set_fixed_position_);
    }
    clear_has_payload_variant();
  }
}
void AdminMessage::set_allocated_get_ui_config_response(::meshtastic::DeviceUIConfig* PROTOBUF_NULLABLE get_ui_config_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (get_ui_config_response) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(get_ui_config_response)->GetArena();
    if (message_arena != submessage_arena) {
      get_ui_config_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_ui_config_response, submessage_arena);
    }
    set_has_get_ui_config_response();
    _impl_.payload_variant_.get_ui_config_response_ = get_ui_config_response;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.AdminMessage.get_ui_config_response)
}
void AdminMessage::clear_get_ui_config_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kGetUiConfigResponse) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.get_ui_config_response_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.get_ui_config_response_);
    }
    clear_has_payload_variant();
  }
}
void AdminMessage::set_allocated_store_ui_config(::meshtastic::DeviceUIConfig* PROTOBUF_NULLABLE store_ui_config) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (store_ui_config) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(store_ui_config)->GetArena();
    if (message_arena != submessage_arena) {
      store_ui_config = ::google::protobuf::internal::GetOwnedMessage(message_arena, store_ui_config, submessage_arena);
    }
    set_has_store_ui_config();
    _impl_.payload_variant_.store_ui_config_ = store_ui_config;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.AdminMessage.store_ui_config)
}
void AdminMessage::clear_store_ui_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_variant_case() == kStoreUiConfig) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_variant_.store_ui_config_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.store_ui_config_);
    }
    clear_has_payload_variant();
  }
}
void AdminMessage::set_allocated_add_contact(::meshtastic::SharedContact* PROTOBUF_NULLABLE add_contact) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (add_contact) {
    ::google::protobuf::Arena* submessage_arena = add_contact->GetArena();
    if (message_arena != submessage_arena) {
      add_contact = ::google::protobuf::internal::GetOwnedMessage(message_arena, add_contact, submessage_arena);
    }
    set_has_add_contact();
    _impl_.payload_variant_.add_contact_ = add_contact;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.AdminMessage.add_contact)
}
void AdminMessage::set_allocated_key_verification(::meshtastic::KeyVerificationAdmin* PROTOBUF_NULLABLE key_verification) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload_variant();
  if (key_verification) {
    ::google::protobuf::Arena* submessage_arena = key_verification->GetArena();
    if (message_arena != submessage_arena) {
      key_verification = ::google::protobuf::internal::GetOwnedMessage(message_arena, key_verification, submessage_arena);
    }
    set_has_key_verification();
    _impl_.payload_variant_.key_verification_ = key_verification;
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.AdminMessage.key_verification)
}
AdminMessage::AdminMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AdminMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.AdminMessage)
}
PROTOBUF_NDEBUG_INLINE AdminMessage::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::meshtastic::AdminMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        session_passkey_(arena, from.session_passkey_),
        payload_variant_{},
        _oneof_case_{from._oneof_case_[0]} {}

AdminMessage::AdminMessage(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AdminMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AdminMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AdminMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (payload_variant_case()) {
    case PAYLOAD_VARIANT_NOT_SET:
      break;
      case kGetChannelRequest:
        _impl_.payload_variant_.get_channel_request_ = from._impl_.payload_variant_.get_channel_request_;
        break;
      case kGetChannelResponse:
        _impl_.payload_variant_.get_channel_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.get_channel_response_);
        break;
      case kGetOwnerRequest:
        _impl_.payload_variant_.get_owner_request_ = from._impl_.payload_variant_.get_owner_request_;
        break;
      case kGetOwnerResponse:
        _impl_.payload_variant_.get_owner_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.get_owner_response_);
        break;
      case kGetConfigRequest:
        _impl_.payload_variant_.get_config_request_ = from._impl_.payload_variant_.get_config_request_;
        break;
      case kGetConfigResponse:
        _impl_.payload_variant_.get_config_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.get_config_response_);
        break;
      case kGetModuleConfigRequest:
        _impl_.payload_variant_.get_module_config_request_ = from._impl_.payload_variant_.get_module_config_request_;
        break;
      case kGetModuleConfigResponse:
        _impl_.payload_variant_.get_module_config_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.get_module_config_response_);
        break;
      case kGetCannedMessageModuleMessagesRequest:
        _impl_.payload_variant_.get_canned_message_module_messages_request_ = from._impl_.payload_variant_.get_canned_message_module_messages_request_;
        break;
      case kGetCannedMessageModuleMessagesResponse:
        new (&_impl_.payload_variant_.get_canned_message_module_messages_response_) decltype(_impl_.payload_variant_.get_canned_message_module_messages_response_){arena, from._impl_.payload_variant_.get_canned_message_module_messages_response_};
        break;
      case kGetDeviceMetadataRequest:
        _impl_.payload_variant_.get_device_metadata_request_ = from._impl_.payload_variant_.get_device_metadata_request_;
        break;
      case kGetDeviceMetadataResponse:
        _impl_.payload_variant_.get_device_metadata_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.get_device_metadata_response_);
        break;
      case kGetRingtoneRequest:
        _impl_.payload_variant_.get_ringtone_request_ = from._impl_.payload_variant_.get_ringtone_request_;
        break;
      case kGetRingtoneResponse:
        new (&_impl_.payload_variant_.get_ringtone_response_) decltype(_impl_.payload_variant_.get_ringtone_response_){arena, from._impl_.payload_variant_.get_ringtone_response_};
        break;
      case kGetDeviceConnectionStatusRequest:
        _impl_.payload_variant_.get_device_connection_status_request_ = from._impl_.payload_variant_.get_device_connection_status_request_;
        break;
      case kGetDeviceConnectionStatusResponse:
        _impl_.payload_variant_.get_device_connection_status_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.get_device_connection_status_response_);
        break;
      case kSetHamMode:
        _impl_.payload_variant_.set_ham_mode_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.set_ham_mode_);
        break;
      case kGetNodeRemoteHardwarePinsRequest:
        _impl_.payload_variant_.get_node_remote_hardware_pins_request_ = from._impl_.payload_variant_.get_node_remote_hardware_pins_request_;
        break;
      case kGetNodeRemoteHardwarePinsResponse:
        _impl_.payload_variant_.get_node_remote_hardware_pins_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.get_node_remote_hardware_pins_response_);
        break;
      case kEnterDfuModeRequest:
        _impl_.payload_variant_.enter_dfu_mode_request_ = from._impl_.payload_variant_.enter_dfu_mode_request_;
        break;
      case kDeleteFileRequest:
        new (&_impl_.payload_variant_.delete_file_request_) decltype(_impl_.payload_variant_.delete_file_request_){arena, from._impl_.payload_variant_.delete_file_request_};
        break;
      case kSetScale:
        _impl_.payload_variant_.set_scale_ = from._impl_.payload_variant_.set_scale_;
        break;
      case kBackupPreferences:
        _impl_.payload_variant_.backup_preferences_ = from._impl_.payload_variant_.backup_preferences_;
        break;
      case kRestorePreferences:
        _impl_.payload_variant_.restore_preferences_ = from._impl_.payload_variant_.restore_preferences_;
        break;
      case kRemoveBackupPreferences:
        _impl_.payload_variant_.remove_backup_preferences_ = from._impl_.payload_variant_.remove_backup_preferences_;
        break;
      case kSendInputEvent:
        _impl_.payload_variant_.send_input_event_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.send_input_event_);
        break;
      case kSetOwner:
        _impl_.payload_variant_.set_owner_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.set_owner_);
        break;
      case kSetChannel:
        _impl_.payload_variant_.set_channel_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.set_channel_);
        break;
      case kSetConfig:
        _impl_.payload_variant_.set_config_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.set_config_);
        break;
      case kSetModuleConfig:
        _impl_.payload_variant_.set_module_config_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.set_module_config_);
        break;
      case kSetCannedMessageModuleMessages:
        new (&_impl_.payload_variant_.set_canned_message_module_messages_) decltype(_impl_.payload_variant_.set_canned_message_module_messages_){arena, from._impl_.payload_variant_.set_canned_message_module_messages_};
        break;
      case kSetRingtoneMessage:
        new (&_impl_.payload_variant_.set_ringtone_message_) decltype(_impl_.payload_variant_.set_ringtone_message_){arena, from._impl_.payload_variant_.set_ringtone_message_};
        break;
      case kRemoveByNodenum:
        _impl_.payload_variant_.remove_by_nodenum_ = from._impl_.payload_variant_.remove_by_nodenum_;
        break;
      case kSetFavoriteNode:
        _impl_.payload_variant_.set_favorite_node_ = from._impl_.payload_variant_.set_favorite_node_;
        break;
      case kRemoveFavoriteNode:
        _impl_.payload_variant_.remove_favorite_node_ = from._impl_.payload_variant_.remove_favorite_node_;
        break;
      case kSetFixedPosition:
        _impl_.payload_variant_.set_fixed_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.set_fixed_position_);
        break;
      case kRemoveFixedPosition:
        _impl_.payload_variant_.remove_fixed_position_ = from._impl_.payload_variant_.remove_fixed_position_;
        break;
      case kSetTimeOnly:
        _impl_.payload_variant_.set_time_only_ = from._impl_.payload_variant_.set_time_only_;
        break;
      case kGetUiConfigRequest:
        _impl_.payload_variant_.get_ui_config_request_ = from._impl_.payload_variant_.get_ui_config_request_;
        break;
      case kGetUiConfigResponse:
        _impl_.payload_variant_.get_ui_config_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.get_ui_config_response_);
        break;
      case kStoreUiConfig:
        _impl_.payload_variant_.store_ui_config_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.store_ui_config_);
        break;
      case kSetIgnoredNode:
        _impl_.payload_variant_.set_ignored_node_ = from._impl_.payload_variant_.set_ignored_node_;
        break;
      case kRemoveIgnoredNode:
        _impl_.payload_variant_.remove_ignored_node_ = from._impl_.payload_variant_.remove_ignored_node_;
        break;
      case kBeginEditSettings:
        _impl_.payload_variant_.begin_edit_settings_ = from._impl_.payload_variant_.begin_edit_settings_;
        break;
      case kCommitEditSettings:
        _impl_.payload_variant_.commit_edit_settings_ = from._impl_.payload_variant_.commit_edit_settings_;
        break;
      case kAddContact:
        _impl_.payload_variant_.add_contact_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.add_contact_);
        break;
      case kKeyVerification:
        _impl_.payload_variant_.key_verification_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.key_verification_);
        break;
      case kFactoryResetDevice:
        _impl_.payload_variant_.factory_reset_device_ = from._impl_.payload_variant_.factory_reset_device_;
        break;
      case kRebootOtaSeconds:
        _impl_.payload_variant_.reboot_ota_seconds_ = from._impl_.payload_variant_.reboot_ota_seconds_;
        break;
      case kExitSimulator:
        _impl_.payload_variant_.exit_simulator_ = from._impl_.payload_variant_.exit_simulator_;
        break;
      case kRebootSeconds:
        _impl_.payload_variant_.reboot_seconds_ = from._impl_.payload_variant_.reboot_seconds_;
        break;
      case kShutdownSeconds:
        _impl_.payload_variant_.shutdown_seconds_ = from._impl_.payload_variant_.shutdown_seconds_;
        break;
      case kFactoryResetConfig:
        _impl_.payload_variant_.factory_reset_config_ = from._impl_.payload_variant_.factory_reset_config_;
        break;
      case kNodedbReset:
        _impl_.payload_variant_.nodedb_reset_ = from._impl_.payload_variant_.nodedb_reset_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:meshtastic.AdminMessage)
}
PROTOBUF_NDEBUG_INLINE AdminMessage::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        session_passkey_(arena),
        payload_variant_{},
        _oneof_case_{} {}

inline void AdminMessage::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AdminMessage::~AdminMessage() {
  // @@protoc_insertion_point(destructor:meshtastic.AdminMessage)
  SharedDtor(*this);
}
inline void AdminMessage::SharedDtor(MessageLite& self) {
  AdminMessage& this_ = static_cast<AdminMessage&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.session_passkey_.Destroy();
  if (this_.has_payload_variant()) {
    this_.clear_payload_variant();
  }
  this_._impl_.~Impl_();
}

void AdminMessage::clear_payload_variant() {
// @@protoc_insertion_point(one_of_clear_start:meshtastic.AdminMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_variant_case()) {
    case kGetChannelRequest: {
      // No need to clear
      break;
    }
    case kGetChannelResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.get_channel_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.get_channel_response_);
      }
      break;
    }
    case kGetOwnerRequest: {
      // No need to clear
      break;
    }
    case kGetOwnerResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.get_owner_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.get_owner_response_);
      }
      break;
    }
    case kGetConfigRequest: {
      // No need to clear
      break;
    }
    case kGetConfigResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.get_config_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.get_config_response_);
      }
      break;
    }
    case kGetModuleConfigRequest: {
      // No need to clear
      break;
    }
    case kGetModuleConfigResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.get_module_config_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.get_module_config_response_);
      }
      break;
    }
    case kGetCannedMessageModuleMessagesRequest: {
      // No need to clear
      break;
    }
    case kGetCannedMessageModuleMessagesResponse: {
      _impl_.payload_variant_.get_canned_message_module_messages_response_.Destroy();
      break;
    }
    case kGetDeviceMetadataRequest: {
      // No need to clear
      break;
    }
    case kGetDeviceMetadataResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.get_device_metadata_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.get_device_metadata_response_);
      }
      break;
    }
    case kGetRingtoneRequest: {
      // No need to clear
      break;
    }
    case kGetRingtoneResponse: {
      _impl_.payload_variant_.get_ringtone_response_.Destroy();
      break;
    }
    case kGetDeviceConnectionStatusRequest: {
      // No need to clear
      break;
    }
    case kGetDeviceConnectionStatusResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.get_device_connection_status_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.get_device_connection_status_response_);
      }
      break;
    }
    case kSetHamMode: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.set_ham_mode_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.set_ham_mode_);
      }
      break;
    }
    case kGetNodeRemoteHardwarePinsRequest: {
      // No need to clear
      break;
    }
    case kGetNodeRemoteHardwarePinsResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.get_node_remote_hardware_pins_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.get_node_remote_hardware_pins_response_);
      }
      break;
    }
    case kEnterDfuModeRequest: {
      // No need to clear
      break;
    }
    case kDeleteFileRequest: {
      _impl_.payload_variant_.delete_file_request_.Destroy();
      break;
    }
    case kSetScale: {
      // No need to clear
      break;
    }
    case kBackupPreferences: {
      // No need to clear
      break;
    }
    case kRestorePreferences: {
      // No need to clear
      break;
    }
    case kRemoveBackupPreferences: {
      // No need to clear
      break;
    }
    case kSendInputEvent: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.send_input_event_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.send_input_event_);
      }
      break;
    }
    case kSetOwner: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.set_owner_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.set_owner_);
      }
      break;
    }
    case kSetChannel: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.set_channel_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.set_channel_);
      }
      break;
    }
    case kSetConfig: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.set_config_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.set_config_);
      }
      break;
    }
    case kSetModuleConfig: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.set_module_config_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.set_module_config_);
      }
      break;
    }
    case kSetCannedMessageModuleMessages: {
      _impl_.payload_variant_.set_canned_message_module_messages_.Destroy();
      break;
    }
    case kSetRingtoneMessage: {
      _impl_.payload_variant_.set_ringtone_message_.Destroy();
      break;
    }
    case kRemoveByNodenum: {
      // No need to clear
      break;
    }
    case kSetFavoriteNode: {
      // No need to clear
      break;
    }
    case kRemoveFavoriteNode: {
      // No need to clear
      break;
    }
    case kSetFixedPosition: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.set_fixed_position_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.set_fixed_position_);
      }
      break;
    }
    case kRemoveFixedPosition: {
      // No need to clear
      break;
    }
    case kSetTimeOnly: {
      // No need to clear
      break;
    }
    case kGetUiConfigRequest: {
      // No need to clear
      break;
    }
    case kGetUiConfigResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.get_ui_config_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.get_ui_config_response_);
      }
      break;
    }
    case kStoreUiConfig: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.store_ui_config_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.store_ui_config_);
      }
      break;
    }
    case kSetIgnoredNode: {
      // No need to clear
      break;
    }
    case kRemoveIgnoredNode: {
      // No need to clear
      break;
    }
    case kBeginEditSettings: {
      // No need to clear
      break;
    }
    case kCommitEditSettings: {
      // No need to clear
      break;
    }
    case kAddContact: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.add_contact_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.add_contact_);
      }
      break;
    }
    case kKeyVerification: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_variant_.key_verification_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_variant_.key_verification_);
      }
      break;
    }
    case kFactoryResetDevice: {
      // No need to clear
      break;
    }
    case kRebootOtaSeconds: {
      // No need to clear
      break;
    }
    case kExitSimulator: {
      // No need to clear
      break;
    }
    case kRebootSeconds: {
      // No need to clear
      break;
    }
    case kShutdownSeconds: {
      // No need to clear
      break;
    }
    case kFactoryResetConfig: {
      // No need to clear
      break;
    }
    case kNodedbReset: {
      // No need to clear
      break;
    }
    case PAYLOAD_VARIANT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_VARIANT_NOT_SET;
}


inline void* PROTOBUF_NONNULL AdminMessage::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AdminMessage(arena);
}
constexpr auto AdminMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AdminMessage),
                                            alignof(AdminMessage));
}
constexpr auto AdminMessage::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AdminMessage_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AdminMessage::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AdminMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AdminMessage::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AdminMessage>(), &AdminMessage::ByteSizeLong,
              &AdminMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_._cached_size_),
          false,
      },
      &AdminMessage::kDescriptorMethods,
      &descriptor_table_meshtastic_2fadmin_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AdminMessage_class_data_ =
        AdminMessage::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AdminMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AdminMessage_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AdminMessage_class_data_.tc_table);
  return AdminMessage_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 55, 18, 217, 15>
AdminMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_._has_bits_),
    0, // no _extensions_
    101, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    2013266176,  // skipmap
    offsetof(decltype(_table_), field_entries),
    55,  // num_field_entries
    18,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AdminMessage_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::AdminMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes session_passkey = 101;
    {::_pbi::TcParser::FastBS2,
     {1706, 0, 0, PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.session_passkey_)}},
  }}, {{
    33, 0, 5,
    0, 27,
    32767, 43,
    65528, 44,
    8191, 47,
    65504, 50,
    65535, 65535
  }}, {{
    // uint32 get_channel_request = 1;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_channel_request_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // .meshtastic.Channel get_channel_response = 2;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_channel_response_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool get_owner_request = 3;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_owner_request_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // .meshtastic.User get_owner_response = 4;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_owner_response_), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.AdminMessage.ConfigType get_config_request = 5;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_config_request_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .meshtastic.Config get_config_response = 6;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_config_response_), _Internal::kOneofCaseOffset + 0, 2, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.AdminMessage.ModuleConfigType get_module_config_request = 7;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_module_config_request_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .meshtastic.ModuleConfig get_module_config_response = 8;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_module_config_response_), _Internal::kOneofCaseOffset + 0, 3, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool get_canned_message_module_messages_request = 10;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_canned_message_module_messages_request_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // string get_canned_message_module_messages_response = 11;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_canned_message_module_messages_response_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool get_device_metadata_request = 12;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_device_metadata_request_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // .meshtastic.DeviceMetadata get_device_metadata_response = 13;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_device_metadata_response_), _Internal::kOneofCaseOffset + 0, 4, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool get_ringtone_request = 14;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_ringtone_request_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // string get_ringtone_response = 15;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_ringtone_response_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool get_device_connection_status_request = 16;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_device_connection_status_request_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // .meshtastic.DeviceConnectionStatus get_device_connection_status_response = 17;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_device_connection_status_response_), _Internal::kOneofCaseOffset + 0, 5, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.HamParameters set_ham_mode = 18;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.set_ham_mode_), _Internal::kOneofCaseOffset + 0, 6, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool get_node_remote_hardware_pins_request = 19;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_node_remote_hardware_pins_request_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // .meshtastic.NodeRemoteHardwarePinsResponse get_node_remote_hardware_pins_response = 20;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_node_remote_hardware_pins_response_), _Internal::kOneofCaseOffset + 0, 7, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool enter_dfu_mode_request = 21;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.enter_dfu_mode_request_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // string delete_file_request = 22;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.delete_file_request_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 set_scale = 23;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.set_scale_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // .meshtastic.AdminMessage.BackupLocation backup_preferences = 24;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.backup_preferences_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .meshtastic.AdminMessage.BackupLocation restore_preferences = 25;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.restore_preferences_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .meshtastic.AdminMessage.BackupLocation remove_backup_preferences = 26;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.remove_backup_preferences_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .meshtastic.AdminMessage.InputEvent send_input_event = 27;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.send_input_event_), _Internal::kOneofCaseOffset + 0, 8, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.User set_owner = 32;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.set_owner_), _Internal::kOneofCaseOffset + 0, 9, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.Channel set_channel = 33;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.set_channel_), _Internal::kOneofCaseOffset + 0, 10, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.Config set_config = 34;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.set_config_), _Internal::kOneofCaseOffset + 0, 11, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.ModuleConfig set_module_config = 35;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.set_module_config_), _Internal::kOneofCaseOffset + 0, 12, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string set_canned_message_module_messages = 36;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.set_canned_message_module_messages_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string set_ringtone_message = 37;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.set_ringtone_message_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 remove_by_nodenum = 38;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.remove_by_nodenum_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // uint32 set_favorite_node = 39;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.set_favorite_node_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // uint32 remove_favorite_node = 40;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.remove_favorite_node_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // .meshtastic.Position set_fixed_position = 41;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.set_fixed_position_), _Internal::kOneofCaseOffset + 0, 13, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool remove_fixed_position = 42;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.remove_fixed_position_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // fixed32 set_time_only = 43;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.set_time_only_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kFixed32)},
    // bool get_ui_config_request = 44;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_ui_config_request_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // .meshtastic.DeviceUIConfig get_ui_config_response = 45;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.get_ui_config_response_), _Internal::kOneofCaseOffset + 0, 14, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.DeviceUIConfig store_ui_config = 46;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.store_ui_config_), _Internal::kOneofCaseOffset + 0, 15, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 set_ignored_node = 47;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.set_ignored_node_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // uint32 remove_ignored_node = 48;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.remove_ignored_node_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // bool begin_edit_settings = 64;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.begin_edit_settings_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // bool commit_edit_settings = 65;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.commit_edit_settings_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // .meshtastic.SharedContact add_contact = 66;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.add_contact_), _Internal::kOneofCaseOffset + 0, 16, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .meshtastic.KeyVerificationAdmin key_verification = 67;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.key_verification_), _Internal::kOneofCaseOffset + 0, 17, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 factory_reset_device = 94;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.factory_reset_device_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // int32 reboot_ota_seconds = 95;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.reboot_ota_seconds_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // bool exit_simulator = 96;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.exit_simulator_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // int32 reboot_seconds = 97;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.reboot_seconds_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // int32 shutdown_seconds = 98;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.shutdown_seconds_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // int32 factory_reset_config = 99;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.factory_reset_config_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // int32 nodedb_reset = 100;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.payload_variant_.nodedb_reset_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // bytes session_passkey = 101;
    {PROTOBUF_FIELD_OFFSET(AdminMessage, _impl_.session_passkey_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::Channel>()},
      {::_pbi::TcParser::GetTable<::meshtastic::User>()},
      {::_pbi::TcParser::GetTable<::meshtastic::Config>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::DeviceMetadata>()},
      {::_pbi::TcParser::GetTable<::meshtastic::DeviceConnectionStatus>()},
      {::_pbi::TcParser::GetTable<::meshtastic::HamParameters>()},
      {::_pbi::TcParser::GetTable<::meshtastic::NodeRemoteHardwarePinsResponse>()},
      {::_pbi::TcParser::GetTable<::meshtastic::AdminMessage_InputEvent>()},
      {::_pbi::TcParser::GetTable<::meshtastic::User>()},
      {::_pbi::TcParser::GetTable<::meshtastic::Channel>()},
      {::_pbi::TcParser::GetTable<::meshtastic::Config>()},
      {::_pbi::TcParser::GetTable<::meshtastic::ModuleConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::Position>()},
      {::_pbi::TcParser::GetTable<::meshtastic::DeviceUIConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::DeviceUIConfig>()},
      {::_pbi::TcParser::GetTable<::meshtastic::SharedContact>()},
      {::_pbi::TcParser::GetTable<::meshtastic::KeyVerificationAdmin>()},
  }},
  {{
    "\27\0\0\0\0\0\0\0\0\0\53\0\0\0\25\0\0\0\0\0\0\23\0\0\0\0\0\0\0\0\0\42\24\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "meshtastic.AdminMessage"
    "get_canned_message_module_messages_response"
    "get_ringtone_response"
    "delete_file_request"
    "set_canned_message_module_messages"
    "set_ringtone_message"
  }},
};
PROTOBUF_NOINLINE void AdminMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.AdminMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.session_passkey_.ClearNonDefaultToEmpty();
  }
  clear_payload_variant();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AdminMessage::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AdminMessage& this_ = static_cast<const AdminMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AdminMessage::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AdminMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.AdminMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.payload_variant_case()) {
    case kGetChannelRequest: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_get_channel_request(), target);
      break;
    }
    case kGetChannelResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.payload_variant_.get_channel_response_, this_._impl_.payload_variant_.get_channel_response_->GetCachedSize(), target,
          stream);
      break;
    }
    case kGetOwnerRequest: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_get_owner_request(), target);
      break;
    }
    case kGetOwnerResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.payload_variant_.get_owner_response_, this_._impl_.payload_variant_.get_owner_response_->GetCachedSize(), target,
          stream);
      break;
    }
    case kGetConfigRequest: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_get_config_request(), target);
      break;
    }
    case kGetConfigResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *this_._impl_.payload_variant_.get_config_response_, this_._impl_.payload_variant_.get_config_response_->GetCachedSize(), target,
          stream);
      break;
    }
    case kGetModuleConfigRequest: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          7, this_._internal_get_module_config_request(), target);
      break;
    }
    case kGetModuleConfigResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, *this_._impl_.payload_variant_.get_module_config_response_, this_._impl_.payload_variant_.get_module_config_response_->GetCachedSize(), target,
          stream);
      break;
    }
    case kGetCannedMessageModuleMessagesRequest: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          10, this_._internal_get_canned_message_module_messages_request(), target);
      break;
    }
    case kGetCannedMessageModuleMessagesResponse: {
      const ::std::string& _s = this_._internal_get_canned_message_module_messages_response();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.AdminMessage.get_canned_message_module_messages_response");
      target = stream->WriteStringMaybeAliased(11, _s, target);
      break;
    }
    case kGetDeviceMetadataRequest: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          12, this_._internal_get_device_metadata_request(), target);
      break;
    }
    case kGetDeviceMetadataResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          13, *this_._impl_.payload_variant_.get_device_metadata_response_, this_._impl_.payload_variant_.get_device_metadata_response_->GetCachedSize(), target,
          stream);
      break;
    }
    case kGetRingtoneRequest: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          14, this_._internal_get_ringtone_request(), target);
      break;
    }
    case kGetRingtoneResponse: {
      const ::std::string& _s = this_._internal_get_ringtone_response();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.AdminMessage.get_ringtone_response");
      target = stream->WriteStringMaybeAliased(15, _s, target);
      break;
    }
    case kGetDeviceConnectionStatusRequest: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          16, this_._internal_get_device_connection_status_request(), target);
      break;
    }
    case kGetDeviceConnectionStatusResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          17, *this_._impl_.payload_variant_.get_device_connection_status_response_, this_._impl_.payload_variant_.get_device_connection_status_response_->GetCachedSize(), target,
          stream);
      break;
    }
    case kSetHamMode: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          18, *this_._impl_.payload_variant_.set_ham_mode_, this_._impl_.payload_variant_.set_ham_mode_->GetCachedSize(), target,
          stream);
      break;
    }
    case kGetNodeRemoteHardwarePinsRequest: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          19, this_._internal_get_node_remote_hardware_pins_request(), target);
      break;
    }
    case kGetNodeRemoteHardwarePinsResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          20, *this_._impl_.payload_variant_.get_node_remote_hardware_pins_response_, this_._impl_.payload_variant_.get_node_remote_hardware_pins_response_->GetCachedSize(), target,
          stream);
      break;
    }
    case kEnterDfuModeRequest: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          21, this_._internal_enter_dfu_mode_request(), target);
      break;
    }
    case kDeleteFileRequest: {
      const ::std::string& _s = this_._internal_delete_file_request();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.AdminMessage.delete_file_request");
      target = stream->WriteStringMaybeAliased(22, _s, target);
      break;
    }
    case kSetScale: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          23, this_._internal_set_scale(), target);
      break;
    }
    case kBackupPreferences: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          24, this_._internal_backup_preferences(), target);
      break;
    }
    case kRestorePreferences: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          25, this_._internal_restore_preferences(), target);
      break;
    }
    case kRemoveBackupPreferences: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          26, this_._internal_remove_backup_preferences(), target);
      break;
    }
    case kSendInputEvent: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          27, *this_._impl_.payload_variant_.send_input_event_, this_._impl_.payload_variant_.send_input_event_->GetCachedSize(), target,
          stream);
      break;
    }
    case kSetOwner: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          32, *this_._impl_.payload_variant_.set_owner_, this_._impl_.payload_variant_.set_owner_->GetCachedSize(), target,
          stream);
      break;
    }
    case kSetChannel: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          33, *this_._impl_.payload_variant_.set_channel_, this_._impl_.payload_variant_.set_channel_->GetCachedSize(), target,
          stream);
      break;
    }
    case kSetConfig: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          34, *this_._impl_.payload_variant_.set_config_, this_._impl_.payload_variant_.set_config_->GetCachedSize(), target,
          stream);
      break;
    }
    case kSetModuleConfig: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          35, *this_._impl_.payload_variant_.set_module_config_, this_._impl_.payload_variant_.set_module_config_->GetCachedSize(), target,
          stream);
      break;
    }
    case kSetCannedMessageModuleMessages: {
      const ::std::string& _s = this_._internal_set_canned_message_module_messages();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.AdminMessage.set_canned_message_module_messages");
      target = stream->WriteStringMaybeAliased(36, _s, target);
      break;
    }
    case kSetRingtoneMessage: {
      const ::std::string& _s = this_._internal_set_ringtone_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.AdminMessage.set_ringtone_message");
      target = stream->WriteStringMaybeAliased(37, _s, target);
      break;
    }
    case kRemoveByNodenum: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          38, this_._internal_remove_by_nodenum(), target);
      break;
    }
    case kSetFavoriteNode: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          39, this_._internal_set_favorite_node(), target);
      break;
    }
    case kRemoveFavoriteNode: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          40, this_._internal_remove_favorite_node(), target);
      break;
    }
    case kSetFixedPosition: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          41, *this_._impl_.payload_variant_.set_fixed_position_, this_._impl_.payload_variant_.set_fixed_position_->GetCachedSize(), target,
          stream);
      break;
    }
    case kRemoveFixedPosition: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          42, this_._internal_remove_fixed_position(), target);
      break;
    }
    case kSetTimeOnly: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
          43, this_._internal_set_time_only(), target);
      break;
    }
    case kGetUiConfigRequest: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          44, this_._internal_get_ui_config_request(), target);
      break;
    }
    case kGetUiConfigResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          45, *this_._impl_.payload_variant_.get_ui_config_response_, this_._impl_.payload_variant_.get_ui_config_response_->GetCachedSize(), target,
          stream);
      break;
    }
    case kStoreUiConfig: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          46, *this_._impl_.payload_variant_.store_ui_config_, this_._impl_.payload_variant_.store_ui_config_->GetCachedSize(), target,
          stream);
      break;
    }
    case kSetIgnoredNode: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          47, this_._internal_set_ignored_node(), target);
      break;
    }
    case kRemoveIgnoredNode: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          48, this_._internal_remove_ignored_node(), target);
      break;
    }
    case kBeginEditSettings: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          64, this_._internal_begin_edit_settings(), target);
      break;
    }
    case kCommitEditSettings: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          65, this_._internal_commit_edit_settings(), target);
      break;
    }
    case kAddContact: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          66, *this_._impl_.payload_variant_.add_contact_, this_._impl_.payload_variant_.add_contact_->GetCachedSize(), target,
          stream);
      break;
    }
    case kKeyVerification: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          67, *this_._impl_.payload_variant_.key_verification_, this_._impl_.payload_variant_.key_verification_->GetCachedSize(), target,
          stream);
      break;
    }
    case kFactoryResetDevice: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          94, this_._internal_factory_reset_device(), target);
      break;
    }
    case kRebootOtaSeconds: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          95, this_._internal_reboot_ota_seconds(), target);
      break;
    }
    case kExitSimulator: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          96, this_._internal_exit_simulator(), target);
      break;
    }
    case kRebootSeconds: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          97, this_._internal_reboot_seconds(), target);
      break;
    }
    case kShutdownSeconds: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          98, this_._internal_shutdown_seconds(), target);
      break;
    }
    case kFactoryResetConfig: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          99, this_._internal_factory_reset_config(), target);
      break;
    }
    case kNodedbReset: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          100, this_._internal_nodedb_reset(), target);
      break;
    }
    default:
      break;
  }
  // bytes session_passkey = 101;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_session_passkey().empty()) {
      const ::std::string& _s = this_._internal_session_passkey();
      target = stream->WriteBytesMaybeAliased(101, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.AdminMessage)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AdminMessage::ByteSizeLong(const MessageLite& base) {
  const AdminMessage& this_ = static_cast<const AdminMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AdminMessage::ByteSizeLong() const {
  const AdminMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.AdminMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // bytes session_passkey = 101;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_session_passkey().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_session_passkey());
      }
    }
  }
  switch (this_.payload_variant_case()) {
    // uint32 get_channel_request = 1;
    case kGetChannelRequest: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_get_channel_request());
      break;
    }
    // .meshtastic.Channel get_channel_response = 2;
    case kGetChannelResponse: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.get_channel_response_);
      break;
    }
    // bool get_owner_request = 3;
    case kGetOwnerRequest: {
      total_size += 2;
      break;
    }
    // .meshtastic.User get_owner_response = 4;
    case kGetOwnerResponse: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.get_owner_response_);
      break;
    }
    // .meshtastic.AdminMessage.ConfigType get_config_request = 5;
    case kGetConfigRequest: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_get_config_request());
      break;
    }
    // .meshtastic.Config get_config_response = 6;
    case kGetConfigResponse: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.get_config_response_);
      break;
    }
    // .meshtastic.AdminMessage.ModuleConfigType get_module_config_request = 7;
    case kGetModuleConfigRequest: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_get_module_config_request());
      break;
    }
    // .meshtastic.ModuleConfig get_module_config_response = 8;
    case kGetModuleConfigResponse: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.get_module_config_response_);
      break;
    }
    // bool get_canned_message_module_messages_request = 10;
    case kGetCannedMessageModuleMessagesRequest: {
      total_size += 2;
      break;
    }
    // string get_canned_message_module_messages_response = 11;
    case kGetCannedMessageModuleMessagesResponse: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_get_canned_message_module_messages_response());
      break;
    }
    // bool get_device_metadata_request = 12;
    case kGetDeviceMetadataRequest: {
      total_size += 2;
      break;
    }
    // .meshtastic.DeviceMetadata get_device_metadata_response = 13;
    case kGetDeviceMetadataResponse: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.get_device_metadata_response_);
      break;
    }
    // bool get_ringtone_request = 14;
    case kGetRingtoneRequest: {
      total_size += 2;
      break;
    }
    // string get_ringtone_response = 15;
    case kGetRingtoneResponse: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_get_ringtone_response());
      break;
    }
    // bool get_device_connection_status_request = 16;
    case kGetDeviceConnectionStatusRequest: {
      total_size += 3;
      break;
    }
    // .meshtastic.DeviceConnectionStatus get_device_connection_status_response = 17;
    case kGetDeviceConnectionStatusResponse: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.get_device_connection_status_response_);
      break;
    }
    // .meshtastic.HamParameters set_ham_mode = 18;
    case kSetHamMode: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.set_ham_mode_);
      break;
    }
    // bool get_node_remote_hardware_pins_request = 19;
    case kGetNodeRemoteHardwarePinsRequest: {
      total_size += 3;
      break;
    }
    // .meshtastic.NodeRemoteHardwarePinsResponse get_node_remote_hardware_pins_response = 20;
    case kGetNodeRemoteHardwarePinsResponse: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.get_node_remote_hardware_pins_response_);
      break;
    }
    // bool enter_dfu_mode_request = 21;
    case kEnterDfuModeRequest: {
      total_size += 3;
      break;
    }
    // string delete_file_request = 22;
    case kDeleteFileRequest: {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_delete_file_request());
      break;
    }
    // uint32 set_scale = 23;
    case kSetScale: {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_set_scale());
      break;
    }
    // .meshtastic.AdminMessage.BackupLocation backup_preferences = 24;
    case kBackupPreferences: {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_backup_preferences());
      break;
    }
    // .meshtastic.AdminMessage.BackupLocation restore_preferences = 25;
    case kRestorePreferences: {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_restore_preferences());
      break;
    }
    // .meshtastic.AdminMessage.BackupLocation remove_backup_preferences = 26;
    case kRemoveBackupPreferences: {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_remove_backup_preferences());
      break;
    }
    // .meshtastic.AdminMessage.InputEvent send_input_event = 27;
    case kSendInputEvent: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.send_input_event_);
      break;
    }
    // .meshtastic.User set_owner = 32;
    case kSetOwner: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.set_owner_);
      break;
    }
    // .meshtastic.Channel set_channel = 33;
    case kSetChannel: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.set_channel_);
      break;
    }
    // .meshtastic.Config set_config = 34;
    case kSetConfig: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.set_config_);
      break;
    }
    // .meshtastic.ModuleConfig set_module_config = 35;
    case kSetModuleConfig: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.set_module_config_);
      break;
    }
    // string set_canned_message_module_messages = 36;
    case kSetCannedMessageModuleMessages: {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_set_canned_message_module_messages());
      break;
    }
    // string set_ringtone_message = 37;
    case kSetRingtoneMessage: {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_set_ringtone_message());
      break;
    }
    // uint32 remove_by_nodenum = 38;
    case kRemoveByNodenum: {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_remove_by_nodenum());
      break;
    }
    // uint32 set_favorite_node = 39;
    case kSetFavoriteNode: {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_set_favorite_node());
      break;
    }
    // uint32 remove_favorite_node = 40;
    case kRemoveFavoriteNode: {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_remove_favorite_node());
      break;
    }
    // .meshtastic.Position set_fixed_position = 41;
    case kSetFixedPosition: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.set_fixed_position_);
      break;
    }
    // bool remove_fixed_position = 42;
    case kRemoveFixedPosition: {
      total_size += 3;
      break;
    }
    // fixed32 set_time_only = 43;
    case kSetTimeOnly: {
      total_size += 6;
      break;
    }
    // bool get_ui_config_request = 44;
    case kGetUiConfigRequest: {
      total_size += 3;
      break;
    }
    // .meshtastic.DeviceUIConfig get_ui_config_response = 45;
    case kGetUiConfigResponse: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.get_ui_config_response_);
      break;
    }
    // .meshtastic.DeviceUIConfig store_ui_config = 46;
    case kStoreUiConfig: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.store_ui_config_);
      break;
    }
    // uint32 set_ignored_node = 47;
    case kSetIgnoredNode: {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_set_ignored_node());
      break;
    }
    // uint32 remove_ignored_node = 48;
    case kRemoveIgnoredNode: {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_remove_ignored_node());
      break;
    }
    // bool begin_edit_settings = 64;
    case kBeginEditSettings: {
      total_size += 3;
      break;
    }
    // bool commit_edit_settings = 65;
    case kCommitEditSettings: {
      total_size += 3;
      break;
    }
    // .meshtastic.SharedContact add_contact = 66;
    case kAddContact: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.add_contact_);
      break;
    }
    // .meshtastic.KeyVerificationAdmin key_verification = 67;
    case kKeyVerification: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_variant_.key_verification_);
      break;
    }
    // int32 factory_reset_device = 94;
    case kFactoryResetDevice: {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this_._internal_factory_reset_device());
      break;
    }
    // int32 reboot_ota_seconds = 95;
    case kRebootOtaSeconds: {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this_._internal_reboot_ota_seconds());
      break;
    }
    // bool exit_simulator = 96;
    case kExitSimulator: {
      total_size += 3;
      break;
    }
    // int32 reboot_seconds = 97;
    case kRebootSeconds: {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this_._internal_reboot_seconds());
      break;
    }
    // int32 shutdown_seconds = 98;
    case kShutdownSeconds: {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this_._internal_shutdown_seconds());
      break;
    }
    // int32 factory_reset_config = 99;
    case kFactoryResetConfig: {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this_._internal_factory_reset_config());
      break;
    }
    // int32 nodedb_reset = 100;
    case kNodedbReset: {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this_._internal_nodedb_reset());
      break;
    }
    case PAYLOAD_VARIANT_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AdminMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AdminMessage*>(&to_msg);
  auto& from = static_cast<const AdminMessage&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.AdminMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_session_passkey().empty()) {
      _this->_internal_set_session_passkey(from._internal_session_passkey());
    } else {
      if (_this->_impl_.session_passkey_.IsDefault()) {
        _this->_internal_set_session_passkey("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload_variant();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kGetChannelRequest: {
        _this->_impl_.payload_variant_.get_channel_request_ = from._impl_.payload_variant_.get_channel_request_;
        break;
      }
      case kGetChannelResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.get_channel_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.get_channel_response_);
        } else {
          _this->_impl_.payload_variant_.get_channel_response_->MergeFrom(*from._impl_.payload_variant_.get_channel_response_);
        }
        break;
      }
      case kGetOwnerRequest: {
        _this->_impl_.payload_variant_.get_owner_request_ = from._impl_.payload_variant_.get_owner_request_;
        break;
      }
      case kGetOwnerResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.get_owner_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.get_owner_response_);
        } else {
          _this->_impl_.payload_variant_.get_owner_response_->MergeFrom(*from._impl_.payload_variant_.get_owner_response_);
        }
        break;
      }
      case kGetConfigRequest: {
        _this->_impl_.payload_variant_.get_config_request_ = from._impl_.payload_variant_.get_config_request_;
        break;
      }
      case kGetConfigResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.get_config_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.get_config_response_);
        } else {
          _this->_impl_.payload_variant_.get_config_response_->MergeFrom(*from._impl_.payload_variant_.get_config_response_);
        }
        break;
      }
      case kGetModuleConfigRequest: {
        _this->_impl_.payload_variant_.get_module_config_request_ = from._impl_.payload_variant_.get_module_config_request_;
        break;
      }
      case kGetModuleConfigResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.get_module_config_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.get_module_config_response_);
        } else {
          _this->_impl_.payload_variant_.get_module_config_response_->MergeFrom(*from._impl_.payload_variant_.get_module_config_response_);
        }
        break;
      }
      case kGetCannedMessageModuleMessagesRequest: {
        _this->_impl_.payload_variant_.get_canned_message_module_messages_request_ = from._impl_.payload_variant_.get_canned_message_module_messages_request_;
        break;
      }
      case kGetCannedMessageModuleMessagesResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.get_canned_message_module_messages_response_.InitDefault();
        }
        _this->_impl_.payload_variant_.get_canned_message_module_messages_response_.Set(from._internal_get_canned_message_module_messages_response(), arena);
        break;
      }
      case kGetDeviceMetadataRequest: {
        _this->_impl_.payload_variant_.get_device_metadata_request_ = from._impl_.payload_variant_.get_device_metadata_request_;
        break;
      }
      case kGetDeviceMetadataResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.get_device_metadata_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.get_device_metadata_response_);
        } else {
          _this->_impl_.payload_variant_.get_device_metadata_response_->MergeFrom(*from._impl_.payload_variant_.get_device_metadata_response_);
        }
        break;
      }
      case kGetRingtoneRequest: {
        _this->_impl_.payload_variant_.get_ringtone_request_ = from._impl_.payload_variant_.get_ringtone_request_;
        break;
      }
      case kGetRingtoneResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.get_ringtone_response_.InitDefault();
        }
        _this->_impl_.payload_variant_.get_ringtone_response_.Set(from._internal_get_ringtone_response(), arena);
        break;
      }
      case kGetDeviceConnectionStatusRequest: {
        _this->_impl_.payload_variant_.get_device_connection_status_request_ = from._impl_.payload_variant_.get_device_connection_status_request_;
        break;
      }
      case kGetDeviceConnectionStatusResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.get_device_connection_status_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.get_device_connection_status_response_);
        } else {
          _this->_impl_.payload_variant_.get_device_connection_status_response_->MergeFrom(*from._impl_.payload_variant_.get_device_connection_status_response_);
        }
        break;
      }
      case kSetHamMode: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.set_ham_mode_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.set_ham_mode_);
        } else {
          _this->_impl_.payload_variant_.set_ham_mode_->MergeFrom(*from._impl_.payload_variant_.set_ham_mode_);
        }
        break;
      }
      case kGetNodeRemoteHardwarePinsRequest: {
        _this->_impl_.payload_variant_.get_node_remote_hardware_pins_request_ = from._impl_.payload_variant_.get_node_remote_hardware_pins_request_;
        break;
      }
      case kGetNodeRemoteHardwarePinsResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.get_node_remote_hardware_pins_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.get_node_remote_hardware_pins_response_);
        } else {
          _this->_impl_.payload_variant_.get_node_remote_hardware_pins_response_->MergeFrom(*from._impl_.payload_variant_.get_node_remote_hardware_pins_response_);
        }
        break;
      }
      case kEnterDfuModeRequest: {
        _this->_impl_.payload_variant_.enter_dfu_mode_request_ = from._impl_.payload_variant_.enter_dfu_mode_request_;
        break;
      }
      case kDeleteFileRequest: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.delete_file_request_.InitDefault();
        }
        _this->_impl_.payload_variant_.delete_file_request_.Set(from._internal_delete_file_request(), arena);
        break;
      }
      case kSetScale: {
        _this->_impl_.payload_variant_.set_scale_ = from._impl_.payload_variant_.set_scale_;
        break;
      }
      case kBackupPreferences: {
        _this->_impl_.payload_variant_.backup_preferences_ = from._impl_.payload_variant_.backup_preferences_;
        break;
      }
      case kRestorePreferences: {
        _this->_impl_.payload_variant_.restore_preferences_ = from._impl_.payload_variant_.restore_preferences_;
        break;
      }
      case kRemoveBackupPreferences: {
        _this->_impl_.payload_variant_.remove_backup_preferences_ = from._impl_.payload_variant_.remove_backup_preferences_;
        break;
      }
      case kSendInputEvent: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.send_input_event_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.send_input_event_);
        } else {
          _this->_impl_.payload_variant_.send_input_event_->MergeFrom(*from._impl_.payload_variant_.send_input_event_);
        }
        break;
      }
      case kSetOwner: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.set_owner_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.set_owner_);
        } else {
          _this->_impl_.payload_variant_.set_owner_->MergeFrom(*from._impl_.payload_variant_.set_owner_);
        }
        break;
      }
      case kSetChannel: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.set_channel_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.set_channel_);
        } else {
          _this->_impl_.payload_variant_.set_channel_->MergeFrom(*from._impl_.payload_variant_.set_channel_);
        }
        break;
      }
      case kSetConfig: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.set_config_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.set_config_);
        } else {
          _this->_impl_.payload_variant_.set_config_->MergeFrom(*from._impl_.payload_variant_.set_config_);
        }
        break;
      }
      case kSetModuleConfig: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.set_module_config_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.set_module_config_);
        } else {
          _this->_impl_.payload_variant_.set_module_config_->MergeFrom(*from._impl_.payload_variant_.set_module_config_);
        }
        break;
      }
      case kSetCannedMessageModuleMessages: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.set_canned_message_module_messages_.InitDefault();
        }
        _this->_impl_.payload_variant_.set_canned_message_module_messages_.Set(from._internal_set_canned_message_module_messages(), arena);
        break;
      }
      case kSetRingtoneMessage: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.set_ringtone_message_.InitDefault();
        }
        _this->_impl_.payload_variant_.set_ringtone_message_.Set(from._internal_set_ringtone_message(), arena);
        break;
      }
      case kRemoveByNodenum: {
        _this->_impl_.payload_variant_.remove_by_nodenum_ = from._impl_.payload_variant_.remove_by_nodenum_;
        break;
      }
      case kSetFavoriteNode: {
        _this->_impl_.payload_variant_.set_favorite_node_ = from._impl_.payload_variant_.set_favorite_node_;
        break;
      }
      case kRemoveFavoriteNode: {
        _this->_impl_.payload_variant_.remove_favorite_node_ = from._impl_.payload_variant_.remove_favorite_node_;
        break;
      }
      case kSetFixedPosition: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.set_fixed_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.set_fixed_position_);
        } else {
          _this->_impl_.payload_variant_.set_fixed_position_->MergeFrom(*from._impl_.payload_variant_.set_fixed_position_);
        }
        break;
      }
      case kRemoveFixedPosition: {
        _this->_impl_.payload_variant_.remove_fixed_position_ = from._impl_.payload_variant_.remove_fixed_position_;
        break;
      }
      case kSetTimeOnly: {
        _this->_impl_.payload_variant_.set_time_only_ = from._impl_.payload_variant_.set_time_only_;
        break;
      }
      case kGetUiConfigRequest: {
        _this->_impl_.payload_variant_.get_ui_config_request_ = from._impl_.payload_variant_.get_ui_config_request_;
        break;
      }
      case kGetUiConfigResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.get_ui_config_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.get_ui_config_response_);
        } else {
          _this->_impl_.payload_variant_.get_ui_config_response_->MergeFrom(*from._impl_.payload_variant_.get_ui_config_response_);
        }
        break;
      }
      case kStoreUiConfig: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.store_ui_config_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.store_ui_config_);
        } else {
          _this->_impl_.payload_variant_.store_ui_config_->MergeFrom(*from._impl_.payload_variant_.store_ui_config_);
        }
        break;
      }
      case kSetIgnoredNode: {
        _this->_impl_.payload_variant_.set_ignored_node_ = from._impl_.payload_variant_.set_ignored_node_;
        break;
      }
      case kRemoveIgnoredNode: {
        _this->_impl_.payload_variant_.remove_ignored_node_ = from._impl_.payload_variant_.remove_ignored_node_;
        break;
      }
      case kBeginEditSettings: {
        _this->_impl_.payload_variant_.begin_edit_settings_ = from._impl_.payload_variant_.begin_edit_settings_;
        break;
      }
      case kCommitEditSettings: {
        _this->_impl_.payload_variant_.commit_edit_settings_ = from._impl_.payload_variant_.commit_edit_settings_;
        break;
      }
      case kAddContact: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.add_contact_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.add_contact_);
        } else {
          _this->_impl_.payload_variant_.add_contact_->MergeFrom(*from._impl_.payload_variant_.add_contact_);
        }
        break;
      }
      case kKeyVerification: {
        if (oneof_needs_init) {
          _this->_impl_.payload_variant_.key_verification_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_variant_.key_verification_);
        } else {
          _this->_impl_.payload_variant_.key_verification_->MergeFrom(*from._impl_.payload_variant_.key_verification_);
        }
        break;
      }
      case kFactoryResetDevice: {
        _this->_impl_.payload_variant_.factory_reset_device_ = from._impl_.payload_variant_.factory_reset_device_;
        break;
      }
      case kRebootOtaSeconds: {
        _this->_impl_.payload_variant_.reboot_ota_seconds_ = from._impl_.payload_variant_.reboot_ota_seconds_;
        break;
      }
      case kExitSimulator: {
        _this->_impl_.payload_variant_.exit_simulator_ = from._impl_.payload_variant_.exit_simulator_;
        break;
      }
      case kRebootSeconds: {
        _this->_impl_.payload_variant_.reboot_seconds_ = from._impl_.payload_variant_.reboot_seconds_;
        break;
      }
      case kShutdownSeconds: {
        _this->_impl_.payload_variant_.shutdown_seconds_ = from._impl_.payload_variant_.shutdown_seconds_;
        break;
      }
      case kFactoryResetConfig: {
        _this->_impl_.payload_variant_.factory_reset_config_ = from._impl_.payload_variant_.factory_reset_config_;
        break;
      }
      case kNodedbReset: {
        _this->_impl_.payload_variant_.nodedb_reset_ = from._impl_.payload_variant_.nodedb_reset_;
        break;
      }
      case PAYLOAD_VARIANT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AdminMessage::CopyFrom(const AdminMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.AdminMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AdminMessage::InternalSwap(AdminMessage* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_passkey_, &other->_impl_.session_passkey_, arena);
  swap(_impl_.payload_variant_, other->_impl_.payload_variant_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata AdminMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HamParameters::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<HamParameters>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HamParameters, _impl_._has_bits_);
};

HamParameters::HamParameters(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HamParameters_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.HamParameters)
}
PROTOBUF_NDEBUG_INLINE HamParameters::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::meshtastic::HamParameters& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        call_sign_(arena, from.call_sign_),
        short_name_(arena, from.short_name_) {}

HamParameters::HamParameters(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const HamParameters& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HamParameters_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HamParameters* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tx_power_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, tx_power_),
           offsetof(Impl_, frequency_) -
               offsetof(Impl_, tx_power_) +
               sizeof(Impl_::frequency_));

  // @@protoc_insertion_point(copy_constructor:meshtastic.HamParameters)
}
PROTOBUF_NDEBUG_INLINE HamParameters::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        call_sign_(arena),
        short_name_(arena) {}

inline void HamParameters::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tx_power_),
           0,
           offsetof(Impl_, frequency_) -
               offsetof(Impl_, tx_power_) +
               sizeof(Impl_::frequency_));
}
HamParameters::~HamParameters() {
  // @@protoc_insertion_point(destructor:meshtastic.HamParameters)
  SharedDtor(*this);
}
inline void HamParameters::SharedDtor(MessageLite& self) {
  HamParameters& this_ = static_cast<HamParameters&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.call_sign_.Destroy();
  this_._impl_.short_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL HamParameters::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HamParameters(arena);
}
constexpr auto HamParameters::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HamParameters),
                                            alignof(HamParameters));
}
constexpr auto HamParameters::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HamParameters_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HamParameters::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HamParameters>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HamParameters::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HamParameters>(), &HamParameters::ByteSizeLong,
              &HamParameters::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HamParameters, _impl_._cached_size_),
          false,
      },
      &HamParameters::kDescriptorMethods,
      &descriptor_table_meshtastic_2fadmin_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull HamParameters_class_data_ =
        HamParameters::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
HamParameters::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HamParameters_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HamParameters_class_data_.tc_table);
  return HamParameters_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 52, 2>
HamParameters::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HamParameters, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    HamParameters_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::HamParameters>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string short_name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(HamParameters, _impl_.short_name_)}},
    // string call_sign = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HamParameters, _impl_.call_sign_)}},
    // int32 tx_power = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HamParameters, _impl_.tx_power_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(HamParameters, _impl_.tx_power_)}},
    // float frequency = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 3, 0, PROTOBUF_FIELD_OFFSET(HamParameters, _impl_.frequency_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string call_sign = 1;
    {PROTOBUF_FIELD_OFFSET(HamParameters, _impl_.call_sign_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 tx_power = 2;
    {PROTOBUF_FIELD_OFFSET(HamParameters, _impl_.tx_power_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // float frequency = 3;
    {PROTOBUF_FIELD_OFFSET(HamParameters, _impl_.frequency_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // string short_name = 4;
    {PROTOBUF_FIELD_OFFSET(HamParameters, _impl_.short_name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\11\0\0\12\0\0\0"
    "meshtastic.HamParameters"
    "call_sign"
    "short_name"
  }},
};
PROTOBUF_NOINLINE void HamParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.HamParameters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.call_sign_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.short_name_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.tx_power_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.frequency_) -
        reinterpret_cast<char*>(&_impl_.tx_power_)) + sizeof(_impl_.frequency_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HamParameters::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HamParameters& this_ = static_cast<const HamParameters&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HamParameters::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HamParameters& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.HamParameters)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string call_sign = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_call_sign().empty()) {
      const ::std::string& _s = this_._internal_call_sign();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.HamParameters.call_sign");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 tx_power = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_tx_power() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_tx_power(), target);
    }
  }

  // float frequency = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_frequency()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          3, this_._internal_frequency(), target);
    }
  }

  // string short_name = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_short_name().empty()) {
      const ::std::string& _s = this_._internal_short_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "meshtastic.HamParameters.short_name");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.HamParameters)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HamParameters::ByteSizeLong(const MessageLite& base) {
  const HamParameters& this_ = static_cast<const HamParameters&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HamParameters::ByteSizeLong() const {
  const HamParameters& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.HamParameters)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string call_sign = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_call_sign().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_call_sign());
      }
    }
    // string short_name = 4;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_short_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_short_name());
      }
    }
    // int32 tx_power = 2;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_tx_power() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_tx_power());
      }
    }
    // float frequency = 3;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_frequency()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void HamParameters::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HamParameters*>(&to_msg);
  auto& from = static_cast<const HamParameters&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.HamParameters)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_call_sign().empty()) {
        _this->_internal_set_call_sign(from._internal_call_sign());
      } else {
        if (_this->_impl_.call_sign_.IsDefault()) {
          _this->_internal_set_call_sign("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_short_name().empty()) {
        _this->_internal_set_short_name(from._internal_short_name());
      } else {
        if (_this->_impl_.short_name_.IsDefault()) {
          _this->_internal_set_short_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_tx_power() != 0) {
        _this->_impl_.tx_power_ = from._impl_.tx_power_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_frequency()) != 0) {
        _this->_impl_.frequency_ = from._impl_.frequency_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HamParameters::CopyFrom(const HamParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.HamParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HamParameters::InternalSwap(HamParameters* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.call_sign_, &other->_impl_.call_sign_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.short_name_, &other->_impl_.short_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HamParameters, _impl_.frequency_)
      + sizeof(HamParameters::_impl_.frequency_)
      - PROTOBUF_FIELD_OFFSET(HamParameters, _impl_.tx_power_)>(
          reinterpret_cast<char*>(&_impl_.tx_power_),
          reinterpret_cast<char*>(&other->_impl_.tx_power_));
}

::google::protobuf::Metadata HamParameters::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeRemoteHardwarePinsResponse::_Internal {
 public:
};

void NodeRemoteHardwarePinsResponse::clear_node_remote_hardware_pins() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_remote_hardware_pins_.Clear();
}
NodeRemoteHardwarePinsResponse::NodeRemoteHardwarePinsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NodeRemoteHardwarePinsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.NodeRemoteHardwarePinsResponse)
}
PROTOBUF_NDEBUG_INLINE NodeRemoteHardwarePinsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::meshtastic::NodeRemoteHardwarePinsResponse& from_msg)
      : node_remote_hardware_pins_{visibility, arena, from.node_remote_hardware_pins_},
        _cached_size_{0} {}

NodeRemoteHardwarePinsResponse::NodeRemoteHardwarePinsResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const NodeRemoteHardwarePinsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NodeRemoteHardwarePinsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeRemoteHardwarePinsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:meshtastic.NodeRemoteHardwarePinsResponse)
}
PROTOBUF_NDEBUG_INLINE NodeRemoteHardwarePinsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : node_remote_hardware_pins_{visibility, arena},
        _cached_size_{0} {}

inline void NodeRemoteHardwarePinsResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NodeRemoteHardwarePinsResponse::~NodeRemoteHardwarePinsResponse() {
  // @@protoc_insertion_point(destructor:meshtastic.NodeRemoteHardwarePinsResponse)
  SharedDtor(*this);
}
inline void NodeRemoteHardwarePinsResponse::SharedDtor(MessageLite& self) {
  NodeRemoteHardwarePinsResponse& this_ = static_cast<NodeRemoteHardwarePinsResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NodeRemoteHardwarePinsResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NodeRemoteHardwarePinsResponse(arena);
}
constexpr auto NodeRemoteHardwarePinsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NodeRemoteHardwarePinsResponse, _impl_.node_remote_hardware_pins_) +
          decltype(NodeRemoteHardwarePinsResponse::_impl_.node_remote_hardware_pins_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(NodeRemoteHardwarePinsResponse), alignof(NodeRemoteHardwarePinsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NodeRemoteHardwarePinsResponse::PlacementNew_,
                                 sizeof(NodeRemoteHardwarePinsResponse),
                                 alignof(NodeRemoteHardwarePinsResponse));
  }
}
constexpr auto NodeRemoteHardwarePinsResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NodeRemoteHardwarePinsResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NodeRemoteHardwarePinsResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NodeRemoteHardwarePinsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NodeRemoteHardwarePinsResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NodeRemoteHardwarePinsResponse>(), &NodeRemoteHardwarePinsResponse::ByteSizeLong,
              &NodeRemoteHardwarePinsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NodeRemoteHardwarePinsResponse, _impl_._cached_size_),
          false,
      },
      &NodeRemoteHardwarePinsResponse::kDescriptorMethods,
      &descriptor_table_meshtastic_2fadmin_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NodeRemoteHardwarePinsResponse_class_data_ =
        NodeRemoteHardwarePinsResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NodeRemoteHardwarePinsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NodeRemoteHardwarePinsResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NodeRemoteHardwarePinsResponse_class_data_.tc_table);
  return NodeRemoteHardwarePinsResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
NodeRemoteHardwarePinsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    NodeRemoteHardwarePinsResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::NodeRemoteHardwarePinsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .meshtastic.NodeRemoteHardwarePin node_remote_hardware_pins = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeRemoteHardwarePinsResponse, _impl_.node_remote_hardware_pins_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .meshtastic.NodeRemoteHardwarePin node_remote_hardware_pins = 1;
    {PROTOBUF_FIELD_OFFSET(NodeRemoteHardwarePinsResponse, _impl_.node_remote_hardware_pins_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::NodeRemoteHardwarePin>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void NodeRemoteHardwarePinsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.NodeRemoteHardwarePinsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_remote_hardware_pins_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NodeRemoteHardwarePinsResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NodeRemoteHardwarePinsResponse& this_ = static_cast<const NodeRemoteHardwarePinsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NodeRemoteHardwarePinsResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NodeRemoteHardwarePinsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.NodeRemoteHardwarePinsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .meshtastic.NodeRemoteHardwarePin node_remote_hardware_pins = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_node_remote_hardware_pins_size());
       i < n; i++) {
    const auto& repfield = this_._internal_node_remote_hardware_pins().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.NodeRemoteHardwarePinsResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NodeRemoteHardwarePinsResponse::ByteSizeLong(const MessageLite& base) {
  const NodeRemoteHardwarePinsResponse& this_ = static_cast<const NodeRemoteHardwarePinsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NodeRemoteHardwarePinsResponse::ByteSizeLong() const {
  const NodeRemoteHardwarePinsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.NodeRemoteHardwarePinsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .meshtastic.NodeRemoteHardwarePin node_remote_hardware_pins = 1;
    {
      total_size += 1UL * this_._internal_node_remote_hardware_pins_size();
      for (const auto& msg : this_._internal_node_remote_hardware_pins()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NodeRemoteHardwarePinsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeRemoteHardwarePinsResponse*>(&to_msg);
  auto& from = static_cast<const NodeRemoteHardwarePinsResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.NodeRemoteHardwarePinsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_node_remote_hardware_pins()->MergeFrom(
      from._internal_node_remote_hardware_pins());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeRemoteHardwarePinsResponse::CopyFrom(const NodeRemoteHardwarePinsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.NodeRemoteHardwarePinsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeRemoteHardwarePinsResponse::InternalSwap(NodeRemoteHardwarePinsResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.node_remote_hardware_pins_.InternalSwap(&other->_impl_.node_remote_hardware_pins_);
}

::google::protobuf::Metadata NodeRemoteHardwarePinsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SharedContact::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SharedContact>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SharedContact, _impl_._has_bits_);
};

void SharedContact::clear_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.user_ != nullptr) _impl_.user_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
SharedContact::SharedContact(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SharedContact_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.SharedContact)
}
PROTOBUF_NDEBUG_INLINE SharedContact::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::meshtastic::SharedContact& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SharedContact::SharedContact(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SharedContact& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SharedContact_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedContact* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.user_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.user_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, node_num_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, node_num_),
           offsetof(Impl_, should_ignore_) -
               offsetof(Impl_, node_num_) +
               sizeof(Impl_::should_ignore_));

  // @@protoc_insertion_point(copy_constructor:meshtastic.SharedContact)
}
PROTOBUF_NDEBUG_INLINE SharedContact::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SharedContact::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, user_),
           0,
           offsetof(Impl_, should_ignore_) -
               offsetof(Impl_, user_) +
               sizeof(Impl_::should_ignore_));
}
SharedContact::~SharedContact() {
  // @@protoc_insertion_point(destructor:meshtastic.SharedContact)
  SharedDtor(*this);
}
inline void SharedContact::SharedDtor(MessageLite& self) {
  SharedContact& this_ = static_cast<SharedContact&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.user_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SharedContact::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SharedContact(arena);
}
constexpr auto SharedContact::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SharedContact),
                                            alignof(SharedContact));
}
constexpr auto SharedContact::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SharedContact_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SharedContact::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SharedContact>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SharedContact::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SharedContact>(), &SharedContact::ByteSizeLong,
              &SharedContact::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SharedContact, _impl_._cached_size_),
          false,
      },
      &SharedContact::kDescriptorMethods,
      &descriptor_table_meshtastic_2fadmin_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SharedContact_class_data_ =
        SharedContact::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SharedContact::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SharedContact_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SharedContact_class_data_.tc_table);
  return SharedContact_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
SharedContact::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SharedContact, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SharedContact_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::SharedContact>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 node_num = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SharedContact, _impl_.node_num_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(SharedContact, _impl_.node_num_)}},
    // .meshtastic.User user = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SharedContact, _impl_.user_)}},
    // bool should_ignore = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SharedContact, _impl_.should_ignore_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SharedContact, _impl_.should_ignore_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 node_num = 1;
    {PROTOBUF_FIELD_OFFSET(SharedContact, _impl_.node_num_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .meshtastic.User user = 2;
    {PROTOBUF_FIELD_OFFSET(SharedContact, _impl_.user_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool should_ignore = 3;
    {PROTOBUF_FIELD_OFFSET(SharedContact, _impl_.should_ignore_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::meshtastic::User>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SharedContact::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.SharedContact)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.user_ != nullptr);
    _impl_.user_->Clear();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.node_num_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.should_ignore_) -
        reinterpret_cast<char*>(&_impl_.node_num_)) + sizeof(_impl_.should_ignore_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SharedContact::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SharedContact& this_ = static_cast<const SharedContact&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SharedContact::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SharedContact& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.SharedContact)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 node_num = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_node_num() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_node_num(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .meshtastic.User user = 2;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.user_, this_._impl_.user_->GetCachedSize(), target,
        stream);
  }

  // bool should_ignore = 3;
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (this_._internal_should_ignore() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_should_ignore(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.SharedContact)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SharedContact::ByteSizeLong(const MessageLite& base) {
  const SharedContact& this_ = static_cast<const SharedContact&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SharedContact::ByteSizeLong() const {
  const SharedContact& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.SharedContact)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // .meshtastic.User user = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.user_);
    }
    // uint32 node_num = 1;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_node_num() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_node_num());
      }
    }
    // bool should_ignore = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_should_ignore() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SharedContact::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SharedContact*>(&to_msg);
  auto& from = static_cast<const SharedContact&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.SharedContact)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.user_ != nullptr);
      if (_this->_impl_.user_ == nullptr) {
        _this->_impl_.user_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.user_);
      } else {
        _this->_impl_.user_->MergeFrom(*from._impl_.user_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_node_num() != 0) {
        _this->_impl_.node_num_ = from._impl_.node_num_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_should_ignore() != 0) {
        _this->_impl_.should_ignore_ = from._impl_.should_ignore_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SharedContact::CopyFrom(const SharedContact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.SharedContact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SharedContact::InternalSwap(SharedContact* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SharedContact, _impl_.should_ignore_)
      + sizeof(SharedContact::_impl_.should_ignore_)
      - PROTOBUF_FIELD_OFFSET(SharedContact, _impl_.user_)>(
          reinterpret_cast<char*>(&_impl_.user_),
          reinterpret_cast<char*>(&other->_impl_.user_));
}

::google::protobuf::Metadata SharedContact::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class KeyVerificationAdmin::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<KeyVerificationAdmin>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(KeyVerificationAdmin, _impl_._has_bits_);
};

KeyVerificationAdmin::KeyVerificationAdmin(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, KeyVerificationAdmin_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:meshtastic.KeyVerificationAdmin)
}
KeyVerificationAdmin::KeyVerificationAdmin(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const KeyVerificationAdmin& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, KeyVerificationAdmin_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE KeyVerificationAdmin::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void KeyVerificationAdmin::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, message_type_),
           0,
           offsetof(Impl_, security_number_) -
               offsetof(Impl_, message_type_) +
               sizeof(Impl_::security_number_));
}
KeyVerificationAdmin::~KeyVerificationAdmin() {
  // @@protoc_insertion_point(destructor:meshtastic.KeyVerificationAdmin)
  SharedDtor(*this);
}
inline void KeyVerificationAdmin::SharedDtor(MessageLite& self) {
  KeyVerificationAdmin& this_ = static_cast<KeyVerificationAdmin&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL KeyVerificationAdmin::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) KeyVerificationAdmin(arena);
}
constexpr auto KeyVerificationAdmin::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(KeyVerificationAdmin),
                                            alignof(KeyVerificationAdmin));
}
constexpr auto KeyVerificationAdmin::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_KeyVerificationAdmin_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &KeyVerificationAdmin::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<KeyVerificationAdmin>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &KeyVerificationAdmin::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<KeyVerificationAdmin>(), &KeyVerificationAdmin::ByteSizeLong,
              &KeyVerificationAdmin::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(KeyVerificationAdmin, _impl_._cached_size_),
          false,
      },
      &KeyVerificationAdmin::kDescriptorMethods,
      &descriptor_table_meshtastic_2fadmin_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull KeyVerificationAdmin_class_data_ =
        KeyVerificationAdmin::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
KeyVerificationAdmin::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&KeyVerificationAdmin_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(KeyVerificationAdmin_class_data_.tc_table);
  return KeyVerificationAdmin_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
KeyVerificationAdmin::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(KeyVerificationAdmin, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    KeyVerificationAdmin_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::meshtastic::KeyVerificationAdmin>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 security_number = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(KeyVerificationAdmin, _impl_.security_number_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(KeyVerificationAdmin, _impl_.security_number_)}},
    // .meshtastic.KeyVerificationAdmin.MessageType message_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(KeyVerificationAdmin, _impl_.message_type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(KeyVerificationAdmin, _impl_.message_type_)}},
    // uint32 remote_nodenum = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(KeyVerificationAdmin, _impl_.remote_nodenum_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(KeyVerificationAdmin, _impl_.remote_nodenum_)}},
    // uint64 nonce = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(KeyVerificationAdmin, _impl_.nonce_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(KeyVerificationAdmin, _impl_.nonce_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .meshtastic.KeyVerificationAdmin.MessageType message_type = 1;
    {PROTOBUF_FIELD_OFFSET(KeyVerificationAdmin, _impl_.message_type_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // uint32 remote_nodenum = 2;
    {PROTOBUF_FIELD_OFFSET(KeyVerificationAdmin, _impl_.remote_nodenum_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint64 nonce = 3;
    {PROTOBUF_FIELD_OFFSET(KeyVerificationAdmin, _impl_.nonce_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 security_number = 4;
    {PROTOBUF_FIELD_OFFSET(KeyVerificationAdmin, _impl_.security_number_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void KeyVerificationAdmin::Clear() {
// @@protoc_insertion_point(message_clear_start:meshtastic.KeyVerificationAdmin)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    ::memset(&_impl_.message_type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.security_number_) -
        reinterpret_cast<char*>(&_impl_.message_type_)) + sizeof(_impl_.security_number_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL KeyVerificationAdmin::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const KeyVerificationAdmin& this_ = static_cast<const KeyVerificationAdmin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL KeyVerificationAdmin::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const KeyVerificationAdmin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:meshtastic.KeyVerificationAdmin)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .meshtastic.KeyVerificationAdmin.MessageType message_type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_message_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_message_type(), target);
    }
  }

  // uint32 remote_nodenum = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_remote_nodenum() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_remote_nodenum(), target);
    }
  }

  // uint64 nonce = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_nonce() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          3, this_._internal_nonce(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 security_number = 4;
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_security_number(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshtastic.KeyVerificationAdmin)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t KeyVerificationAdmin::ByteSizeLong(const MessageLite& base) {
  const KeyVerificationAdmin& this_ = static_cast<const KeyVerificationAdmin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t KeyVerificationAdmin::ByteSizeLong() const {
  const KeyVerificationAdmin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:meshtastic.KeyVerificationAdmin)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // .meshtastic.KeyVerificationAdmin.MessageType message_type = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_message_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_message_type());
      }
    }
    // uint32 remote_nodenum = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_remote_nodenum() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_remote_nodenum());
      }
    }
    // uint64 nonce = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_nonce() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_nonce());
      }
    }
    // optional uint32 security_number = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_security_number());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void KeyVerificationAdmin::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<KeyVerificationAdmin*>(&to_msg);
  auto& from = static_cast<const KeyVerificationAdmin&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:meshtastic.KeyVerificationAdmin)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_message_type() != 0) {
        _this->_impl_.message_type_ = from._impl_.message_type_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_remote_nodenum() != 0) {
        _this->_impl_.remote_nodenum_ = from._impl_.remote_nodenum_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_nonce() != 0) {
        _this->_impl_.nonce_ = from._impl_.nonce_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _this->_impl_.security_number_ = from._impl_.security_number_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void KeyVerificationAdmin::CopyFrom(const KeyVerificationAdmin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meshtastic.KeyVerificationAdmin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void KeyVerificationAdmin::InternalSwap(KeyVerificationAdmin* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(KeyVerificationAdmin, _impl_.security_number_)
      + sizeof(KeyVerificationAdmin::_impl_.security_number_)
      - PROTOBUF_FIELD_OFFSET(KeyVerificationAdmin, _impl_.message_type_)>(
          reinterpret_cast<char*>(&_impl_.message_type_),
          reinterpret_cast<char*>(&other->_impl_.message_type_));
}

::google::protobuf::Metadata KeyVerificationAdmin::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace meshtastic
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_meshtastic_2fadmin_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
