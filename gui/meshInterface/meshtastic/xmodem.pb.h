// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: meshtastic/xmodem.proto
// Protobuf C++ Version: 6.32.0

#ifndef meshtastic_2fxmodem_2eproto_2epb_2eh
#define meshtastic_2fxmodem_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_meshtastic_2fxmodem_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_meshtastic_2fxmodem_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_meshtastic_2fxmodem_2eproto;
}  // extern "C"
namespace meshtastic {
enum XModem_Control : int;
extern const uint32_t XModem_Control_internal_data_[];
class XModem;
struct XModemDefaultTypeInternal;
extern XModemDefaultTypeInternal _XModem_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull XModem_class_data_;
}  // namespace meshtastic
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::meshtastic::XModem_Control_internal_data_>
    internal::EnumTraitsImpl::value<::meshtastic::XModem_Control>;
}  // namespace protobuf
}  // namespace google

namespace meshtastic {
enum XModem_Control : int {
  XModem_Control_NUL = 0,
  XModem_Control_SOH = 1,
  XModem_Control_STX = 2,
  XModem_Control_EOT = 4,
  XModem_Control_ACK = 6,
  XModem_Control_NAK = 21,
  XModem_Control_CAN = 24,
  XModem_Control_CTRLZ = 26,
  XModem_Control_XModem_Control_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  XModem_Control_XModem_Control_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t XModem_Control_internal_data_[];
inline constexpr XModem_Control XModem_Control_Control_MIN =
    static_cast<XModem_Control>(0);
inline constexpr XModem_Control XModem_Control_Control_MAX =
    static_cast<XModem_Control>(26);
inline bool XModem_Control_IsValid(int value) {
  return 0 <= value && value <= 26 && ((85983319u >> value) & 1) != 0;
}
inline constexpr int XModem_Control_Control_ARRAYSIZE = 26 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL XModem_Control_descriptor();
template <typename T>
const ::std::string& XModem_Control_Name(T value) {
  static_assert(::std::is_same<T, XModem_Control>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to Control_Name().");
  return ::google::protobuf::internal::NameOfEnum(XModem_Control_descriptor(), value);
}
inline bool XModem_Control_Parse(
    ::absl::string_view name, XModem_Control* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<XModem_Control>(XModem_Control_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class XModem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.XModem) */ {
 public:
  inline XModem() : XModem(nullptr) {}
  ~XModem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(XModem* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(XModem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR XModem(::google::protobuf::internal::ConstantInitialized);

  inline XModem(const XModem& from) : XModem(nullptr, from) {}
  inline XModem(XModem&& from) noexcept
      : XModem(nullptr, ::std::move(from)) {}
  inline XModem& operator=(const XModem& from) {
    CopyFrom(from);
    return *this;
  }
  inline XModem& operator=(XModem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const XModem& default_instance() {
    return *reinterpret_cast<const XModem*>(
        &_XModem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(XModem& a, XModem& b) { a.Swap(&b); }
  inline void Swap(XModem* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(XModem* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  XModem* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<XModem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const XModem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const XModem& from) { XModem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(XModem* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.XModem"; }

 protected:
  explicit XModem(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  XModem(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const XModem& from);
  XModem(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, XModem&& from) noexcept
      : XModem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Control = XModem_Control;
  static constexpr Control NUL = XModem_Control_NUL;
  static constexpr Control SOH = XModem_Control_SOH;
  static constexpr Control STX = XModem_Control_STX;
  static constexpr Control EOT = XModem_Control_EOT;
  static constexpr Control ACK = XModem_Control_ACK;
  static constexpr Control NAK = XModem_Control_NAK;
  static constexpr Control CAN = XModem_Control_CAN;
  static constexpr Control CTRLZ = XModem_Control_CTRLZ;
  static inline bool Control_IsValid(int value) {
    return XModem_Control_IsValid(value);
  }
  static constexpr Control Control_MIN = XModem_Control_Control_MIN;
  static constexpr Control Control_MAX = XModem_Control_Control_MAX;
  static constexpr int Control_ARRAYSIZE = XModem_Control_Control_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Control_descriptor() {
    return XModem_Control_descriptor();
  }
  template <typename T>
  static inline const ::std::string& Control_Name(T value) {
    return XModem_Control_Name(value);
  }
  static inline bool Control_Parse(
      ::absl::string_view name, Control* PROTOBUF_NONNULL value) {
    return XModem_Control_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kBufferFieldNumber = 4,
    kControlFieldNumber = 1,
    kSeqFieldNumber = 2,
    kCrc16FieldNumber = 3,
  };
  // bytes buffer = 4;
  void clear_buffer() ;
  const ::std::string& buffer() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_buffer(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_buffer();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_buffer();
  void set_allocated_buffer(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_buffer() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_buffer(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_buffer();

  public:
  // .meshtastic.XModem.Control control = 1;
  void clear_control() ;
  ::meshtastic::XModem_Control control() const;
  void set_control(::meshtastic::XModem_Control value);

  private:
  ::meshtastic::XModem_Control _internal_control() const;
  void _internal_set_control(::meshtastic::XModem_Control value);

  public:
  // uint32 seq = 2;
  void clear_seq() ;
  ::uint32_t seq() const;
  void set_seq(::uint32_t value);

  private:
  ::uint32_t _internal_seq() const;
  void _internal_set_seq(::uint32_t value);

  public:
  // uint32 crc16 = 3;
  void clear_crc16() ;
  ::uint32_t crc16() const;
  void set_crc16(::uint32_t value);

  private:
  ::uint32_t _internal_crc16() const;
  void _internal_set_crc16(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.XModem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const XModem& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr buffer_;
    int control_;
    ::uint32_t seq_;
    ::uint32_t crc16_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fxmodem_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull XModem_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// XModem

// .meshtastic.XModem.Control control = 1;
inline void XModem::clear_control() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::meshtastic::XModem_Control XModem::control() const {
  // @@protoc_insertion_point(field_get:meshtastic.XModem.control)
  return _internal_control();
}
inline void XModem::set_control(::meshtastic::XModem_Control value) {
  _internal_set_control(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:meshtastic.XModem.control)
}
inline ::meshtastic::XModem_Control XModem::_internal_control() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::meshtastic::XModem_Control>(_impl_.control_);
}
inline void XModem::_internal_set_control(::meshtastic::XModem_Control value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_ = value;
}

// uint32 seq = 2;
inline void XModem::clear_seq() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint32_t XModem::seq() const {
  // @@protoc_insertion_point(field_get:meshtastic.XModem.seq)
  return _internal_seq();
}
inline void XModem::set_seq(::uint32_t value) {
  _internal_set_seq(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:meshtastic.XModem.seq)
}
inline ::uint32_t XModem::_internal_seq() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_;
}
inline void XModem::_internal_set_seq(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_ = value;
}

// uint32 crc16 = 3;
inline void XModem::clear_crc16() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.crc16_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint32_t XModem::crc16() const {
  // @@protoc_insertion_point(field_get:meshtastic.XModem.crc16)
  return _internal_crc16();
}
inline void XModem::set_crc16(::uint32_t value) {
  _internal_set_crc16(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:meshtastic.XModem.crc16)
}
inline ::uint32_t XModem::_internal_crc16() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.crc16_;
}
inline void XModem::_internal_set_crc16(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.crc16_ = value;
}

// bytes buffer = 4;
inline void XModem::clear_buffer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buffer_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& XModem::buffer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.XModem.buffer)
  return _internal_buffer();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void XModem::set_buffer(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.buffer_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.XModem.buffer)
}
inline ::std::string* PROTOBUF_NONNULL XModem::mutable_buffer()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_buffer();
  // @@protoc_insertion_point(field_mutable:meshtastic.XModem.buffer)
  return _s;
}
inline const ::std::string& XModem::_internal_buffer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.buffer_.Get();
}
inline void XModem::_internal_set_buffer(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.buffer_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL XModem::_internal_mutable_buffer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.buffer_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE XModem::release_buffer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.XModem.buffer)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.buffer_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.buffer_.Set("", GetArena());
  }
  return released;
}
inline void XModem::set_allocated_buffer(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.buffer_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.buffer_.IsDefault()) {
    _impl_.buffer_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.XModem.buffer)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace meshtastic


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::meshtastic::XModem_Control> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::meshtastic::XModem_Control>() {
  return ::meshtastic::XModem_Control_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // meshtastic_2fxmodem_2eproto_2epb_2eh
