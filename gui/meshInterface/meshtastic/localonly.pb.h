// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: meshtastic/localonly.proto
// Protobuf C++ Version: 6.31.1

#ifndef meshtastic_2flocalonly_2eproto_2epb_2eh
#define meshtastic_2flocalonly_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "meshtastic/config.pb.h"
#include "meshtastic/module_config.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_meshtastic_2flocalonly_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_meshtastic_2flocalonly_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_meshtastic_2flocalonly_2eproto;
}  // extern "C"
namespace meshtastic {
class LocalConfig;
struct LocalConfigDefaultTypeInternal;
extern LocalConfigDefaultTypeInternal _LocalConfig_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LocalConfig_class_data_;
class LocalModuleConfig;
struct LocalModuleConfigDefaultTypeInternal;
extern LocalModuleConfigDefaultTypeInternal _LocalModuleConfig_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LocalModuleConfig_class_data_;
}  // namespace meshtastic
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace meshtastic {

// ===================================================================


// -------------------------------------------------------------------

class LocalModuleConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.LocalModuleConfig) */ {
 public:
  inline LocalModuleConfig() : LocalModuleConfig(nullptr) {}
  ~LocalModuleConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LocalModuleConfig* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LocalModuleConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LocalModuleConfig(::google::protobuf::internal::ConstantInitialized);

  inline LocalModuleConfig(const LocalModuleConfig& from) : LocalModuleConfig(nullptr, from) {}
  inline LocalModuleConfig(LocalModuleConfig&& from) noexcept
      : LocalModuleConfig(nullptr, ::std::move(from)) {}
  inline LocalModuleConfig& operator=(const LocalModuleConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocalModuleConfig& operator=(LocalModuleConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LocalModuleConfig& default_instance() {
    return *reinterpret_cast<const LocalModuleConfig*>(
        &_LocalModuleConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(LocalModuleConfig& a, LocalModuleConfig& b) { a.Swap(&b); }
  inline void Swap(LocalModuleConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocalModuleConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LocalModuleConfig* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LocalModuleConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LocalModuleConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LocalModuleConfig& from) { LocalModuleConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LocalModuleConfig* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.LocalModuleConfig"; }

 protected:
  explicit LocalModuleConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LocalModuleConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LocalModuleConfig& from);
  LocalModuleConfig(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LocalModuleConfig&& from) noexcept
      : LocalModuleConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMqttFieldNumber = 1,
    kSerialFieldNumber = 2,
    kExternalNotificationFieldNumber = 3,
    kStoreForwardFieldNumber = 4,
    kRangeTestFieldNumber = 5,
    kTelemetryFieldNumber = 6,
    kCannedMessageFieldNumber = 7,
    kAudioFieldNumber = 9,
    kRemoteHardwareFieldNumber = 10,
    kNeighborInfoFieldNumber = 11,
    kAmbientLightingFieldNumber = 12,
    kDetectionSensorFieldNumber = 13,
    kPaxcounterFieldNumber = 14,
    kVersionFieldNumber = 8,
  };
  // .meshtastic.ModuleConfig.MQTTConfig mqtt = 1;
  bool has_mqtt() const;
  void clear_mqtt() ;
  const ::meshtastic::ModuleConfig_MQTTConfig& mqtt() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NULLABLE release_mqtt();
  ::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NONNULL mutable_mqtt();
  void set_allocated_mqtt(::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_mqtt(::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NULLABLE unsafe_arena_release_mqtt();

  private:
  const ::meshtastic::ModuleConfig_MQTTConfig& _internal_mqtt() const;
  ::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NONNULL _internal_mutable_mqtt();

  public:
  // .meshtastic.ModuleConfig.SerialConfig serial = 2;
  bool has_serial() const;
  void clear_serial() ;
  const ::meshtastic::ModuleConfig_SerialConfig& serial() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NULLABLE release_serial();
  ::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NONNULL mutable_serial();
  void set_allocated_serial(::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_serial(::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NULLABLE unsafe_arena_release_serial();

  private:
  const ::meshtastic::ModuleConfig_SerialConfig& _internal_serial() const;
  ::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NONNULL _internal_mutable_serial();

  public:
  // .meshtastic.ModuleConfig.ExternalNotificationConfig external_notification = 3;
  bool has_external_notification() const;
  void clear_external_notification() ;
  const ::meshtastic::ModuleConfig_ExternalNotificationConfig& external_notification() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NULLABLE release_external_notification();
  ::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NONNULL mutable_external_notification();
  void set_allocated_external_notification(::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_external_notification(::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NULLABLE unsafe_arena_release_external_notification();

  private:
  const ::meshtastic::ModuleConfig_ExternalNotificationConfig& _internal_external_notification() const;
  ::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NONNULL _internal_mutable_external_notification();

  public:
  // .meshtastic.ModuleConfig.StoreForwardConfig store_forward = 4;
  bool has_store_forward() const;
  void clear_store_forward() ;
  const ::meshtastic::ModuleConfig_StoreForwardConfig& store_forward() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NULLABLE release_store_forward();
  ::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NONNULL mutable_store_forward();
  void set_allocated_store_forward(::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_store_forward(::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NULLABLE unsafe_arena_release_store_forward();

  private:
  const ::meshtastic::ModuleConfig_StoreForwardConfig& _internal_store_forward() const;
  ::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NONNULL _internal_mutable_store_forward();

  public:
  // .meshtastic.ModuleConfig.RangeTestConfig range_test = 5;
  bool has_range_test() const;
  void clear_range_test() ;
  const ::meshtastic::ModuleConfig_RangeTestConfig& range_test() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NULLABLE release_range_test();
  ::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NONNULL mutable_range_test();
  void set_allocated_range_test(::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_range_test(::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NULLABLE unsafe_arena_release_range_test();

  private:
  const ::meshtastic::ModuleConfig_RangeTestConfig& _internal_range_test() const;
  ::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NONNULL _internal_mutable_range_test();

  public:
  // .meshtastic.ModuleConfig.TelemetryConfig telemetry = 6;
  bool has_telemetry() const;
  void clear_telemetry() ;
  const ::meshtastic::ModuleConfig_TelemetryConfig& telemetry() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NULLABLE release_telemetry();
  ::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NONNULL mutable_telemetry();
  void set_allocated_telemetry(::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_telemetry(::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NULLABLE unsafe_arena_release_telemetry();

  private:
  const ::meshtastic::ModuleConfig_TelemetryConfig& _internal_telemetry() const;
  ::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NONNULL _internal_mutable_telemetry();

  public:
  // .meshtastic.ModuleConfig.CannedMessageConfig canned_message = 7;
  bool has_canned_message() const;
  void clear_canned_message() ;
  const ::meshtastic::ModuleConfig_CannedMessageConfig& canned_message() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NULLABLE release_canned_message();
  ::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NONNULL mutable_canned_message();
  void set_allocated_canned_message(::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_canned_message(::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NULLABLE unsafe_arena_release_canned_message();

  private:
  const ::meshtastic::ModuleConfig_CannedMessageConfig& _internal_canned_message() const;
  ::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NONNULL _internal_mutable_canned_message();

  public:
  // .meshtastic.ModuleConfig.AudioConfig audio = 9;
  bool has_audio() const;
  void clear_audio() ;
  const ::meshtastic::ModuleConfig_AudioConfig& audio() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NULLABLE release_audio();
  ::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NONNULL mutable_audio();
  void set_allocated_audio(::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_audio(::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NULLABLE unsafe_arena_release_audio();

  private:
  const ::meshtastic::ModuleConfig_AudioConfig& _internal_audio() const;
  ::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NONNULL _internal_mutable_audio();

  public:
  // .meshtastic.ModuleConfig.RemoteHardwareConfig remote_hardware = 10;
  bool has_remote_hardware() const;
  void clear_remote_hardware() ;
  const ::meshtastic::ModuleConfig_RemoteHardwareConfig& remote_hardware() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NULLABLE release_remote_hardware();
  ::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NONNULL mutable_remote_hardware();
  void set_allocated_remote_hardware(::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_remote_hardware(::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NULLABLE unsafe_arena_release_remote_hardware();

  private:
  const ::meshtastic::ModuleConfig_RemoteHardwareConfig& _internal_remote_hardware() const;
  ::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NONNULL _internal_mutable_remote_hardware();

  public:
  // .meshtastic.ModuleConfig.NeighborInfoConfig neighbor_info = 11;
  bool has_neighbor_info() const;
  void clear_neighbor_info() ;
  const ::meshtastic::ModuleConfig_NeighborInfoConfig& neighbor_info() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NULLABLE release_neighbor_info();
  ::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NONNULL mutable_neighbor_info();
  void set_allocated_neighbor_info(::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_neighbor_info(::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NULLABLE unsafe_arena_release_neighbor_info();

  private:
  const ::meshtastic::ModuleConfig_NeighborInfoConfig& _internal_neighbor_info() const;
  ::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NONNULL _internal_mutable_neighbor_info();

  public:
  // .meshtastic.ModuleConfig.AmbientLightingConfig ambient_lighting = 12;
  bool has_ambient_lighting() const;
  void clear_ambient_lighting() ;
  const ::meshtastic::ModuleConfig_AmbientLightingConfig& ambient_lighting() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NULLABLE release_ambient_lighting();
  ::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NONNULL mutable_ambient_lighting();
  void set_allocated_ambient_lighting(::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_ambient_lighting(::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NULLABLE unsafe_arena_release_ambient_lighting();

  private:
  const ::meshtastic::ModuleConfig_AmbientLightingConfig& _internal_ambient_lighting() const;
  ::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NONNULL _internal_mutable_ambient_lighting();

  public:
  // .meshtastic.ModuleConfig.DetectionSensorConfig detection_sensor = 13;
  bool has_detection_sensor() const;
  void clear_detection_sensor() ;
  const ::meshtastic::ModuleConfig_DetectionSensorConfig& detection_sensor() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NULLABLE release_detection_sensor();
  ::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NONNULL mutable_detection_sensor();
  void set_allocated_detection_sensor(::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_detection_sensor(::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NULLABLE unsafe_arena_release_detection_sensor();

  private:
  const ::meshtastic::ModuleConfig_DetectionSensorConfig& _internal_detection_sensor() const;
  ::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NONNULL _internal_mutable_detection_sensor();

  public:
  // .meshtastic.ModuleConfig.PaxcounterConfig paxcounter = 14;
  bool has_paxcounter() const;
  void clear_paxcounter() ;
  const ::meshtastic::ModuleConfig_PaxcounterConfig& paxcounter() const;
  [[nodiscard]] ::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NULLABLE release_paxcounter();
  ::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NONNULL mutable_paxcounter();
  void set_allocated_paxcounter(::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_paxcounter(::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NULLABLE unsafe_arena_release_paxcounter();

  private:
  const ::meshtastic::ModuleConfig_PaxcounterConfig& _internal_paxcounter() const;
  ::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NONNULL _internal_mutable_paxcounter();

  public:
  // uint32 version = 8;
  void clear_version() ;
  ::uint32_t version() const;
  void set_version(::uint32_t value);

  private:
  ::uint32_t _internal_version() const;
  void _internal_set_version(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.LocalModuleConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 14,
                                   13, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LocalModuleConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NULLABLE mqtt_;
    ::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NULLABLE serial_;
    ::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NULLABLE external_notification_;
    ::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NULLABLE store_forward_;
    ::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NULLABLE range_test_;
    ::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NULLABLE telemetry_;
    ::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NULLABLE canned_message_;
    ::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NULLABLE audio_;
    ::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NULLABLE remote_hardware_;
    ::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NULLABLE neighbor_info_;
    ::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NULLABLE ambient_lighting_;
    ::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NULLABLE detection_sensor_;
    ::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NULLABLE paxcounter_;
    ::uint32_t version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2flocalonly_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LocalModuleConfig_class_data_;
// -------------------------------------------------------------------

class LocalConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.LocalConfig) */ {
 public:
  inline LocalConfig() : LocalConfig(nullptr) {}
  ~LocalConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LocalConfig* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LocalConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LocalConfig(::google::protobuf::internal::ConstantInitialized);

  inline LocalConfig(const LocalConfig& from) : LocalConfig(nullptr, from) {}
  inline LocalConfig(LocalConfig&& from) noexcept
      : LocalConfig(nullptr, ::std::move(from)) {}
  inline LocalConfig& operator=(const LocalConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocalConfig& operator=(LocalConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LocalConfig& default_instance() {
    return *reinterpret_cast<const LocalConfig*>(
        &_LocalConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(LocalConfig& a, LocalConfig& b) { a.Swap(&b); }
  inline void Swap(LocalConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocalConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LocalConfig* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LocalConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LocalConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LocalConfig& from) { LocalConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LocalConfig* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.LocalConfig"; }

 protected:
  explicit LocalConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LocalConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LocalConfig& from);
  LocalConfig(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LocalConfig&& from) noexcept
      : LocalConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceFieldNumber = 1,
    kPositionFieldNumber = 2,
    kPowerFieldNumber = 3,
    kNetworkFieldNumber = 4,
    kDisplayFieldNumber = 5,
    kLoraFieldNumber = 6,
    kBluetoothFieldNumber = 7,
    kSecurityFieldNumber = 9,
    kVersionFieldNumber = 8,
  };
  // .meshtastic.Config.DeviceConfig device = 1;
  bool has_device() const;
  void clear_device() ;
  const ::meshtastic::Config_DeviceConfig& device() const;
  [[nodiscard]] ::meshtastic::Config_DeviceConfig* PROTOBUF_NULLABLE release_device();
  ::meshtastic::Config_DeviceConfig* PROTOBUF_NONNULL mutable_device();
  void set_allocated_device(::meshtastic::Config_DeviceConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_device(::meshtastic::Config_DeviceConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::Config_DeviceConfig* PROTOBUF_NULLABLE unsafe_arena_release_device();

  private:
  const ::meshtastic::Config_DeviceConfig& _internal_device() const;
  ::meshtastic::Config_DeviceConfig* PROTOBUF_NONNULL _internal_mutable_device();

  public:
  // .meshtastic.Config.PositionConfig position = 2;
  bool has_position() const;
  void clear_position() ;
  const ::meshtastic::Config_PositionConfig& position() const;
  [[nodiscard]] ::meshtastic::Config_PositionConfig* PROTOBUF_NULLABLE release_position();
  ::meshtastic::Config_PositionConfig* PROTOBUF_NONNULL mutable_position();
  void set_allocated_position(::meshtastic::Config_PositionConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_position(::meshtastic::Config_PositionConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::Config_PositionConfig* PROTOBUF_NULLABLE unsafe_arena_release_position();

  private:
  const ::meshtastic::Config_PositionConfig& _internal_position() const;
  ::meshtastic::Config_PositionConfig* PROTOBUF_NONNULL _internal_mutable_position();

  public:
  // .meshtastic.Config.PowerConfig power = 3;
  bool has_power() const;
  void clear_power() ;
  const ::meshtastic::Config_PowerConfig& power() const;
  [[nodiscard]] ::meshtastic::Config_PowerConfig* PROTOBUF_NULLABLE release_power();
  ::meshtastic::Config_PowerConfig* PROTOBUF_NONNULL mutable_power();
  void set_allocated_power(::meshtastic::Config_PowerConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_power(::meshtastic::Config_PowerConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::Config_PowerConfig* PROTOBUF_NULLABLE unsafe_arena_release_power();

  private:
  const ::meshtastic::Config_PowerConfig& _internal_power() const;
  ::meshtastic::Config_PowerConfig* PROTOBUF_NONNULL _internal_mutable_power();

  public:
  // .meshtastic.Config.NetworkConfig network = 4;
  bool has_network() const;
  void clear_network() ;
  const ::meshtastic::Config_NetworkConfig& network() const;
  [[nodiscard]] ::meshtastic::Config_NetworkConfig* PROTOBUF_NULLABLE release_network();
  ::meshtastic::Config_NetworkConfig* PROTOBUF_NONNULL mutable_network();
  void set_allocated_network(::meshtastic::Config_NetworkConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_network(::meshtastic::Config_NetworkConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::Config_NetworkConfig* PROTOBUF_NULLABLE unsafe_arena_release_network();

  private:
  const ::meshtastic::Config_NetworkConfig& _internal_network() const;
  ::meshtastic::Config_NetworkConfig* PROTOBUF_NONNULL _internal_mutable_network();

  public:
  // .meshtastic.Config.DisplayConfig display = 5;
  bool has_display() const;
  void clear_display() ;
  const ::meshtastic::Config_DisplayConfig& display() const;
  [[nodiscard]] ::meshtastic::Config_DisplayConfig* PROTOBUF_NULLABLE release_display();
  ::meshtastic::Config_DisplayConfig* PROTOBUF_NONNULL mutable_display();
  void set_allocated_display(::meshtastic::Config_DisplayConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_display(::meshtastic::Config_DisplayConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::Config_DisplayConfig* PROTOBUF_NULLABLE unsafe_arena_release_display();

  private:
  const ::meshtastic::Config_DisplayConfig& _internal_display() const;
  ::meshtastic::Config_DisplayConfig* PROTOBUF_NONNULL _internal_mutable_display();

  public:
  // .meshtastic.Config.LoRaConfig lora = 6;
  bool has_lora() const;
  void clear_lora() ;
  const ::meshtastic::Config_LoRaConfig& lora() const;
  [[nodiscard]] ::meshtastic::Config_LoRaConfig* PROTOBUF_NULLABLE release_lora();
  ::meshtastic::Config_LoRaConfig* PROTOBUF_NONNULL mutable_lora();
  void set_allocated_lora(::meshtastic::Config_LoRaConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_lora(::meshtastic::Config_LoRaConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::Config_LoRaConfig* PROTOBUF_NULLABLE unsafe_arena_release_lora();

  private:
  const ::meshtastic::Config_LoRaConfig& _internal_lora() const;
  ::meshtastic::Config_LoRaConfig* PROTOBUF_NONNULL _internal_mutable_lora();

  public:
  // .meshtastic.Config.BluetoothConfig bluetooth = 7;
  bool has_bluetooth() const;
  void clear_bluetooth() ;
  const ::meshtastic::Config_BluetoothConfig& bluetooth() const;
  [[nodiscard]] ::meshtastic::Config_BluetoothConfig* PROTOBUF_NULLABLE release_bluetooth();
  ::meshtastic::Config_BluetoothConfig* PROTOBUF_NONNULL mutable_bluetooth();
  void set_allocated_bluetooth(::meshtastic::Config_BluetoothConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_bluetooth(::meshtastic::Config_BluetoothConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::Config_BluetoothConfig* PROTOBUF_NULLABLE unsafe_arena_release_bluetooth();

  private:
  const ::meshtastic::Config_BluetoothConfig& _internal_bluetooth() const;
  ::meshtastic::Config_BluetoothConfig* PROTOBUF_NONNULL _internal_mutable_bluetooth();

  public:
  // .meshtastic.Config.SecurityConfig security = 9;
  bool has_security() const;
  void clear_security() ;
  const ::meshtastic::Config_SecurityConfig& security() const;
  [[nodiscard]] ::meshtastic::Config_SecurityConfig* PROTOBUF_NULLABLE release_security();
  ::meshtastic::Config_SecurityConfig* PROTOBUF_NONNULL mutable_security();
  void set_allocated_security(::meshtastic::Config_SecurityConfig* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_security(::meshtastic::Config_SecurityConfig* PROTOBUF_NULLABLE value);
  ::meshtastic::Config_SecurityConfig* PROTOBUF_NULLABLE unsafe_arena_release_security();

  private:
  const ::meshtastic::Config_SecurityConfig& _internal_security() const;
  ::meshtastic::Config_SecurityConfig* PROTOBUF_NONNULL _internal_mutable_security();

  public:
  // uint32 version = 8;
  void clear_version() ;
  ::uint32_t version() const;
  void set_version(::uint32_t value);

  private:
  ::uint32_t _internal_version() const;
  void _internal_set_version(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.LocalConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9,
                                   8, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LocalConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::meshtastic::Config_DeviceConfig* PROTOBUF_NULLABLE device_;
    ::meshtastic::Config_PositionConfig* PROTOBUF_NULLABLE position_;
    ::meshtastic::Config_PowerConfig* PROTOBUF_NULLABLE power_;
    ::meshtastic::Config_NetworkConfig* PROTOBUF_NULLABLE network_;
    ::meshtastic::Config_DisplayConfig* PROTOBUF_NULLABLE display_;
    ::meshtastic::Config_LoRaConfig* PROTOBUF_NULLABLE lora_;
    ::meshtastic::Config_BluetoothConfig* PROTOBUF_NULLABLE bluetooth_;
    ::meshtastic::Config_SecurityConfig* PROTOBUF_NULLABLE security_;
    ::uint32_t version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2flocalonly_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LocalConfig_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// LocalConfig

// .meshtastic.Config.DeviceConfig device = 1;
inline bool LocalConfig::has_device() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.device_ != nullptr);
  return value;
}
inline const ::meshtastic::Config_DeviceConfig& LocalConfig::_internal_device() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::Config_DeviceConfig* p = _impl_.device_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::Config_DeviceConfig&>(::meshtastic::_Config_DeviceConfig_default_instance_);
}
inline const ::meshtastic::Config_DeviceConfig& LocalConfig::device() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalConfig.device)
  return _internal_device();
}
inline void LocalConfig::unsafe_arena_set_allocated_device(
    ::meshtastic::Config_DeviceConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_);
  }
  _impl_.device_ = reinterpret_cast<::meshtastic::Config_DeviceConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalConfig.device)
}
inline ::meshtastic::Config_DeviceConfig* PROTOBUF_NULLABLE LocalConfig::release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::meshtastic::Config_DeviceConfig* released = _impl_.device_;
  _impl_.device_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::Config_DeviceConfig* PROTOBUF_NULLABLE LocalConfig::unsafe_arena_release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalConfig.device)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::meshtastic::Config_DeviceConfig* temp = _impl_.device_;
  _impl_.device_ = nullptr;
  return temp;
}
inline ::meshtastic::Config_DeviceConfig* PROTOBUF_NONNULL LocalConfig::_internal_mutable_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::Config_DeviceConfig>(GetArena());
    _impl_.device_ = reinterpret_cast<::meshtastic::Config_DeviceConfig*>(p);
  }
  return _impl_.device_;
}
inline ::meshtastic::Config_DeviceConfig* PROTOBUF_NONNULL LocalConfig::mutable_device()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::meshtastic::Config_DeviceConfig* _msg = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalConfig.device)
  return _msg;
}
inline void LocalConfig::set_allocated_device(::meshtastic::Config_DeviceConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.device_ = reinterpret_cast<::meshtastic::Config_DeviceConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalConfig.device)
}

// .meshtastic.Config.PositionConfig position = 2;
inline bool LocalConfig::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline const ::meshtastic::Config_PositionConfig& LocalConfig::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::Config_PositionConfig* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::Config_PositionConfig&>(::meshtastic::_Config_PositionConfig_default_instance_);
}
inline const ::meshtastic::Config_PositionConfig& LocalConfig::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalConfig.position)
  return _internal_position();
}
inline void LocalConfig::unsafe_arena_set_allocated_position(
    ::meshtastic::Config_PositionConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::meshtastic::Config_PositionConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalConfig.position)
}
inline ::meshtastic::Config_PositionConfig* PROTOBUF_NULLABLE LocalConfig::release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::meshtastic::Config_PositionConfig* released = _impl_.position_;
  _impl_.position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::Config_PositionConfig* PROTOBUF_NULLABLE LocalConfig::unsafe_arena_release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalConfig.position)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::meshtastic::Config_PositionConfig* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::meshtastic::Config_PositionConfig* PROTOBUF_NONNULL LocalConfig::_internal_mutable_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::Config_PositionConfig>(GetArena());
    _impl_.position_ = reinterpret_cast<::meshtastic::Config_PositionConfig*>(p);
  }
  return _impl_.position_;
}
inline ::meshtastic::Config_PositionConfig* PROTOBUF_NONNULL LocalConfig::mutable_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::meshtastic::Config_PositionConfig* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalConfig.position)
  return _msg;
}
inline void LocalConfig::set_allocated_position(::meshtastic::Config_PositionConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.position_ = reinterpret_cast<::meshtastic::Config_PositionConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalConfig.position)
}

// .meshtastic.Config.PowerConfig power = 3;
inline bool LocalConfig::has_power() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.power_ != nullptr);
  return value;
}
inline const ::meshtastic::Config_PowerConfig& LocalConfig::_internal_power() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::Config_PowerConfig* p = _impl_.power_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::Config_PowerConfig&>(::meshtastic::_Config_PowerConfig_default_instance_);
}
inline const ::meshtastic::Config_PowerConfig& LocalConfig::power() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalConfig.power)
  return _internal_power();
}
inline void LocalConfig::unsafe_arena_set_allocated_power(
    ::meshtastic::Config_PowerConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.power_);
  }
  _impl_.power_ = reinterpret_cast<::meshtastic::Config_PowerConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalConfig.power)
}
inline ::meshtastic::Config_PowerConfig* PROTOBUF_NULLABLE LocalConfig::release_power() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::meshtastic::Config_PowerConfig* released = _impl_.power_;
  _impl_.power_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::Config_PowerConfig* PROTOBUF_NULLABLE LocalConfig::unsafe_arena_release_power() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalConfig.power)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::meshtastic::Config_PowerConfig* temp = _impl_.power_;
  _impl_.power_ = nullptr;
  return temp;
}
inline ::meshtastic::Config_PowerConfig* PROTOBUF_NONNULL LocalConfig::_internal_mutable_power() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.power_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::Config_PowerConfig>(GetArena());
    _impl_.power_ = reinterpret_cast<::meshtastic::Config_PowerConfig*>(p);
  }
  return _impl_.power_;
}
inline ::meshtastic::Config_PowerConfig* PROTOBUF_NONNULL LocalConfig::mutable_power()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::meshtastic::Config_PowerConfig* _msg = _internal_mutable_power();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalConfig.power)
  return _msg;
}
inline void LocalConfig::set_allocated_power(::meshtastic::Config_PowerConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.power_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.power_ = reinterpret_cast<::meshtastic::Config_PowerConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalConfig.power)
}

// .meshtastic.Config.NetworkConfig network = 4;
inline bool LocalConfig::has_network() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.network_ != nullptr);
  return value;
}
inline const ::meshtastic::Config_NetworkConfig& LocalConfig::_internal_network() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::Config_NetworkConfig* p = _impl_.network_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::Config_NetworkConfig&>(::meshtastic::_Config_NetworkConfig_default_instance_);
}
inline const ::meshtastic::Config_NetworkConfig& LocalConfig::network() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalConfig.network)
  return _internal_network();
}
inline void LocalConfig::unsafe_arena_set_allocated_network(
    ::meshtastic::Config_NetworkConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.network_);
  }
  _impl_.network_ = reinterpret_cast<::meshtastic::Config_NetworkConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalConfig.network)
}
inline ::meshtastic::Config_NetworkConfig* PROTOBUF_NULLABLE LocalConfig::release_network() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::meshtastic::Config_NetworkConfig* released = _impl_.network_;
  _impl_.network_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::Config_NetworkConfig* PROTOBUF_NULLABLE LocalConfig::unsafe_arena_release_network() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalConfig.network)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::meshtastic::Config_NetworkConfig* temp = _impl_.network_;
  _impl_.network_ = nullptr;
  return temp;
}
inline ::meshtastic::Config_NetworkConfig* PROTOBUF_NONNULL LocalConfig::_internal_mutable_network() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.network_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::Config_NetworkConfig>(GetArena());
    _impl_.network_ = reinterpret_cast<::meshtastic::Config_NetworkConfig*>(p);
  }
  return _impl_.network_;
}
inline ::meshtastic::Config_NetworkConfig* PROTOBUF_NONNULL LocalConfig::mutable_network()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::meshtastic::Config_NetworkConfig* _msg = _internal_mutable_network();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalConfig.network)
  return _msg;
}
inline void LocalConfig::set_allocated_network(::meshtastic::Config_NetworkConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.network_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.network_ = reinterpret_cast<::meshtastic::Config_NetworkConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalConfig.network)
}

// .meshtastic.Config.DisplayConfig display = 5;
inline bool LocalConfig::has_display() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.display_ != nullptr);
  return value;
}
inline const ::meshtastic::Config_DisplayConfig& LocalConfig::_internal_display() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::Config_DisplayConfig* p = _impl_.display_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::Config_DisplayConfig&>(::meshtastic::_Config_DisplayConfig_default_instance_);
}
inline const ::meshtastic::Config_DisplayConfig& LocalConfig::display() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalConfig.display)
  return _internal_display();
}
inline void LocalConfig::unsafe_arena_set_allocated_display(
    ::meshtastic::Config_DisplayConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.display_);
  }
  _impl_.display_ = reinterpret_cast<::meshtastic::Config_DisplayConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalConfig.display)
}
inline ::meshtastic::Config_DisplayConfig* PROTOBUF_NULLABLE LocalConfig::release_display() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::meshtastic::Config_DisplayConfig* released = _impl_.display_;
  _impl_.display_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::Config_DisplayConfig* PROTOBUF_NULLABLE LocalConfig::unsafe_arena_release_display() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalConfig.display)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::meshtastic::Config_DisplayConfig* temp = _impl_.display_;
  _impl_.display_ = nullptr;
  return temp;
}
inline ::meshtastic::Config_DisplayConfig* PROTOBUF_NONNULL LocalConfig::_internal_mutable_display() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.display_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::Config_DisplayConfig>(GetArena());
    _impl_.display_ = reinterpret_cast<::meshtastic::Config_DisplayConfig*>(p);
  }
  return _impl_.display_;
}
inline ::meshtastic::Config_DisplayConfig* PROTOBUF_NONNULL LocalConfig::mutable_display()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::meshtastic::Config_DisplayConfig* _msg = _internal_mutable_display();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalConfig.display)
  return _msg;
}
inline void LocalConfig::set_allocated_display(::meshtastic::Config_DisplayConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.display_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.display_ = reinterpret_cast<::meshtastic::Config_DisplayConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalConfig.display)
}

// .meshtastic.Config.LoRaConfig lora = 6;
inline bool LocalConfig::has_lora() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lora_ != nullptr);
  return value;
}
inline const ::meshtastic::Config_LoRaConfig& LocalConfig::_internal_lora() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::Config_LoRaConfig* p = _impl_.lora_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::Config_LoRaConfig&>(::meshtastic::_Config_LoRaConfig_default_instance_);
}
inline const ::meshtastic::Config_LoRaConfig& LocalConfig::lora() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalConfig.lora)
  return _internal_lora();
}
inline void LocalConfig::unsafe_arena_set_allocated_lora(
    ::meshtastic::Config_LoRaConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lora_);
  }
  _impl_.lora_ = reinterpret_cast<::meshtastic::Config_LoRaConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalConfig.lora)
}
inline ::meshtastic::Config_LoRaConfig* PROTOBUF_NULLABLE LocalConfig::release_lora() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::meshtastic::Config_LoRaConfig* released = _impl_.lora_;
  _impl_.lora_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::Config_LoRaConfig* PROTOBUF_NULLABLE LocalConfig::unsafe_arena_release_lora() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalConfig.lora)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::meshtastic::Config_LoRaConfig* temp = _impl_.lora_;
  _impl_.lora_ = nullptr;
  return temp;
}
inline ::meshtastic::Config_LoRaConfig* PROTOBUF_NONNULL LocalConfig::_internal_mutable_lora() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lora_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::Config_LoRaConfig>(GetArena());
    _impl_.lora_ = reinterpret_cast<::meshtastic::Config_LoRaConfig*>(p);
  }
  return _impl_.lora_;
}
inline ::meshtastic::Config_LoRaConfig* PROTOBUF_NONNULL LocalConfig::mutable_lora()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::meshtastic::Config_LoRaConfig* _msg = _internal_mutable_lora();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalConfig.lora)
  return _msg;
}
inline void LocalConfig::set_allocated_lora(::meshtastic::Config_LoRaConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lora_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.lora_ = reinterpret_cast<::meshtastic::Config_LoRaConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalConfig.lora)
}

// .meshtastic.Config.BluetoothConfig bluetooth = 7;
inline bool LocalConfig::has_bluetooth() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bluetooth_ != nullptr);
  return value;
}
inline const ::meshtastic::Config_BluetoothConfig& LocalConfig::_internal_bluetooth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::Config_BluetoothConfig* p = _impl_.bluetooth_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::Config_BluetoothConfig&>(::meshtastic::_Config_BluetoothConfig_default_instance_);
}
inline const ::meshtastic::Config_BluetoothConfig& LocalConfig::bluetooth() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalConfig.bluetooth)
  return _internal_bluetooth();
}
inline void LocalConfig::unsafe_arena_set_allocated_bluetooth(
    ::meshtastic::Config_BluetoothConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bluetooth_);
  }
  _impl_.bluetooth_ = reinterpret_cast<::meshtastic::Config_BluetoothConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalConfig.bluetooth)
}
inline ::meshtastic::Config_BluetoothConfig* PROTOBUF_NULLABLE LocalConfig::release_bluetooth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::meshtastic::Config_BluetoothConfig* released = _impl_.bluetooth_;
  _impl_.bluetooth_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::Config_BluetoothConfig* PROTOBUF_NULLABLE LocalConfig::unsafe_arena_release_bluetooth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalConfig.bluetooth)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::meshtastic::Config_BluetoothConfig* temp = _impl_.bluetooth_;
  _impl_.bluetooth_ = nullptr;
  return temp;
}
inline ::meshtastic::Config_BluetoothConfig* PROTOBUF_NONNULL LocalConfig::_internal_mutable_bluetooth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bluetooth_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::Config_BluetoothConfig>(GetArena());
    _impl_.bluetooth_ = reinterpret_cast<::meshtastic::Config_BluetoothConfig*>(p);
  }
  return _impl_.bluetooth_;
}
inline ::meshtastic::Config_BluetoothConfig* PROTOBUF_NONNULL LocalConfig::mutable_bluetooth()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::meshtastic::Config_BluetoothConfig* _msg = _internal_mutable_bluetooth();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalConfig.bluetooth)
  return _msg;
}
inline void LocalConfig::set_allocated_bluetooth(::meshtastic::Config_BluetoothConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bluetooth_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.bluetooth_ = reinterpret_cast<::meshtastic::Config_BluetoothConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalConfig.bluetooth)
}

// uint32 version = 8;
inline void LocalConfig::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t LocalConfig::version() const {
  // @@protoc_insertion_point(field_get:meshtastic.LocalConfig.version)
  return _internal_version();
}
inline void LocalConfig::set_version(::uint32_t value) {
  _internal_set_version(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:meshtastic.LocalConfig.version)
}
inline ::uint32_t LocalConfig::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void LocalConfig::_internal_set_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// .meshtastic.Config.SecurityConfig security = 9;
inline bool LocalConfig::has_security() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.security_ != nullptr);
  return value;
}
inline const ::meshtastic::Config_SecurityConfig& LocalConfig::_internal_security() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::Config_SecurityConfig* p = _impl_.security_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::Config_SecurityConfig&>(::meshtastic::_Config_SecurityConfig_default_instance_);
}
inline const ::meshtastic::Config_SecurityConfig& LocalConfig::security() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalConfig.security)
  return _internal_security();
}
inline void LocalConfig::unsafe_arena_set_allocated_security(
    ::meshtastic::Config_SecurityConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.security_);
  }
  _impl_.security_ = reinterpret_cast<::meshtastic::Config_SecurityConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalConfig.security)
}
inline ::meshtastic::Config_SecurityConfig* PROTOBUF_NULLABLE LocalConfig::release_security() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::meshtastic::Config_SecurityConfig* released = _impl_.security_;
  _impl_.security_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::Config_SecurityConfig* PROTOBUF_NULLABLE LocalConfig::unsafe_arena_release_security() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalConfig.security)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::meshtastic::Config_SecurityConfig* temp = _impl_.security_;
  _impl_.security_ = nullptr;
  return temp;
}
inline ::meshtastic::Config_SecurityConfig* PROTOBUF_NONNULL LocalConfig::_internal_mutable_security() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.security_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::Config_SecurityConfig>(GetArena());
    _impl_.security_ = reinterpret_cast<::meshtastic::Config_SecurityConfig*>(p);
  }
  return _impl_.security_;
}
inline ::meshtastic::Config_SecurityConfig* PROTOBUF_NONNULL LocalConfig::mutable_security()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::meshtastic::Config_SecurityConfig* _msg = _internal_mutable_security();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalConfig.security)
  return _msg;
}
inline void LocalConfig::set_allocated_security(::meshtastic::Config_SecurityConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.security_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.security_ = reinterpret_cast<::meshtastic::Config_SecurityConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalConfig.security)
}

// -------------------------------------------------------------------

// LocalModuleConfig

// .meshtastic.ModuleConfig.MQTTConfig mqtt = 1;
inline bool LocalModuleConfig::has_mqtt() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mqtt_ != nullptr);
  return value;
}
inline const ::meshtastic::ModuleConfig_MQTTConfig& LocalModuleConfig::_internal_mqtt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::ModuleConfig_MQTTConfig* p = _impl_.mqtt_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::ModuleConfig_MQTTConfig&>(::meshtastic::_ModuleConfig_MQTTConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_MQTTConfig& LocalModuleConfig::mqtt() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalModuleConfig.mqtt)
  return _internal_mqtt();
}
inline void LocalModuleConfig::unsafe_arena_set_allocated_mqtt(
    ::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mqtt_);
  }
  _impl_.mqtt_ = reinterpret_cast<::meshtastic::ModuleConfig_MQTTConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalModuleConfig.mqtt)
}
inline ::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NULLABLE LocalModuleConfig::release_mqtt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::meshtastic::ModuleConfig_MQTTConfig* released = _impl_.mqtt_;
  _impl_.mqtt_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NULLABLE LocalModuleConfig::unsafe_arena_release_mqtt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalModuleConfig.mqtt)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::meshtastic::ModuleConfig_MQTTConfig* temp = _impl_.mqtt_;
  _impl_.mqtt_ = nullptr;
  return temp;
}
inline ::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NONNULL LocalModuleConfig::_internal_mutable_mqtt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mqtt_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_MQTTConfig>(GetArena());
    _impl_.mqtt_ = reinterpret_cast<::meshtastic::ModuleConfig_MQTTConfig*>(p);
  }
  return _impl_.mqtt_;
}
inline ::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NONNULL LocalModuleConfig::mutable_mqtt()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::meshtastic::ModuleConfig_MQTTConfig* _msg = _internal_mutable_mqtt();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalModuleConfig.mqtt)
  return _msg;
}
inline void LocalModuleConfig::set_allocated_mqtt(::meshtastic::ModuleConfig_MQTTConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mqtt_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.mqtt_ = reinterpret_cast<::meshtastic::ModuleConfig_MQTTConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalModuleConfig.mqtt)
}

// .meshtastic.ModuleConfig.SerialConfig serial = 2;
inline bool LocalModuleConfig::has_serial() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.serial_ != nullptr);
  return value;
}
inline const ::meshtastic::ModuleConfig_SerialConfig& LocalModuleConfig::_internal_serial() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::ModuleConfig_SerialConfig* p = _impl_.serial_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::ModuleConfig_SerialConfig&>(::meshtastic::_ModuleConfig_SerialConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_SerialConfig& LocalModuleConfig::serial() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalModuleConfig.serial)
  return _internal_serial();
}
inline void LocalModuleConfig::unsafe_arena_set_allocated_serial(
    ::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.serial_);
  }
  _impl_.serial_ = reinterpret_cast<::meshtastic::ModuleConfig_SerialConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalModuleConfig.serial)
}
inline ::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NULLABLE LocalModuleConfig::release_serial() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::meshtastic::ModuleConfig_SerialConfig* released = _impl_.serial_;
  _impl_.serial_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NULLABLE LocalModuleConfig::unsafe_arena_release_serial() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalModuleConfig.serial)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::meshtastic::ModuleConfig_SerialConfig* temp = _impl_.serial_;
  _impl_.serial_ = nullptr;
  return temp;
}
inline ::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NONNULL LocalModuleConfig::_internal_mutable_serial() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.serial_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_SerialConfig>(GetArena());
    _impl_.serial_ = reinterpret_cast<::meshtastic::ModuleConfig_SerialConfig*>(p);
  }
  return _impl_.serial_;
}
inline ::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NONNULL LocalModuleConfig::mutable_serial()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::meshtastic::ModuleConfig_SerialConfig* _msg = _internal_mutable_serial();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalModuleConfig.serial)
  return _msg;
}
inline void LocalModuleConfig::set_allocated_serial(::meshtastic::ModuleConfig_SerialConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.serial_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.serial_ = reinterpret_cast<::meshtastic::ModuleConfig_SerialConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalModuleConfig.serial)
}

// .meshtastic.ModuleConfig.ExternalNotificationConfig external_notification = 3;
inline bool LocalModuleConfig::has_external_notification() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.external_notification_ != nullptr);
  return value;
}
inline const ::meshtastic::ModuleConfig_ExternalNotificationConfig& LocalModuleConfig::_internal_external_notification() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::ModuleConfig_ExternalNotificationConfig* p = _impl_.external_notification_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::ModuleConfig_ExternalNotificationConfig&>(::meshtastic::_ModuleConfig_ExternalNotificationConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_ExternalNotificationConfig& LocalModuleConfig::external_notification() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalModuleConfig.external_notification)
  return _internal_external_notification();
}
inline void LocalModuleConfig::unsafe_arena_set_allocated_external_notification(
    ::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.external_notification_);
  }
  _impl_.external_notification_ = reinterpret_cast<::meshtastic::ModuleConfig_ExternalNotificationConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalModuleConfig.external_notification)
}
inline ::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NULLABLE LocalModuleConfig::release_external_notification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::meshtastic::ModuleConfig_ExternalNotificationConfig* released = _impl_.external_notification_;
  _impl_.external_notification_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NULLABLE LocalModuleConfig::unsafe_arena_release_external_notification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalModuleConfig.external_notification)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::meshtastic::ModuleConfig_ExternalNotificationConfig* temp = _impl_.external_notification_;
  _impl_.external_notification_ = nullptr;
  return temp;
}
inline ::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NONNULL LocalModuleConfig::_internal_mutable_external_notification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.external_notification_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_ExternalNotificationConfig>(GetArena());
    _impl_.external_notification_ = reinterpret_cast<::meshtastic::ModuleConfig_ExternalNotificationConfig*>(p);
  }
  return _impl_.external_notification_;
}
inline ::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NONNULL LocalModuleConfig::mutable_external_notification()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::meshtastic::ModuleConfig_ExternalNotificationConfig* _msg = _internal_mutable_external_notification();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalModuleConfig.external_notification)
  return _msg;
}
inline void LocalModuleConfig::set_allocated_external_notification(::meshtastic::ModuleConfig_ExternalNotificationConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.external_notification_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.external_notification_ = reinterpret_cast<::meshtastic::ModuleConfig_ExternalNotificationConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalModuleConfig.external_notification)
}

// .meshtastic.ModuleConfig.StoreForwardConfig store_forward = 4;
inline bool LocalModuleConfig::has_store_forward() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.store_forward_ != nullptr);
  return value;
}
inline const ::meshtastic::ModuleConfig_StoreForwardConfig& LocalModuleConfig::_internal_store_forward() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::ModuleConfig_StoreForwardConfig* p = _impl_.store_forward_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::ModuleConfig_StoreForwardConfig&>(::meshtastic::_ModuleConfig_StoreForwardConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_StoreForwardConfig& LocalModuleConfig::store_forward() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalModuleConfig.store_forward)
  return _internal_store_forward();
}
inline void LocalModuleConfig::unsafe_arena_set_allocated_store_forward(
    ::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.store_forward_);
  }
  _impl_.store_forward_ = reinterpret_cast<::meshtastic::ModuleConfig_StoreForwardConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalModuleConfig.store_forward)
}
inline ::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NULLABLE LocalModuleConfig::release_store_forward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::meshtastic::ModuleConfig_StoreForwardConfig* released = _impl_.store_forward_;
  _impl_.store_forward_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NULLABLE LocalModuleConfig::unsafe_arena_release_store_forward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalModuleConfig.store_forward)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::meshtastic::ModuleConfig_StoreForwardConfig* temp = _impl_.store_forward_;
  _impl_.store_forward_ = nullptr;
  return temp;
}
inline ::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NONNULL LocalModuleConfig::_internal_mutable_store_forward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.store_forward_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_StoreForwardConfig>(GetArena());
    _impl_.store_forward_ = reinterpret_cast<::meshtastic::ModuleConfig_StoreForwardConfig*>(p);
  }
  return _impl_.store_forward_;
}
inline ::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NONNULL LocalModuleConfig::mutable_store_forward()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::meshtastic::ModuleConfig_StoreForwardConfig* _msg = _internal_mutable_store_forward();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalModuleConfig.store_forward)
  return _msg;
}
inline void LocalModuleConfig::set_allocated_store_forward(::meshtastic::ModuleConfig_StoreForwardConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.store_forward_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.store_forward_ = reinterpret_cast<::meshtastic::ModuleConfig_StoreForwardConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalModuleConfig.store_forward)
}

// .meshtastic.ModuleConfig.RangeTestConfig range_test = 5;
inline bool LocalModuleConfig::has_range_test() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.range_test_ != nullptr);
  return value;
}
inline const ::meshtastic::ModuleConfig_RangeTestConfig& LocalModuleConfig::_internal_range_test() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::ModuleConfig_RangeTestConfig* p = _impl_.range_test_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::ModuleConfig_RangeTestConfig&>(::meshtastic::_ModuleConfig_RangeTestConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_RangeTestConfig& LocalModuleConfig::range_test() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalModuleConfig.range_test)
  return _internal_range_test();
}
inline void LocalModuleConfig::unsafe_arena_set_allocated_range_test(
    ::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.range_test_);
  }
  _impl_.range_test_ = reinterpret_cast<::meshtastic::ModuleConfig_RangeTestConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalModuleConfig.range_test)
}
inline ::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NULLABLE LocalModuleConfig::release_range_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::meshtastic::ModuleConfig_RangeTestConfig* released = _impl_.range_test_;
  _impl_.range_test_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NULLABLE LocalModuleConfig::unsafe_arena_release_range_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalModuleConfig.range_test)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::meshtastic::ModuleConfig_RangeTestConfig* temp = _impl_.range_test_;
  _impl_.range_test_ = nullptr;
  return temp;
}
inline ::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NONNULL LocalModuleConfig::_internal_mutable_range_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.range_test_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_RangeTestConfig>(GetArena());
    _impl_.range_test_ = reinterpret_cast<::meshtastic::ModuleConfig_RangeTestConfig*>(p);
  }
  return _impl_.range_test_;
}
inline ::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NONNULL LocalModuleConfig::mutable_range_test()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::meshtastic::ModuleConfig_RangeTestConfig* _msg = _internal_mutable_range_test();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalModuleConfig.range_test)
  return _msg;
}
inline void LocalModuleConfig::set_allocated_range_test(::meshtastic::ModuleConfig_RangeTestConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.range_test_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.range_test_ = reinterpret_cast<::meshtastic::ModuleConfig_RangeTestConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalModuleConfig.range_test)
}

// .meshtastic.ModuleConfig.TelemetryConfig telemetry = 6;
inline bool LocalModuleConfig::has_telemetry() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.telemetry_ != nullptr);
  return value;
}
inline const ::meshtastic::ModuleConfig_TelemetryConfig& LocalModuleConfig::_internal_telemetry() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::ModuleConfig_TelemetryConfig* p = _impl_.telemetry_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::ModuleConfig_TelemetryConfig&>(::meshtastic::_ModuleConfig_TelemetryConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_TelemetryConfig& LocalModuleConfig::telemetry() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalModuleConfig.telemetry)
  return _internal_telemetry();
}
inline void LocalModuleConfig::unsafe_arena_set_allocated_telemetry(
    ::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.telemetry_);
  }
  _impl_.telemetry_ = reinterpret_cast<::meshtastic::ModuleConfig_TelemetryConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalModuleConfig.telemetry)
}
inline ::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NULLABLE LocalModuleConfig::release_telemetry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::meshtastic::ModuleConfig_TelemetryConfig* released = _impl_.telemetry_;
  _impl_.telemetry_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NULLABLE LocalModuleConfig::unsafe_arena_release_telemetry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalModuleConfig.telemetry)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::meshtastic::ModuleConfig_TelemetryConfig* temp = _impl_.telemetry_;
  _impl_.telemetry_ = nullptr;
  return temp;
}
inline ::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NONNULL LocalModuleConfig::_internal_mutable_telemetry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.telemetry_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_TelemetryConfig>(GetArena());
    _impl_.telemetry_ = reinterpret_cast<::meshtastic::ModuleConfig_TelemetryConfig*>(p);
  }
  return _impl_.telemetry_;
}
inline ::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NONNULL LocalModuleConfig::mutable_telemetry()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::meshtastic::ModuleConfig_TelemetryConfig* _msg = _internal_mutable_telemetry();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalModuleConfig.telemetry)
  return _msg;
}
inline void LocalModuleConfig::set_allocated_telemetry(::meshtastic::ModuleConfig_TelemetryConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.telemetry_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.telemetry_ = reinterpret_cast<::meshtastic::ModuleConfig_TelemetryConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalModuleConfig.telemetry)
}

// .meshtastic.ModuleConfig.CannedMessageConfig canned_message = 7;
inline bool LocalModuleConfig::has_canned_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.canned_message_ != nullptr);
  return value;
}
inline const ::meshtastic::ModuleConfig_CannedMessageConfig& LocalModuleConfig::_internal_canned_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::ModuleConfig_CannedMessageConfig* p = _impl_.canned_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::ModuleConfig_CannedMessageConfig&>(::meshtastic::_ModuleConfig_CannedMessageConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_CannedMessageConfig& LocalModuleConfig::canned_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalModuleConfig.canned_message)
  return _internal_canned_message();
}
inline void LocalModuleConfig::unsafe_arena_set_allocated_canned_message(
    ::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.canned_message_);
  }
  _impl_.canned_message_ = reinterpret_cast<::meshtastic::ModuleConfig_CannedMessageConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalModuleConfig.canned_message)
}
inline ::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NULLABLE LocalModuleConfig::release_canned_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::meshtastic::ModuleConfig_CannedMessageConfig* released = _impl_.canned_message_;
  _impl_.canned_message_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NULLABLE LocalModuleConfig::unsafe_arena_release_canned_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalModuleConfig.canned_message)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::meshtastic::ModuleConfig_CannedMessageConfig* temp = _impl_.canned_message_;
  _impl_.canned_message_ = nullptr;
  return temp;
}
inline ::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NONNULL LocalModuleConfig::_internal_mutable_canned_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.canned_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_CannedMessageConfig>(GetArena());
    _impl_.canned_message_ = reinterpret_cast<::meshtastic::ModuleConfig_CannedMessageConfig*>(p);
  }
  return _impl_.canned_message_;
}
inline ::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NONNULL LocalModuleConfig::mutable_canned_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::meshtastic::ModuleConfig_CannedMessageConfig* _msg = _internal_mutable_canned_message();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalModuleConfig.canned_message)
  return _msg;
}
inline void LocalModuleConfig::set_allocated_canned_message(::meshtastic::ModuleConfig_CannedMessageConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.canned_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.canned_message_ = reinterpret_cast<::meshtastic::ModuleConfig_CannedMessageConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalModuleConfig.canned_message)
}

// .meshtastic.ModuleConfig.AudioConfig audio = 9;
inline bool LocalModuleConfig::has_audio() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.audio_ != nullptr);
  return value;
}
inline const ::meshtastic::ModuleConfig_AudioConfig& LocalModuleConfig::_internal_audio() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::ModuleConfig_AudioConfig* p = _impl_.audio_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::ModuleConfig_AudioConfig&>(::meshtastic::_ModuleConfig_AudioConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_AudioConfig& LocalModuleConfig::audio() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalModuleConfig.audio)
  return _internal_audio();
}
inline void LocalModuleConfig::unsafe_arena_set_allocated_audio(
    ::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.audio_);
  }
  _impl_.audio_ = reinterpret_cast<::meshtastic::ModuleConfig_AudioConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalModuleConfig.audio)
}
inline ::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NULLABLE LocalModuleConfig::release_audio() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::meshtastic::ModuleConfig_AudioConfig* released = _impl_.audio_;
  _impl_.audio_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NULLABLE LocalModuleConfig::unsafe_arena_release_audio() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalModuleConfig.audio)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::meshtastic::ModuleConfig_AudioConfig* temp = _impl_.audio_;
  _impl_.audio_ = nullptr;
  return temp;
}
inline ::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NONNULL LocalModuleConfig::_internal_mutable_audio() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.audio_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_AudioConfig>(GetArena());
    _impl_.audio_ = reinterpret_cast<::meshtastic::ModuleConfig_AudioConfig*>(p);
  }
  return _impl_.audio_;
}
inline ::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NONNULL LocalModuleConfig::mutable_audio()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::meshtastic::ModuleConfig_AudioConfig* _msg = _internal_mutable_audio();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalModuleConfig.audio)
  return _msg;
}
inline void LocalModuleConfig::set_allocated_audio(::meshtastic::ModuleConfig_AudioConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.audio_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.audio_ = reinterpret_cast<::meshtastic::ModuleConfig_AudioConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalModuleConfig.audio)
}

// .meshtastic.ModuleConfig.RemoteHardwareConfig remote_hardware = 10;
inline bool LocalModuleConfig::has_remote_hardware() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.remote_hardware_ != nullptr);
  return value;
}
inline const ::meshtastic::ModuleConfig_RemoteHardwareConfig& LocalModuleConfig::_internal_remote_hardware() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::ModuleConfig_RemoteHardwareConfig* p = _impl_.remote_hardware_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::ModuleConfig_RemoteHardwareConfig&>(::meshtastic::_ModuleConfig_RemoteHardwareConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_RemoteHardwareConfig& LocalModuleConfig::remote_hardware() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalModuleConfig.remote_hardware)
  return _internal_remote_hardware();
}
inline void LocalModuleConfig::unsafe_arena_set_allocated_remote_hardware(
    ::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.remote_hardware_);
  }
  _impl_.remote_hardware_ = reinterpret_cast<::meshtastic::ModuleConfig_RemoteHardwareConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalModuleConfig.remote_hardware)
}
inline ::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NULLABLE LocalModuleConfig::release_remote_hardware() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::meshtastic::ModuleConfig_RemoteHardwareConfig* released = _impl_.remote_hardware_;
  _impl_.remote_hardware_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NULLABLE LocalModuleConfig::unsafe_arena_release_remote_hardware() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalModuleConfig.remote_hardware)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::meshtastic::ModuleConfig_RemoteHardwareConfig* temp = _impl_.remote_hardware_;
  _impl_.remote_hardware_ = nullptr;
  return temp;
}
inline ::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NONNULL LocalModuleConfig::_internal_mutable_remote_hardware() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.remote_hardware_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_RemoteHardwareConfig>(GetArena());
    _impl_.remote_hardware_ = reinterpret_cast<::meshtastic::ModuleConfig_RemoteHardwareConfig*>(p);
  }
  return _impl_.remote_hardware_;
}
inline ::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NONNULL LocalModuleConfig::mutable_remote_hardware()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100u;
  ::meshtastic::ModuleConfig_RemoteHardwareConfig* _msg = _internal_mutable_remote_hardware();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalModuleConfig.remote_hardware)
  return _msg;
}
inline void LocalModuleConfig::set_allocated_remote_hardware(::meshtastic::ModuleConfig_RemoteHardwareConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.remote_hardware_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.remote_hardware_ = reinterpret_cast<::meshtastic::ModuleConfig_RemoteHardwareConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalModuleConfig.remote_hardware)
}

// .meshtastic.ModuleConfig.NeighborInfoConfig neighbor_info = 11;
inline bool LocalModuleConfig::has_neighbor_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.neighbor_info_ != nullptr);
  return value;
}
inline const ::meshtastic::ModuleConfig_NeighborInfoConfig& LocalModuleConfig::_internal_neighbor_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::ModuleConfig_NeighborInfoConfig* p = _impl_.neighbor_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::ModuleConfig_NeighborInfoConfig&>(::meshtastic::_ModuleConfig_NeighborInfoConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_NeighborInfoConfig& LocalModuleConfig::neighbor_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalModuleConfig.neighbor_info)
  return _internal_neighbor_info();
}
inline void LocalModuleConfig::unsafe_arena_set_allocated_neighbor_info(
    ::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.neighbor_info_);
  }
  _impl_.neighbor_info_ = reinterpret_cast<::meshtastic::ModuleConfig_NeighborInfoConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalModuleConfig.neighbor_info)
}
inline ::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NULLABLE LocalModuleConfig::release_neighbor_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::meshtastic::ModuleConfig_NeighborInfoConfig* released = _impl_.neighbor_info_;
  _impl_.neighbor_info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NULLABLE LocalModuleConfig::unsafe_arena_release_neighbor_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalModuleConfig.neighbor_info)

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::meshtastic::ModuleConfig_NeighborInfoConfig* temp = _impl_.neighbor_info_;
  _impl_.neighbor_info_ = nullptr;
  return temp;
}
inline ::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NONNULL LocalModuleConfig::_internal_mutable_neighbor_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.neighbor_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_NeighborInfoConfig>(GetArena());
    _impl_.neighbor_info_ = reinterpret_cast<::meshtastic::ModuleConfig_NeighborInfoConfig*>(p);
  }
  return _impl_.neighbor_info_;
}
inline ::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NONNULL LocalModuleConfig::mutable_neighbor_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000200u;
  ::meshtastic::ModuleConfig_NeighborInfoConfig* _msg = _internal_mutable_neighbor_info();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalModuleConfig.neighbor_info)
  return _msg;
}
inline void LocalModuleConfig::set_allocated_neighbor_info(::meshtastic::ModuleConfig_NeighborInfoConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.neighbor_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }

  _impl_.neighbor_info_ = reinterpret_cast<::meshtastic::ModuleConfig_NeighborInfoConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalModuleConfig.neighbor_info)
}

// .meshtastic.ModuleConfig.AmbientLightingConfig ambient_lighting = 12;
inline bool LocalModuleConfig::has_ambient_lighting() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ambient_lighting_ != nullptr);
  return value;
}
inline const ::meshtastic::ModuleConfig_AmbientLightingConfig& LocalModuleConfig::_internal_ambient_lighting() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::ModuleConfig_AmbientLightingConfig* p = _impl_.ambient_lighting_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::ModuleConfig_AmbientLightingConfig&>(::meshtastic::_ModuleConfig_AmbientLightingConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_AmbientLightingConfig& LocalModuleConfig::ambient_lighting() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalModuleConfig.ambient_lighting)
  return _internal_ambient_lighting();
}
inline void LocalModuleConfig::unsafe_arena_set_allocated_ambient_lighting(
    ::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ambient_lighting_);
  }
  _impl_.ambient_lighting_ = reinterpret_cast<::meshtastic::ModuleConfig_AmbientLightingConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalModuleConfig.ambient_lighting)
}
inline ::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NULLABLE LocalModuleConfig::release_ambient_lighting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::meshtastic::ModuleConfig_AmbientLightingConfig* released = _impl_.ambient_lighting_;
  _impl_.ambient_lighting_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NULLABLE LocalModuleConfig::unsafe_arena_release_ambient_lighting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalModuleConfig.ambient_lighting)

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::meshtastic::ModuleConfig_AmbientLightingConfig* temp = _impl_.ambient_lighting_;
  _impl_.ambient_lighting_ = nullptr;
  return temp;
}
inline ::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NONNULL LocalModuleConfig::_internal_mutable_ambient_lighting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ambient_lighting_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_AmbientLightingConfig>(GetArena());
    _impl_.ambient_lighting_ = reinterpret_cast<::meshtastic::ModuleConfig_AmbientLightingConfig*>(p);
  }
  return _impl_.ambient_lighting_;
}
inline ::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NONNULL LocalModuleConfig::mutable_ambient_lighting()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000400u;
  ::meshtastic::ModuleConfig_AmbientLightingConfig* _msg = _internal_mutable_ambient_lighting();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalModuleConfig.ambient_lighting)
  return _msg;
}
inline void LocalModuleConfig::set_allocated_ambient_lighting(::meshtastic::ModuleConfig_AmbientLightingConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ambient_lighting_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }

  _impl_.ambient_lighting_ = reinterpret_cast<::meshtastic::ModuleConfig_AmbientLightingConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalModuleConfig.ambient_lighting)
}

// .meshtastic.ModuleConfig.DetectionSensorConfig detection_sensor = 13;
inline bool LocalModuleConfig::has_detection_sensor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.detection_sensor_ != nullptr);
  return value;
}
inline const ::meshtastic::ModuleConfig_DetectionSensorConfig& LocalModuleConfig::_internal_detection_sensor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::ModuleConfig_DetectionSensorConfig* p = _impl_.detection_sensor_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::ModuleConfig_DetectionSensorConfig&>(::meshtastic::_ModuleConfig_DetectionSensorConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_DetectionSensorConfig& LocalModuleConfig::detection_sensor() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalModuleConfig.detection_sensor)
  return _internal_detection_sensor();
}
inline void LocalModuleConfig::unsafe_arena_set_allocated_detection_sensor(
    ::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.detection_sensor_);
  }
  _impl_.detection_sensor_ = reinterpret_cast<::meshtastic::ModuleConfig_DetectionSensorConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalModuleConfig.detection_sensor)
}
inline ::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NULLABLE LocalModuleConfig::release_detection_sensor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::meshtastic::ModuleConfig_DetectionSensorConfig* released = _impl_.detection_sensor_;
  _impl_.detection_sensor_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NULLABLE LocalModuleConfig::unsafe_arena_release_detection_sensor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalModuleConfig.detection_sensor)

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::meshtastic::ModuleConfig_DetectionSensorConfig* temp = _impl_.detection_sensor_;
  _impl_.detection_sensor_ = nullptr;
  return temp;
}
inline ::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NONNULL LocalModuleConfig::_internal_mutable_detection_sensor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.detection_sensor_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_DetectionSensorConfig>(GetArena());
    _impl_.detection_sensor_ = reinterpret_cast<::meshtastic::ModuleConfig_DetectionSensorConfig*>(p);
  }
  return _impl_.detection_sensor_;
}
inline ::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NONNULL LocalModuleConfig::mutable_detection_sensor()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000800u;
  ::meshtastic::ModuleConfig_DetectionSensorConfig* _msg = _internal_mutable_detection_sensor();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalModuleConfig.detection_sensor)
  return _msg;
}
inline void LocalModuleConfig::set_allocated_detection_sensor(::meshtastic::ModuleConfig_DetectionSensorConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.detection_sensor_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }

  _impl_.detection_sensor_ = reinterpret_cast<::meshtastic::ModuleConfig_DetectionSensorConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalModuleConfig.detection_sensor)
}

// .meshtastic.ModuleConfig.PaxcounterConfig paxcounter = 14;
inline bool LocalModuleConfig::has_paxcounter() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.paxcounter_ != nullptr);
  return value;
}
inline const ::meshtastic::ModuleConfig_PaxcounterConfig& LocalModuleConfig::_internal_paxcounter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::ModuleConfig_PaxcounterConfig* p = _impl_.paxcounter_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::ModuleConfig_PaxcounterConfig&>(::meshtastic::_ModuleConfig_PaxcounterConfig_default_instance_);
}
inline const ::meshtastic::ModuleConfig_PaxcounterConfig& LocalModuleConfig::paxcounter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.LocalModuleConfig.paxcounter)
  return _internal_paxcounter();
}
inline void LocalModuleConfig::unsafe_arena_set_allocated_paxcounter(
    ::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.paxcounter_);
  }
  _impl_.paxcounter_ = reinterpret_cast<::meshtastic::ModuleConfig_PaxcounterConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.LocalModuleConfig.paxcounter)
}
inline ::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NULLABLE LocalModuleConfig::release_paxcounter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::meshtastic::ModuleConfig_PaxcounterConfig* released = _impl_.paxcounter_;
  _impl_.paxcounter_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NULLABLE LocalModuleConfig::unsafe_arena_release_paxcounter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.LocalModuleConfig.paxcounter)

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::meshtastic::ModuleConfig_PaxcounterConfig* temp = _impl_.paxcounter_;
  _impl_.paxcounter_ = nullptr;
  return temp;
}
inline ::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NONNULL LocalModuleConfig::_internal_mutable_paxcounter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.paxcounter_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::ModuleConfig_PaxcounterConfig>(GetArena());
    _impl_.paxcounter_ = reinterpret_cast<::meshtastic::ModuleConfig_PaxcounterConfig*>(p);
  }
  return _impl_.paxcounter_;
}
inline ::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NONNULL LocalModuleConfig::mutable_paxcounter()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00001000u;
  ::meshtastic::ModuleConfig_PaxcounterConfig* _msg = _internal_mutable_paxcounter();
  // @@protoc_insertion_point(field_mutable:meshtastic.LocalModuleConfig.paxcounter)
  return _msg;
}
inline void LocalModuleConfig::set_allocated_paxcounter(::meshtastic::ModuleConfig_PaxcounterConfig* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.paxcounter_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }

  _impl_.paxcounter_ = reinterpret_cast<::meshtastic::ModuleConfig_PaxcounterConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.LocalModuleConfig.paxcounter)
}

// uint32 version = 8;
inline void LocalModuleConfig::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::uint32_t LocalModuleConfig::version() const {
  // @@protoc_insertion_point(field_get:meshtastic.LocalModuleConfig.version)
  return _internal_version();
}
inline void LocalModuleConfig::set_version(::uint32_t value) {
  _internal_set_version(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:meshtastic.LocalModuleConfig.version)
}
inline ::uint32_t LocalModuleConfig::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void LocalModuleConfig::_internal_set_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace meshtastic


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // meshtastic_2flocalonly_2eproto_2epb_2eh
