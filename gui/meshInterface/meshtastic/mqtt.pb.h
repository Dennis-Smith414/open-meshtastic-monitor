// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: meshtastic/mqtt.proto
// Protobuf C++ Version: 6.32.0

#ifndef meshtastic_2fmqtt_2eproto_2epb_2eh
#define meshtastic_2fmqtt_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "meshtastic/config.pb.h"
#include "meshtastic/mesh.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_meshtastic_2fmqtt_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_meshtastic_2fmqtt_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_meshtastic_2fmqtt_2eproto;
}  // extern "C"
namespace meshtastic {
class MapReport;
struct MapReportDefaultTypeInternal;
extern MapReportDefaultTypeInternal _MapReport_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MapReport_class_data_;
class ServiceEnvelope;
struct ServiceEnvelopeDefaultTypeInternal;
extern ServiceEnvelopeDefaultTypeInternal _ServiceEnvelope_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ServiceEnvelope_class_data_;
}  // namespace meshtastic
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace meshtastic {

// ===================================================================


// -------------------------------------------------------------------

class MapReport final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.MapReport) */ {
 public:
  inline MapReport() : MapReport(nullptr) {}
  ~MapReport() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MapReport* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MapReport));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MapReport(::google::protobuf::internal::ConstantInitialized);

  inline MapReport(const MapReport& from) : MapReport(nullptr, from) {}
  inline MapReport(MapReport&& from) noexcept
      : MapReport(nullptr, ::std::move(from)) {}
  inline MapReport& operator=(const MapReport& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapReport& operator=(MapReport&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MapReport& default_instance() {
    return *reinterpret_cast<const MapReport*>(
        &_MapReport_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MapReport& a, MapReport& b) { a.Swap(&b); }
  inline void Swap(MapReport* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MapReport* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MapReport* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MapReport>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MapReport& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MapReport& from) { MapReport::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MapReport* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.MapReport"; }

 protected:
  explicit MapReport(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MapReport(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MapReport& from);
  MapReport(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MapReport&& from) noexcept
      : MapReport(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLongNameFieldNumber = 1,
    kShortNameFieldNumber = 2,
    kFirmwareVersionFieldNumber = 5,
    kRoleFieldNumber = 3,
    kHwModelFieldNumber = 4,
    kRegionFieldNumber = 6,
    kModemPresetFieldNumber = 7,
    kLatitudeIFieldNumber = 9,
    kLongitudeIFieldNumber = 10,
    kAltitudeFieldNumber = 11,
    kHasDefaultChannelFieldNumber = 8,
    kHasOptedReportLocationFieldNumber = 14,
    kPositionPrecisionFieldNumber = 12,
    kNumOnlineLocalNodesFieldNumber = 13,
  };
  // string long_name = 1;
  void clear_long_name() ;
  const ::std::string& long_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_long_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_long_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_long_name();
  void set_allocated_long_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_long_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_long_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_long_name();

  public:
  // string short_name = 2;
  void clear_short_name() ;
  const ::std::string& short_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_short_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_short_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_short_name();
  void set_allocated_short_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_short_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_short_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_short_name();

  public:
  // string firmware_version = 5;
  void clear_firmware_version() ;
  const ::std::string& firmware_version() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_firmware_version(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_firmware_version();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_firmware_version();
  void set_allocated_firmware_version(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_firmware_version() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_firmware_version(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_firmware_version();

  public:
  // .meshtastic.Config.DeviceConfig.Role role = 3;
  void clear_role() ;
  ::meshtastic::Config_DeviceConfig_Role role() const;
  void set_role(::meshtastic::Config_DeviceConfig_Role value);

  private:
  ::meshtastic::Config_DeviceConfig_Role _internal_role() const;
  void _internal_set_role(::meshtastic::Config_DeviceConfig_Role value);

  public:
  // .meshtastic.HardwareModel hw_model = 4;
  void clear_hw_model() ;
  ::meshtastic::HardwareModel hw_model() const;
  void set_hw_model(::meshtastic::HardwareModel value);

  private:
  ::meshtastic::HardwareModel _internal_hw_model() const;
  void _internal_set_hw_model(::meshtastic::HardwareModel value);

  public:
  // .meshtastic.Config.LoRaConfig.RegionCode region = 6;
  void clear_region() ;
  ::meshtastic::Config_LoRaConfig_RegionCode region() const;
  void set_region(::meshtastic::Config_LoRaConfig_RegionCode value);

  private:
  ::meshtastic::Config_LoRaConfig_RegionCode _internal_region() const;
  void _internal_set_region(::meshtastic::Config_LoRaConfig_RegionCode value);

  public:
  // .meshtastic.Config.LoRaConfig.ModemPreset modem_preset = 7;
  void clear_modem_preset() ;
  ::meshtastic::Config_LoRaConfig_ModemPreset modem_preset() const;
  void set_modem_preset(::meshtastic::Config_LoRaConfig_ModemPreset value);

  private:
  ::meshtastic::Config_LoRaConfig_ModemPreset _internal_modem_preset() const;
  void _internal_set_modem_preset(::meshtastic::Config_LoRaConfig_ModemPreset value);

  public:
  // sfixed32 latitude_i = 9;
  void clear_latitude_i() ;
  ::int32_t latitude_i() const;
  void set_latitude_i(::int32_t value);

  private:
  ::int32_t _internal_latitude_i() const;
  void _internal_set_latitude_i(::int32_t value);

  public:
  // sfixed32 longitude_i = 10;
  void clear_longitude_i() ;
  ::int32_t longitude_i() const;
  void set_longitude_i(::int32_t value);

  private:
  ::int32_t _internal_longitude_i() const;
  void _internal_set_longitude_i(::int32_t value);

  public:
  // int32 altitude = 11;
  void clear_altitude() ;
  ::int32_t altitude() const;
  void set_altitude(::int32_t value);

  private:
  ::int32_t _internal_altitude() const;
  void _internal_set_altitude(::int32_t value);

  public:
  // bool has_default_channel = 8;
  void clear_has_default_channel() ;
  bool has_default_channel() const;
  void set_has_default_channel(bool value);

  private:
  bool _internal_has_default_channel() const;
  void _internal_set_has_default_channel(bool value);

  public:
  // bool has_opted_report_location = 14;
  void clear_has_opted_report_location() ;
  bool has_opted_report_location() const;
  void set_has_opted_report_location(bool value);

  private:
  bool _internal_has_opted_report_location() const;
  void _internal_set_has_opted_report_location(bool value);

  public:
  // uint32 position_precision = 12;
  void clear_position_precision() ;
  ::uint32_t position_precision() const;
  void set_position_precision(::uint32_t value);

  private:
  ::uint32_t _internal_position_precision() const;
  void _internal_set_position_precision(::uint32_t value);

  public:
  // uint32 num_online_local_nodes = 13;
  void clear_num_online_local_nodes() ;
  ::uint32_t num_online_local_nodes() const;
  void set_num_online_local_nodes(::uint32_t value);

  private:
  ::uint32_t _internal_num_online_local_nodes() const;
  void _internal_set_num_online_local_nodes(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.MapReport)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 14,
                                   0, 72,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MapReport& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr long_name_;
    ::google::protobuf::internal::ArenaStringPtr short_name_;
    ::google::protobuf::internal::ArenaStringPtr firmware_version_;
    int role_;
    int hw_model_;
    int region_;
    int modem_preset_;
    ::int32_t latitude_i_;
    ::int32_t longitude_i_;
    ::int32_t altitude_;
    bool has_default_channel_;
    bool has_opted_report_location_;
    ::uint32_t position_precision_;
    ::uint32_t num_online_local_nodes_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fmqtt_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MapReport_class_data_;
// -------------------------------------------------------------------

class ServiceEnvelope final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:meshtastic.ServiceEnvelope) */ {
 public:
  inline ServiceEnvelope() : ServiceEnvelope(nullptr) {}
  ~ServiceEnvelope() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ServiceEnvelope* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ServiceEnvelope));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ServiceEnvelope(::google::protobuf::internal::ConstantInitialized);

  inline ServiceEnvelope(const ServiceEnvelope& from) : ServiceEnvelope(nullptr, from) {}
  inline ServiceEnvelope(ServiceEnvelope&& from) noexcept
      : ServiceEnvelope(nullptr, ::std::move(from)) {}
  inline ServiceEnvelope& operator=(const ServiceEnvelope& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServiceEnvelope& operator=(ServiceEnvelope&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServiceEnvelope& default_instance() {
    return *reinterpret_cast<const ServiceEnvelope*>(
        &_ServiceEnvelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ServiceEnvelope& a, ServiceEnvelope& b) { a.Swap(&b); }
  inline void Swap(ServiceEnvelope* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServiceEnvelope* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServiceEnvelope* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ServiceEnvelope>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServiceEnvelope& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ServiceEnvelope& from) { ServiceEnvelope::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ServiceEnvelope* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "meshtastic.ServiceEnvelope"; }

 protected:
  explicit ServiceEnvelope(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ServiceEnvelope(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ServiceEnvelope& from);
  ServiceEnvelope(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ServiceEnvelope&& from) noexcept
      : ServiceEnvelope(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelIdFieldNumber = 2,
    kGatewayIdFieldNumber = 3,
    kPacketFieldNumber = 1,
  };
  // string channel_id = 2;
  void clear_channel_id() ;
  const ::std::string& channel_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_channel_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_channel_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_channel_id();
  void set_allocated_channel_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_channel_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_channel_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_channel_id();

  public:
  // string gateway_id = 3;
  void clear_gateway_id() ;
  const ::std::string& gateway_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_gateway_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_gateway_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_gateway_id();
  void set_allocated_gateway_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_gateway_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_gateway_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_gateway_id();

  public:
  // .meshtastic.MeshPacket packet = 1;
  bool has_packet() const;
  void clear_packet() ;
  const ::meshtastic::MeshPacket& packet() const;
  [[nodiscard]] ::meshtastic::MeshPacket* PROTOBUF_NULLABLE release_packet();
  ::meshtastic::MeshPacket* PROTOBUF_NONNULL mutable_packet();
  void set_allocated_packet(::meshtastic::MeshPacket* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_packet(::meshtastic::MeshPacket* PROTOBUF_NULLABLE value);
  ::meshtastic::MeshPacket* PROTOBUF_NULLABLE unsafe_arena_release_packet();

  private:
  const ::meshtastic::MeshPacket& _internal_packet() const;
  ::meshtastic::MeshPacket* PROTOBUF_NONNULL _internal_mutable_packet();

  public:
  // @@protoc_insertion_point(class_scope:meshtastic.ServiceEnvelope)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 55,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ServiceEnvelope& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr channel_id_;
    ::google::protobuf::internal::ArenaStringPtr gateway_id_;
    ::meshtastic::MeshPacket* PROTOBUF_NULLABLE packet_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meshtastic_2fmqtt_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ServiceEnvelope_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ServiceEnvelope

// .meshtastic.MeshPacket packet = 1;
inline bool ServiceEnvelope::has_packet() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.packet_ != nullptr);
  return value;
}
inline const ::meshtastic::MeshPacket& ServiceEnvelope::_internal_packet() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::meshtastic::MeshPacket* p = _impl_.packet_;
  return p != nullptr ? *p : reinterpret_cast<const ::meshtastic::MeshPacket&>(::meshtastic::_MeshPacket_default_instance_);
}
inline const ::meshtastic::MeshPacket& ServiceEnvelope::packet() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ServiceEnvelope.packet)
  return _internal_packet();
}
inline void ServiceEnvelope::unsafe_arena_set_allocated_packet(
    ::meshtastic::MeshPacket* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.packet_);
  }
  _impl_.packet_ = reinterpret_cast<::meshtastic::MeshPacket*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:meshtastic.ServiceEnvelope.packet)
}
inline ::meshtastic::MeshPacket* PROTOBUF_NULLABLE ServiceEnvelope::release_packet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::meshtastic::MeshPacket* released = _impl_.packet_;
  _impl_.packet_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::meshtastic::MeshPacket* PROTOBUF_NULLABLE ServiceEnvelope::unsafe_arena_release_packet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.ServiceEnvelope.packet)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::meshtastic::MeshPacket* temp = _impl_.packet_;
  _impl_.packet_ = nullptr;
  return temp;
}
inline ::meshtastic::MeshPacket* PROTOBUF_NONNULL ServiceEnvelope::_internal_mutable_packet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.packet_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::meshtastic::MeshPacket>(GetArena());
    _impl_.packet_ = reinterpret_cast<::meshtastic::MeshPacket*>(p);
  }
  return _impl_.packet_;
}
inline ::meshtastic::MeshPacket* PROTOBUF_NONNULL ServiceEnvelope::mutable_packet()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::meshtastic::MeshPacket* _msg = _internal_mutable_packet();
  // @@protoc_insertion_point(field_mutable:meshtastic.ServiceEnvelope.packet)
  return _msg;
}
inline void ServiceEnvelope::set_allocated_packet(::meshtastic::MeshPacket* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.packet_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.packet_ = reinterpret_cast<::meshtastic::MeshPacket*>(value);
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ServiceEnvelope.packet)
}

// string channel_id = 2;
inline void ServiceEnvelope::clear_channel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ServiceEnvelope::channel_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ServiceEnvelope.channel_id)
  return _internal_channel_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ServiceEnvelope::set_channel_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.channel_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.ServiceEnvelope.channel_id)
}
inline ::std::string* PROTOBUF_NONNULL ServiceEnvelope::mutable_channel_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_channel_id();
  // @@protoc_insertion_point(field_mutable:meshtastic.ServiceEnvelope.channel_id)
  return _s;
}
inline const ::std::string& ServiceEnvelope::_internal_channel_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_id_.Get();
}
inline void ServiceEnvelope::_internal_set_channel_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.channel_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ServiceEnvelope::_internal_mutable_channel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.channel_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ServiceEnvelope::release_channel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.ServiceEnvelope.channel_id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.channel_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.channel_id_.Set("", GetArena());
  }
  return released;
}
inline void ServiceEnvelope::set_allocated_channel_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.channel_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.channel_id_.IsDefault()) {
    _impl_.channel_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ServiceEnvelope.channel_id)
}

// string gateway_id = 3;
inline void ServiceEnvelope::clear_gateway_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gateway_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& ServiceEnvelope::gateway_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.ServiceEnvelope.gateway_id)
  return _internal_gateway_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ServiceEnvelope::set_gateway_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.gateway_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.ServiceEnvelope.gateway_id)
}
inline ::std::string* PROTOBUF_NONNULL ServiceEnvelope::mutable_gateway_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_gateway_id();
  // @@protoc_insertion_point(field_mutable:meshtastic.ServiceEnvelope.gateway_id)
  return _s;
}
inline const ::std::string& ServiceEnvelope::_internal_gateway_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gateway_id_.Get();
}
inline void ServiceEnvelope::_internal_set_gateway_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.gateway_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ServiceEnvelope::_internal_mutable_gateway_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.gateway_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ServiceEnvelope::release_gateway_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.ServiceEnvelope.gateway_id)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.gateway_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.gateway_id_.Set("", GetArena());
  }
  return released;
}
inline void ServiceEnvelope::set_allocated_gateway_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.gateway_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.gateway_id_.IsDefault()) {
    _impl_.gateway_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.ServiceEnvelope.gateway_id)
}

// -------------------------------------------------------------------

// MapReport

// string long_name = 1;
inline void MapReport::clear_long_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.long_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& MapReport::long_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.MapReport.long_name)
  return _internal_long_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MapReport::set_long_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.long_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.MapReport.long_name)
}
inline ::std::string* PROTOBUF_NONNULL MapReport::mutable_long_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_long_name();
  // @@protoc_insertion_point(field_mutable:meshtastic.MapReport.long_name)
  return _s;
}
inline const ::std::string& MapReport::_internal_long_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.long_name_.Get();
}
inline void MapReport::_internal_set_long_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.long_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MapReport::_internal_mutable_long_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.long_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MapReport::release_long_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.MapReport.long_name)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.long_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.long_name_.Set("", GetArena());
  }
  return released;
}
inline void MapReport::set_allocated_long_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.long_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.long_name_.IsDefault()) {
    _impl_.long_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.MapReport.long_name)
}

// string short_name = 2;
inline void MapReport::clear_short_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.short_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& MapReport::short_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.MapReport.short_name)
  return _internal_short_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MapReport::set_short_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.short_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.MapReport.short_name)
}
inline ::std::string* PROTOBUF_NONNULL MapReport::mutable_short_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_short_name();
  // @@protoc_insertion_point(field_mutable:meshtastic.MapReport.short_name)
  return _s;
}
inline const ::std::string& MapReport::_internal_short_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.short_name_.Get();
}
inline void MapReport::_internal_set_short_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.short_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MapReport::_internal_mutable_short_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.short_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MapReport::release_short_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.MapReport.short_name)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.short_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.short_name_.Set("", GetArena());
  }
  return released;
}
inline void MapReport::set_allocated_short_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.short_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.short_name_.IsDefault()) {
    _impl_.short_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.MapReport.short_name)
}

// .meshtastic.Config.DeviceConfig.Role role = 3;
inline void MapReport::clear_role() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::meshtastic::Config_DeviceConfig_Role MapReport::role() const {
  // @@protoc_insertion_point(field_get:meshtastic.MapReport.role)
  return _internal_role();
}
inline void MapReport::set_role(::meshtastic::Config_DeviceConfig_Role value) {
  _internal_set_role(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:meshtastic.MapReport.role)
}
inline ::meshtastic::Config_DeviceConfig_Role MapReport::_internal_role() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::meshtastic::Config_DeviceConfig_Role>(_impl_.role_);
}
inline void MapReport::_internal_set_role(::meshtastic::Config_DeviceConfig_Role value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_ = value;
}

// .meshtastic.HardwareModel hw_model = 4;
inline void MapReport::clear_hw_model() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hw_model_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::meshtastic::HardwareModel MapReport::hw_model() const {
  // @@protoc_insertion_point(field_get:meshtastic.MapReport.hw_model)
  return _internal_hw_model();
}
inline void MapReport::set_hw_model(::meshtastic::HardwareModel value) {
  _internal_set_hw_model(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:meshtastic.MapReport.hw_model)
}
inline ::meshtastic::HardwareModel MapReport::_internal_hw_model() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::meshtastic::HardwareModel>(_impl_.hw_model_);
}
inline void MapReport::_internal_set_hw_model(::meshtastic::HardwareModel value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hw_model_ = value;
}

// string firmware_version = 5;
inline void MapReport::clear_firmware_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.firmware_version_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& MapReport::firmware_version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meshtastic.MapReport.firmware_version)
  return _internal_firmware_version();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MapReport::set_firmware_version(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.firmware_version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meshtastic.MapReport.firmware_version)
}
inline ::std::string* PROTOBUF_NONNULL MapReport::mutable_firmware_version()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_firmware_version();
  // @@protoc_insertion_point(field_mutable:meshtastic.MapReport.firmware_version)
  return _s;
}
inline const ::std::string& MapReport::_internal_firmware_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.firmware_version_.Get();
}
inline void MapReport::_internal_set_firmware_version(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.firmware_version_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MapReport::_internal_mutable_firmware_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.firmware_version_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MapReport::release_firmware_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:meshtastic.MapReport.firmware_version)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.firmware_version_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.firmware_version_.Set("", GetArena());
  }
  return released;
}
inline void MapReport::set_allocated_firmware_version(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.firmware_version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.firmware_version_.IsDefault()) {
    _impl_.firmware_version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:meshtastic.MapReport.firmware_version)
}

// .meshtastic.Config.LoRaConfig.RegionCode region = 6;
inline void MapReport::clear_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline ::meshtastic::Config_LoRaConfig_RegionCode MapReport::region() const {
  // @@protoc_insertion_point(field_get:meshtastic.MapReport.region)
  return _internal_region();
}
inline void MapReport::set_region(::meshtastic::Config_LoRaConfig_RegionCode value) {
  _internal_set_region(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:meshtastic.MapReport.region)
}
inline ::meshtastic::Config_LoRaConfig_RegionCode MapReport::_internal_region() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::meshtastic::Config_LoRaConfig_RegionCode>(_impl_.region_);
}
inline void MapReport::_internal_set_region(::meshtastic::Config_LoRaConfig_RegionCode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_ = value;
}

// .meshtastic.Config.LoRaConfig.ModemPreset modem_preset = 7;
inline void MapReport::clear_modem_preset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modem_preset_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline ::meshtastic::Config_LoRaConfig_ModemPreset MapReport::modem_preset() const {
  // @@protoc_insertion_point(field_get:meshtastic.MapReport.modem_preset)
  return _internal_modem_preset();
}
inline void MapReport::set_modem_preset(::meshtastic::Config_LoRaConfig_ModemPreset value) {
  _internal_set_modem_preset(value);
  _impl_._has_bits_[0] |= 0x00000040U;
  // @@protoc_insertion_point(field_set:meshtastic.MapReport.modem_preset)
}
inline ::meshtastic::Config_LoRaConfig_ModemPreset MapReport::_internal_modem_preset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::meshtastic::Config_LoRaConfig_ModemPreset>(_impl_.modem_preset_);
}
inline void MapReport::_internal_set_modem_preset(::meshtastic::Config_LoRaConfig_ModemPreset value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modem_preset_ = value;
}

// bool has_default_channel = 8;
inline void MapReport::clear_has_default_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.has_default_channel_ = false;
  _impl_._has_bits_[0] &= ~0x00000400U;
}
inline bool MapReport::has_default_channel() const {
  // @@protoc_insertion_point(field_get:meshtastic.MapReport.has_default_channel)
  return _internal_has_default_channel();
}
inline void MapReport::set_has_default_channel(bool value) {
  _internal_set_has_default_channel(value);
  _impl_._has_bits_[0] |= 0x00000400U;
  // @@protoc_insertion_point(field_set:meshtastic.MapReport.has_default_channel)
}
inline bool MapReport::_internal_has_default_channel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.has_default_channel_;
}
inline void MapReport::_internal_set_has_default_channel(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.has_default_channel_ = value;
}

// sfixed32 latitude_i = 9;
inline void MapReport::clear_latitude_i() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_i_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080U;
}
inline ::int32_t MapReport::latitude_i() const {
  // @@protoc_insertion_point(field_get:meshtastic.MapReport.latitude_i)
  return _internal_latitude_i();
}
inline void MapReport::set_latitude_i(::int32_t value) {
  _internal_set_latitude_i(value);
  _impl_._has_bits_[0] |= 0x00000080U;
  // @@protoc_insertion_point(field_set:meshtastic.MapReport.latitude_i)
}
inline ::int32_t MapReport::_internal_latitude_i() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latitude_i_;
}
inline void MapReport::_internal_set_latitude_i(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_i_ = value;
}

// sfixed32 longitude_i = 10;
inline void MapReport::clear_longitude_i() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_i_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100U;
}
inline ::int32_t MapReport::longitude_i() const {
  // @@protoc_insertion_point(field_get:meshtastic.MapReport.longitude_i)
  return _internal_longitude_i();
}
inline void MapReport::set_longitude_i(::int32_t value) {
  _internal_set_longitude_i(value);
  _impl_._has_bits_[0] |= 0x00000100U;
  // @@protoc_insertion_point(field_set:meshtastic.MapReport.longitude_i)
}
inline ::int32_t MapReport::_internal_longitude_i() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.longitude_i_;
}
inline void MapReport::_internal_set_longitude_i(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_i_ = value;
}

// int32 altitude = 11;
inline void MapReport::clear_altitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.altitude_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200U;
}
inline ::int32_t MapReport::altitude() const {
  // @@protoc_insertion_point(field_get:meshtastic.MapReport.altitude)
  return _internal_altitude();
}
inline void MapReport::set_altitude(::int32_t value) {
  _internal_set_altitude(value);
  _impl_._has_bits_[0] |= 0x00000200U;
  // @@protoc_insertion_point(field_set:meshtastic.MapReport.altitude)
}
inline ::int32_t MapReport::_internal_altitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.altitude_;
}
inline void MapReport::_internal_set_altitude(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.altitude_ = value;
}

// uint32 position_precision = 12;
inline void MapReport::clear_position_precision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_precision_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000U;
}
inline ::uint32_t MapReport::position_precision() const {
  // @@protoc_insertion_point(field_get:meshtastic.MapReport.position_precision)
  return _internal_position_precision();
}
inline void MapReport::set_position_precision(::uint32_t value) {
  _internal_set_position_precision(value);
  _impl_._has_bits_[0] |= 0x00001000U;
  // @@protoc_insertion_point(field_set:meshtastic.MapReport.position_precision)
}
inline ::uint32_t MapReport::_internal_position_precision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.position_precision_;
}
inline void MapReport::_internal_set_position_precision(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_precision_ = value;
}

// uint32 num_online_local_nodes = 13;
inline void MapReport::clear_num_online_local_nodes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_online_local_nodes_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000U;
}
inline ::uint32_t MapReport::num_online_local_nodes() const {
  // @@protoc_insertion_point(field_get:meshtastic.MapReport.num_online_local_nodes)
  return _internal_num_online_local_nodes();
}
inline void MapReport::set_num_online_local_nodes(::uint32_t value) {
  _internal_set_num_online_local_nodes(value);
  _impl_._has_bits_[0] |= 0x00002000U;
  // @@protoc_insertion_point(field_set:meshtastic.MapReport.num_online_local_nodes)
}
inline ::uint32_t MapReport::_internal_num_online_local_nodes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_online_local_nodes_;
}
inline void MapReport::_internal_set_num_online_local_nodes(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_online_local_nodes_ = value;
}

// bool has_opted_report_location = 14;
inline void MapReport::clear_has_opted_report_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.has_opted_report_location_ = false;
  _impl_._has_bits_[0] &= ~0x00000800U;
}
inline bool MapReport::has_opted_report_location() const {
  // @@protoc_insertion_point(field_get:meshtastic.MapReport.has_opted_report_location)
  return _internal_has_opted_report_location();
}
inline void MapReport::set_has_opted_report_location(bool value) {
  _internal_set_has_opted_report_location(value);
  _impl_._has_bits_[0] |= 0x00000800U;
  // @@protoc_insertion_point(field_set:meshtastic.MapReport.has_opted_report_location)
}
inline bool MapReport::_internal_has_opted_report_location() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.has_opted_report_location_;
}
inline void MapReport::_internal_set_has_opted_report_location(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.has_opted_report_location_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace meshtastic


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // meshtastic_2fmqtt_2eproto_2epb_2eh
